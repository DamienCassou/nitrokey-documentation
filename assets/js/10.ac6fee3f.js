(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{499:function(t,a,s){"use strict";s.r(a);var e=s(33),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"creating-a-certificate-authority"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-certificate-authority"}},[t._v("#")]),t._v(" Creating a Certificate Authority")]),t._v(" "),s("p",[t._v("This article shows you how to setup your own private certificate authority backed by a Nitrokey HSM. This certificate authority has no automation and does not really scale. Other open source projects can be referenced for automation and scalability.")]),t._v(" "),s("h2",{attrs:{id:"choose-cryptographic-algorithms"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#choose-cryptographic-algorithms"}},[t._v("#")]),t._v(" Choose Cryptographic Algorithms")]),t._v(" "),s("p",[t._v("I'm going to assume that you're as paranoid as I am, so I will be using the following command for generating private keys:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("pkcs11-tool -l --keypairgen --key-type EC:secp384r1 --label root\n")])])]),s("p",[t._v("But, if you're less paranoid that I am, you can safely choose the following options:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("pkcs11-tool -l --keypairgen --key-type EC:secp256r1 --label root\npkcs11-tool -l --keypairgen --key-type rsa:4096 --label root\n")])])]),s("p",[t._v("Likewise, I will be using the sha512 algorithm throughout this article, but sha256 can safely be used.")]),t._v(" "),s("h2",{attrs:{id:"preparing-to-start"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#preparing-to-start"}},[t._v("#")]),t._v(" Preparing to Start")]),t._v(" "),s("p",[t._v("To start with, you need to pick a directory to store your CA.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("pki_dir")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/opt/certificate-authority\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$pki_dir")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$pki_dir")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" certs config crl newcerts intermediate intermediate/certs intermediate/crl intermediate/csr intermediate/newcerts\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),t._v(" index.txt intermediate/index.txt\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" config\n")])])]),s("p",[t._v("Install the necessary tools:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Arch Linux")]),t._v("\npacman -S community/opensc community/libp11\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Ubunutu")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" opensc gnutls_bin\n")])])]),s("h2",{attrs:{id:"creating-the-root-certificate-authority"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creating-the-root-certificate-authority"}},[t._v("#")]),t._v(" Creating the Root Certificate Authority")]),t._v(" "),s("p",[t._v("We start by generating the private key for the certificate authority directly on the Nitrokey HSM. This allows us to use the private key in the future, but not access it.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Generate private key on HSM")]),t._v("\n$ pkcs11-tool -l --keypairgen --key-type EC:secp384r1 --label root\nUsing slot "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" with a present token "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0x0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nLogging "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" to "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SmartCard-HSM (UserPIN)"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\nPlease enter User PIN:\nKey pair generated:\nPrivate Key Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" EC\n  label:      root\n  ID:         e0161cc8b6f5d66ac6835ecdecb623fc0506a675\n  Usage:      sign, derive\n  Access:     none\nPublic Key Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" EC  EC_POINT "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("384")]),t._v(" bits\n  EC_POINT:   046104c1e7b40e1ef9e5d47399aeeda695026c9eb626462059eb696e8f2b647b42d64ac3b7fc7a5b31aa3edf9bce46b2cdcf8e5d190b13601d3d14ffb119c8cf60033c6b78ba579b85113ca536eef1cf85ba418ff0110a56ec881b329e0562e090a3e7\n  EC_PARAMS:  06052b81040022\n  label:      root\n  ID:         e0161cc8b6f5d66ac6835ecdecb623fc0506a675\n  Usage:      verify, derive\n  Access:     none\n")])])]),s("p",[t._v("Note the ID number (e0161cc8b6f5d66ac6835ecdecb623fc0506a675), we'll need it later.")]),t._v(" "),s("p",[t._v("If you need the ID in the future, you can list the keys on the Nitrokey HSM:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("pkcs11-tool -O\n")])])]),s("p",[t._v("We need to create a config file to generate a self-signed public certificate.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" create_root_cert.ini\n")])])]),s("p",[t._v("Fill out the request information in <angle brackets> with information for your CA.")]),t._v(" "),s("div",{staticClass:"language-ini extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[ ca ]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# `man ca`")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("default_ca")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" CA_default")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[ CA_default ]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Directory and file locations.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("dir")]),t._v("               "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" /opt/certificate-authority")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("certs")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" $dir/certs")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("crl_dir")]),t._v("           "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" $dir/crl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("new_certs_dir")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" $dir/newcerts")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("database")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" $dir/index.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("serial")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" $dir/serial")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# SHA-1 is deprecated, so use SHA-2 instead.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("default_md")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" sha512")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("name_opt")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" ca_default")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("cert_opt")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" ca_default")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("default_days")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" 375")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("preserve")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" no")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("policy")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" policy_strict")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[ policy_strict ]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The root CA should only sign intermediate certificates that match.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# See the POLICY FORMAT section of `man ca`.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("countryName")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" match")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("stateOrProvinceName")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" match")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("organizationName")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" match")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("organizationalUnitName")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" optional")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("commonName")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" supplied")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("emailAddress")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" optional")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[ req ]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Options for the `req` tool (`man req`).")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("default_bits")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" 4096")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("distinguished_name")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" req_distinguished_name")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("string_mask")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" utf8only")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("prompt")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" no")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# SHA-1 is deprecated, so use SHA-2 instead.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("default_md")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" sha512")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[ req_distinguished_name ]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("C")]),t._v("                   "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" <two lettter country>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ST")]),t._v("                  "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" <full state name>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),t._v("                   "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" <your company>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OU")]),t._v("                  "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" <your company> Certificate Authority")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CN")]),t._v("                  "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" <your company> Root CA")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[ v3_ca ]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Extensions for a typical CA (`man x509v3_config`).")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("subjectKeyIdentifier")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" hash")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("authorityKeyIdentifier")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" keyid:always,issuer")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("basicConstraints")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" critical, CA:true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("keyUsage")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" critical, digitalSignature, cRLSign, keyCertSign")]),t._v("\n")])])]),s("p",[t._v("Generate the self-signed public certificate from the private key. Use the private key id value from earlier.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ openssl req -config create_root_cert.ini -engine pkcs11 -keyform engine -key e0161cc8b6f5d66ac6835ecdecb623fc0506a675 -new -x509 -days "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3650")]),t._v(" -sha512 -extensions v3_ca -out "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/certs/root.crt\nengine "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pkcs11"')]),t._v(" set.\nEnter PKCS"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#11 token PIN for SmartCard-HSM (UserPIN):")]),t._v("\n")])])]),s("p",[t._v("Verify that the root certificate was generated correctly. Verify that Signature-Algorithm matches above and below. Verify that Issuer and Subject match, all root certificates are self signed. Verify that Key Usage matches what was in the v3_ca information in our config file.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ openssl x509 -noout -text -in "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/certs/root.crt\nCertificate:\n    Data:\n        Version: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0x2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        Serial Number:\n            "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v(":ac:e1:36:75:67:26:1d:bb:96:4b:84:c2:2d:83:25:7b:cc:e0:e5\n        Signature Algorithm: ecdsa-with-SHA512\n        Issuer: C "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" US, ST "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" My State, O "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" My Company, OU "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" My Company Certificate Authority, CN "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" My Company Root CA\n        Validity\n            Not Before: Aug "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(":13:20 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v(" GMT\n            Not After "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" Aug "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(":13:20 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2030")]),t._v(" GMT\n        Subject: C "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" US, ST "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" My State, O "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" My Company, OU "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" My Company Certificate Authority, CN "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" My Company Root CA\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("384")]),t._v(" bit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                pub:\n                    04:c1:e7:b4:0e:1e:f9:e5:d4:73:99:ae:ed:a6:95:\n                    02:6c:9e:b6:26:46:20:59:eb:69:6e:8f:2b:64:7b:\n                    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v(":d6:4a:c3:b7:fc:7a:5b:31:aa:3e:df:9b:ce:46:\n                    b2:cd:cf:8e:5d:19:0b:13:60:1d:3d:14:ff:b1:19:\n                    c8:cf:60:03:3c:6b:78:ba:57:9b:85:11:3c:a5:36:\n                    ee:f1:cf:85:ba:41:8f:f0:11:0a:56:ec:88:1b:32:\n                    9e:05:62:e0:90:a3:e7\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Subject Key Identifier:\n                F1:FA:61:75:0B:AC:3C:95:97:EF:73:3C:3F:38:22:B1:DB:D9:BF:41\n            X509v3 Authority Key Identifier:\n                keyid:F1:FA:61:75:0B:AC:3C:95:97:EF:73:3C:3F:38:22:B1:DB:D9:BF:41\n\n            X509v3 Basic Constraints: critical\n                CA:TRUE\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n    Signature Algorithm: ecdsa-with-SHA512\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(":64:02:30:53:b8:b6:5a:41:4b:4f:6a:d1:a6:76:88:df:13:\n         d6:da:c7:48:aa:8b:aa:ff:13:6c:d1:00:53:90:92:b5:71:57:\n         eb:d0:bf:3e:5d:2e:62:c0:3e:40:0f:64:25:a5:92:0f:02:30:\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(":0a:19:d5:a2:09:86:d8:9d:07:67:71:c3:84:f2:6b:90:20:\n         2d:29:10:9e:4c:73:7a:55:56:4b:dc:fe:8d:3f:f0:9c:20:e1:\n         5a:74:fb:41:86:ad:a4:66:61:74:d7:fd\n")])])]),s("h2",{attrs:{id:"creating-the-intermediate-certificate-authority"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creating-the-intermediate-certificate-authority"}},[t._v("#")]),t._v(" Creating the Intermediate Certificate Authority")]),t._v(" "),s("p",[t._v("We continue by generating the private key for the intermediate certificate authority directly on the Nitrokey HSM. This allows us to use the private key in the future, but not access it.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Generate private key on HSM")]),t._v("\n$ pkcs11-tool -l --keypairgen --key-type EC:secp384r1 --label intermediate\nUsing slot "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" with a present token "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0x0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nLogging "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" to "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SmartCard-HSM (UserPIN)"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\nPlease enter User PIN:\nKey pair generated:\nPrivate Key Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" EC\n  label:      intermediate\n  ID:         bcb48fe9b566ae61891aabbfde6a23d4ff3ab639\n  Usage:      sign, derive\n  Access:     none\nPublic Key Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" EC  EC_POINT "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("384")]),t._v(" bits\n  EC_POINT:   046104d0fb5c0cd10c0b6e4d0f6986755824b624ec9fcd8ff9ae5f0109fe6ff3ad887ca760717da894f3ff84dc8c24fe8c93b0cd840a6aa941bb2866c061cef60e47b893d71852b50d6762af10c951426e55ec8925a6cd83aeae1730311108afdbcdee\n  EC_PARAMS:  06052b81040022\n  label:      intermediate\n  ID:         bcb48fe9b566ae61891aabbfde6a23d4ff3ab639\n  Usage:      verify, derive\n  Access:     none\n")])])]),s("p",[t._v("Note the ID number (bcb48fe9b566ae61891aabbfde6a23d4ff3ab639), we'll need it later.")]),t._v(" "),s("p",[t._v("If you need the ID in the future, you can list the keys on the Nitrokey HSM:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("pkcs11-tool -O\n")])])]),s("p",[t._v("We need to create a config file to generate a self-signed public certificate.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" create_intermediate_csr.ini\n")])])]),s("p",[t._v("Fill out the request information in <angle brackets> with information for your CA.")]),t._v(" "),s("div",{staticClass:"language-ini extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[ req ]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Options for the `req` tool (`man req`).")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("default_bits")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" 4096")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("distinguished_name")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" req_distinguished_name")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("string_mask")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" utf8only")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("prompt")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" no")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# SHA-1 is deprecated, so use SHA-2 instead.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[ v3_ca ]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Extensions for a typical CA (`man x509v3_config`).")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("subjectKeyIdentifier")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" hash")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("authorityKeyIdentifier")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" keyid:always,issuer")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("basicConstraints")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" critical, CA:true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("keyUsage")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" critical, digitalSignature, cRLSign, keyCertSign")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("default_md")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" sha512")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[ req_distinguished_name ]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("C")]),t._v("                   "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" <two lettter country>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ST")]),t._v("                  "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" <full state name>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),t._v("                   "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" <your company>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OU")]),t._v("                  "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" <your company> Certificate Authority")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CN")]),t._v("                  "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" <your company> Intermediate CA")]),t._v("\n")])])]),s("p",[t._v("Generate the certificate signing request for the intermediate CA from the intermediate CA's private key. Use the private key ID value from earlier.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ openssl req -config create_intermediate_csr.ini -engine pkcs11 -keyform engine -key bcb48fe9b566ae61891aabbfde6a23d4ff3ab639 -new -sha512 -out "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/intermediate/csr/intermediate.csr\nengine "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pkcs11"')]),t._v(" set.\nEnter PKCS"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#11 token PIN for SmartCard-HSM (UserPIN):")]),t._v("\n")])])]),s("p",[t._v("Verify that the CSR was created correctly. Verify that your Subject is correct. Verify that your Public Key and Signature Algorithm are correct.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ openssl req -text -noout -verify -in "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/intermediate/csr/intermediate.csr\nverify OK\nCertificate Request:\n    Data:\n        Version: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0x0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        Subject: C "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" US, ST "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" My State, O "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" My Company, OU "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" My Company Certificate Authority, CN "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" My Company Intermediate CA\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("384")]),t._v(" bit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                pub:\n                    04:d0:fb:5c:0c:d1:0c:0b:6e:4d:0f:69:86:75:58:\n                    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(":b6:24:ec:9f:cd:8f:f9:ae:5f:01:09:fe:6f:f3:\n                    ad:88:7c:a7:60:71:7d:a8:94:f3:ff:84:dc:8c:24:\n                    fe:8c:93:b0:cd:84:0a:6a:a9:41:bb:28:66:c0:61:\n                    ce:f6:0e:47:b8:93:d7:18:52:b5:0d:67:62:af:10:\n                    c9:51:42:6e:55:ec:89:25:a6:cd:83:ae:ae:17:30:\n                    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),t._v(":11:08:af:db:cd:ee\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        Attributes:\n            a0:00\n    Signature Algorithm: ecdsa-with-SHA512\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(":64:02:30:6a:1d:75:8b:59:99:2c:a8:5d:a0:7f:02:7d:9a:\n         aa:40:74:7a:65:20:03:6b:bc:65:fb:7d:d1:7f:5b:24:ae:6f:\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v(":16:ac:82:0b:80:9b:81:f9:d9:64:ea:0f:41:4c:d7:02:30:\n         4d:28:7f:e3:76:52:c7:10:e1:bd:b7:2e:ea:65:78:41:0c:96:\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v(":5f:e9:1f:be:18:ac:14:ba:65:3f:b0:2a:f4:0f:d0:56:ab:\n         d0:8c:bf:d0:92:9e:f6:e5:f6:8a:af:a5\n")])])]),s("p",[t._v("We need to find out the fully qualified PKCS#11 URI for your private key:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ p11tool --list-all\nwarning: no token URL was provided "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" this operation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" the available tokens are:\n\npkcs11:model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PKCS%2315%20emulated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("manufacturer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("www.CardContact.de"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("serial")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DENK0104068"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("token")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("SmartCard-HSM%20%28UserPIN%29%00%00%00%00%00%00%00%00%00\n\n$ p11tool --login --list-all pkcs11:model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PKCS%2315%20emulated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("manufacturer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("www.CardContact.de"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("serial")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DENK0104068"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("token")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("SmartCard-HSM%20%28UserPIN%29%00%00%00%00%00%00%00%00%00\nToken "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SmartCard-HSM (UserPIN)'")]),t._v(" with URL "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pkcs11:model=PKCS%2315%20emulated;manufacturer=www.CardContact.de;serial=DENK0104068;token=SmartCard-HSM%20%28UserPIN%29%00%00%00%00%00%00%00%00%00'")]),t._v(" requires user PIN\nEnter PIN:\nObject "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(":\n        URL: pkcs11:model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PKCS%2315%20emulated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("manufacturer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("www.CardContact.de"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("serial")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DENK0104068"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("token")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("SmartCard-HSM%20%28UserPIN%29%00%00%00%00%00%00%00%00%00"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("%E0%16%1C%C8%B6%F5%D6%6A%C6%83%5E%CD%EC%B6%23%FC%05%06%A6%75"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("object")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("private\n        Type: Private key "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EC/ECDSA-SECP384R1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        Label: root\n        Flags: CKA_PRIVATE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" CKA_NEVER_EXTRACTABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" CKA_SENSITIVE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        ID: e0:16:1c:c8:b6:f5:d6:6a:c6:83:5e:cd:ec:b6:23:fc:05:06:a6:75\n\nObject "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(":\n        URL: pkcs11:model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PKCS%2315%20emulated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("manufacturer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("www.CardContact.de"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("serial")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DENK0104068"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("token")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("SmartCard-HSM%20%28UserPIN%29%00%00%00%00%00%00%00%00%00"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("%E0%16%1C%C8%B6%F5%D6%6A%C6%83%5E%CD%EC%B6%23%FC%05%06%A6%75"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("object")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("public\n        Type: Public key "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EC/ECDSA-SECP384R1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        Label: root\n        ID: e0:16:1c:c8:b6:f5:d6:6a:c6:83:5e:cd:ec:b6:23:fc:05:06:a6:75\n\nObject "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(":\n        URL: pkcs11:model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PKCS%2315%20emulated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("manufacturer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("www.CardContact.de"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("serial")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DENK0104068"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("token")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("SmartCard-HSM%20%28UserPIN%29%00%00%00%00%00%00%00%00%00"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("%BC%B4%8F%E9%B5%66%AE%61%89%1A%AB%BF%DE%6A%23%D4%FF%3A%B6%39"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("object")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("intermediate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("private\n        Type: Private key "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EC/ECDSA-SECP384R1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        Label: intermediate\n        Flags: CKA_PRIVATE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" CKA_NEVER_EXTRACTABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" CKA_SENSITIVE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        ID: bc:b4:8f:e9:b5:66:ae:61:89:1a:ab:bf:de:6a:23:d4:ff:3a:b6:39\n\nObject "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(":\n        URL: pkcs11:model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PKCS%2315%20emulated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("manufacturer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("www.CardContact.de"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("serial")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DENK0104068"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("token")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("SmartCard-HSM%20%28UserPIN%29%00%00%00%00%00%00%00%00%00"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("%BC%B4%8F%E9%B5%66%AE%61%89%1A%AB%BF%DE%6A%23%D4%FF%3A%B6%39"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("object")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("intermediate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("public\n        Type: Public key "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EC/ECDSA-SECP384R1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        Label: intermediate\n        ID: bc:b4:8f:e9:b5:66:ae:61:89:1a:ab:bf:de:6a:23:d4:ff:3a:b6:39\n")])])]),s("p",[t._v("In this instance, the fully qualified PKCS#11 URI is "),s("code",[t._v("pkcs11:model=PKCS%2315%20emulated;manufacturer=www.CardContact.de;serial=DENK0104068;token=SmartCard-HSM%20%28UserPIN%29%00%00%00%00%00%00%00%00%00;id=%E0%16%1C%C8%B6%F5%D6%6A%C6%83%5E%CD%EC%B6%23%FC%05%06%A6%75;object=root;type=private")]),t._v(".")]),t._v(" "),s("p",[t._v("Now, we need to create a config file to use the private key of the root certificate to sign the csr of the intermediate certificate.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" sign_intermediate_csr.ini\n")])])]),s("div",{staticClass:"language-ini extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[ ca ]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# `man ca`")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("default_ca")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" CA_default")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[ CA_default ]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Directory and file locations.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("dir")]),t._v("               "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" /opt/certificate-authority")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("certs")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" $dir/certs")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("crl_dir")]),t._v("           "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" $dir/crl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("new_certs_dir")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" $dir/newcerts")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("database")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" $dir/index.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("serial")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" $dir/serial")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The root key and root certificate.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("private_key")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" pkcs11:model=PKCS%2315%20emulated;manufacturer=www.CardContact.de;serial=DENK0104068;token=SmartCard-HSM%20%28UserPIN%29%00%00%00%00%00%00%00%00%00;id=%E0%16%1C%C8%B6%F5%D6%6A%C6%83%5E%CD%EC%B6%23%FC%05%06%A6%75;object=root;type=private")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("certificate")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" ../certs/root.crt")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# SHA-1 is deprecated, so use SHA-2 instead.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("default_md")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" sha512")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("name_opt")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" ca_default")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("cert_opt")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" ca_default")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("default_days")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" 375")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("preserve")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" no")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("policy")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" policy_loose")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[ policy_loose ]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Allow the intermediate CA to sign a more diverse range of certificates.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# See the POLICY FORMAT section of the `ca` man page.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("countryName")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" optional")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("stateOrProvinceName")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" optional")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("localityName")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" optional")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("organizationName")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" optional")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("organizationalUnitName")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" optional")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("commonName")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" supplied")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("emailAddress")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" optional")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[ v3_intermediate_ca ]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Extensions for a typical intermediate CA (`man x509v3_config`).")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("subjectKeyIdentifier")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" hash")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("authorityKeyIdentifier")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" keyid:always,issuer")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("basicConstraints")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" critical, CA:true, pathlen:0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("keyUsage")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" critical, digitalSignature, cRLSign, keyCertSign")]),t._v("\n")])])]),s("p",[t._v("Then sign the intermediate certificate with the root certificate.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ openssl ca -config sign_intermediate_csr.ini -engine pkcs11 -keyform engine -extensions v3_intermediate_ca -days "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1825")]),t._v(" -notext -md sha512 -create_serial -in "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/intermediate/csr/intermediate.csr -out "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/intermediate/certs/intermediate.crt\nengine "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pkcs11"')]),t._v(" set.\nUsing configuration from sign_intermediate_csr.ini\nEnter PKCS"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#11 token PIN for SmartCard-HSM (UserPIN):")]),t._v("\nCheck that the request matches the signature\nSignature ok\nCertificate Details:\n        Serial Number:\n            "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("35")]),t._v(":47:4d:05:12:cc:e1:a8:b6:bf:dd:3e:c8:29:7b:18:c0:a1:5c:68\n        Validity\n            Not Before: Aug "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(":44:17 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v(" GMT\n            Not After "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" Aug "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(":44:17 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2025")]),t._v(" GMT\n        Subject:\n            countryName               "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" US\n            stateOrProvinceName       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" My State\n            organizationName          "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" My Company\n            organizationalUnitName    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" My Company Certificate Authority\n            commonName                "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" My Company Intermediate CA\n        X509v3 extensions:\n            X509v3 Subject Key Identifier:\n                1D:4F:E5:ED:11:42:9A:AC:25:E4:51:A3:42:67:97:39:A0:10:AE:82\n            X509v3 Authority Key Identifier:\n                keyid:F1:FA:61:75:0B:AC:3C:95:97:EF:73:3C:3F:38:22:B1:DB:D9:BF:41\n\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\nCertificate is to be certified "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("until")]),t._v(" Aug "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(":44:17 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2025")]),t._v(" GMT "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1825")]),t._v(" days"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nSign the certificate? "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("y/n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":y\n\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" out of "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" certificate requests certified, commit? "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("y/n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("y\nWrite out database with "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" new entries\nData Base Updated\n")])])]),s("p",[t._v("Verify that the root certificate was generated correctly. Verify that the Issuer and Subject are different, and correct. Verify that the Key Usage matches the config file. Verify that the signature algorithm are correct above and below.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ openssl x509 -noout -text -in "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/intermediate/certs/intermediate.crt\nCertificate:\n    Data:\n        Version: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0x2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        Serial Number:\n            "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("35")]),t._v(":47:4d:05:12:cc:e1:a8:b6:bf:dd:3e:c8:29:7b:18:c0:a1:5c:68\n        Signature Algorithm: ecdsa-with-SHA512\n        Issuer: C "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" US, ST "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" My State, O "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" My Company, OU "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" My Company Certificate Authority, CN "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" My Company Root CA\n        Validity\n            Not Before: Aug "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(":44:17 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v(" GMT\n            Not After "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" Aug "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(":44:17 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2025")]),t._v(" GMT\n        Subject: C "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" US, ST "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" My State, O "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" My Company, OU "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" My Company Certificate Authority, CN "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" My Company Intermediate CA\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("384")]),t._v(" bit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                pub:\n                    04:d0:fb:5c:0c:d1:0c:0b:6e:4d:0f:69:86:75:58:\n                    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(":b6:24:ec:9f:cd:8f:f9:ae:5f:01:09:fe:6f:f3:\n                    ad:88:7c:a7:60:71:7d:a8:94:f3:ff:84:dc:8c:24:\n                    fe:8c:93:b0:cd:84:0a:6a:a9:41:bb:28:66:c0:61:\n                    ce:f6:0e:47:b8:93:d7:18:52:b5:0d:67:62:af:10:\n                    c9:51:42:6e:55:ec:89:25:a6:cd:83:ae:ae:17:30:\n                    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),t._v(":11:08:af:db:cd:ee\n                ASN1 OID: secp384r1\n                NIST CURVE: P-384\n        X509v3 extensions:\n            X509v3 Subject Key Identifier:\n                1D:4F:E5:ED:11:42:9A:AC:25:E4:51:A3:42:67:97:39:A0:10:AE:82\n            X509v3 Authority Key Identifier:\n                keyid:F1:FA:61:75:0B:AC:3C:95:97:EF:73:3C:3F:38:22:B1:DB:D9:BF:41\n\n            X509v3 Basic Constraints: critical\n                CA:TRUE, pathlen:0\n            X509v3 Key Usage: critical\n                Digital Signature, Certificate Sign, CRL Sign\n    Signature Algorithm: ecdsa-with-SHA512\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(":66:02:31:00:9a:6e:08:d2:d6:3a:29:f6:ba:0c:4c:3a:f4:\n         af:40:5e:e0:71:f2:bc:e4:47:f5:b4:ee:10:d7:27:b1:25:0b:\n         4b:09:78:a1:b8:f2:b8:71:c5:4e:41:33:8e:64:db:ec:eb:02:\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),t._v(":00:fc:39:26:c2:ad:7b:3c:ab:75:06:34:02:47:79:40:31:\n         1d:eb:17:ad:32:10:67:97:37:6f:7f:3c:ce:3e:12:3c:e9:7c:\n         fa:43:3e:34:5d:5e:f4:f3:2f:fd:6a:2f:14:da\n")])])]),s("p",[t._v("Verify that the intermediate certificate verifies against the root certificate.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ openssl verify -CAfile "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/certs/root.crt "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/intermediate/certs/intermediate.crt\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/intermediate/certs/intermediate.crt: OK\n")])])]),s("p",[t._v("Create a certificate chain file:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/intermediate/certs/intermediate.crt "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/certs/root.crt "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/intermediate/certs/chain.crt\n")])])]),s("p",[t._v("You now have a certificate authority backed by an HSM.")]),t._v(" "),s("h2",{attrs:{id:"sign-a-server-certificate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sign-a-server-certificate"}},[t._v("#")]),t._v(" Sign a Server Certificate")]),t._v(" "),s("p",[t._v("Now that you have a certificate authority, you'd probably like to know how to use it.")]),t._v(" "),s("p",[t._v("Create a CSR in the normal method for your application. Proper creation of your certificate, including SAN, for your particular application is outside the scope of this document.")]),t._v(" "),s("p",[t._v("We need to find out the fully qualified PKCS#11 URI for your private key:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ p11tool --list-all\nwarning: no token URL was provided "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" this operation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" the available tokens are:\n\n*pkcs11:model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PKCS%2315%20emulated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("manufacturer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("www.CardContact.de"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("serial")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DENK0104068"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("token")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("SmartCard-HSM%20%28UserPIN%29%00%00%00%00%00%00%00%00%00*\n\n$ p11tool --login --list-all pkcs11:model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PKCS%2315%20emulated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("manufacturer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("www.CardContact.de"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("serial")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DENK0104068"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("token")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("SmartCard-HSM%20%28UserPIN%29%00%00%00%00%00%00%00%00%00\nToken "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SmartCard-HSM (UserPIN)'")]),t._v(" with URL "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pkcs11:model=PKCS%2315%20emulated;manufacturer=www.CardContact.de;serial=DENK0104068;token=SmartCard-HSM%20%28UserPIN%29%00%00%00%00%00%00%00%00%00'")]),t._v(" requires user PIN\nEnter PIN:\nObject "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(":\n        URL: pkcs11:model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PKCS%2315%20emulated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("manufacturer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("www.CardContact.de"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("serial")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DENK0104068"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("token")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("SmartCard-HSM%20%28UserPIN%29%00%00%00%00%00%00%00%00%00"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("%E0%16%1C%C8%B6%F5%D6%6A%C6%83%5E%CD%EC%B6%23%FC%05%06%A6%75"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("object")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("private\n        Type: Private key "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EC/ECDSA-SECP384R1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        Label: root\n        Flags: CKA_PRIVATE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" CKA_NEVER_EXTRACTABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" CKA_SENSITIVE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        ID: e0:16:1c:c8:b6:f5:d6:6a:c6:83:5e:cd:ec:b6:23:fc:05:06:a6:75\n\nObject "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(":\n        URL: pkcs11:model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PKCS%2315%20emulated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("manufacturer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("www.CardContact.de"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("serial")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DENK0104068"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("token")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("SmartCard-HSM%20%28UserPIN%29%00%00%00%00%00%00%00%00%00"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("%E0%16%1C%C8%B6%F5%D6%6A%C6%83%5E%CD%EC%B6%23%FC%05%06%A6%75"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("object")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("public\n        Type: Public key "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EC/ECDSA-SECP384R1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        Label: root\n        ID: e0:16:1c:c8:b6:f5:d6:6a:c6:83:5e:cd:ec:b6:23:fc:05:06:a6:75\n\nObject "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(":\n        URL: pkcs11:model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PKCS%2315%20emulated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("manufacturer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("www.CardContact.de"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("serial")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DENK0104068"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("token")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("SmartCard-HSM%20%28UserPIN%29%00%00%00%00%00%00%00%00%00"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("%BC%B4%8F%E9%B5%66%AE%61%89%1A%AB%BF%DE%6A%23%D4%FF%3A%B6%39"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("object")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("intermediate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("private\n        Type: Private key "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EC/ECDSA-SECP384R1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        Label: intermediate\n        Flags: CKA_PRIVATE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" CKA_NEVER_EXTRACTABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" CKA_SENSITIVE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        ID: bc:b4:8f:e9:b5:66:ae:61:89:1a:ab:bf:de:6a:23:d4:ff:3a:b6:39\n\nObject "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(":\n        URL: pkcs11:model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PKCS%2315%20emulated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("manufacturer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("www.CardContact.de"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("serial")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DENK0104068"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("token")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("SmartCard-HSM%20%28UserPIN%29%00%00%00%00%00%00%00%00%00"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("%BC%B4%8F%E9%B5%66%AE%61%89%1A%AB%BF%DE%6A%23%D4%FF%3A%B6%39"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("object")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("intermediate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("public\n        Type: Public key "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EC/ECDSA-SECP384R1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        Label: intermediate\n        ID: bc:b4:8f:e9:b5:66:ae:61:89:1a:ab:bf:de:6a:23:d4:ff:3a:b6:39\n")])])]),s("p",[t._v("In this instance, the fully qualified PKCS#11 URI is "),s("code",[t._v("pkcs11:model=PKCS%2315%20emulated;manufacturer=www.CardContact.de;serial=DENK0104068;token=SmartCard-HSM%20%28UserPIN%29%00%00%00%00%00%00%00%00%00;id=%BC%B4%8F%E9%B5%66%AE%61%89%1A%AB%BF%DE%6A%23%D4%FF%3A%B6%39;object=intermediate;type=private")]),t._v(".")]),t._v(" "),s("p",[t._v("Create a config file to use the private key of the intermediate certificate to sign the CSRs of your servers.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" sign_server_csrs.ini\n")])])]),s("div",{staticClass:"language-ini extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[ ca ]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# `man ca`")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("default_ca")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" CA_default")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[ CA_default ]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Directory and file locations.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("dir")]),t._v("               "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" /opt/certificate-authority/intermediate")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("certs")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" $dir/certs")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("crl_dir")]),t._v("           "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" $dir/crl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("new_certs_dir")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" $dir/newcerts")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("database")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" $dir/index.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("serial")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" $dir/serial")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The root key and root certificate.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("private_key")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" pkcs11:model=PKCS%2315%20emulated;manufacturer=www.CardContact.de;serial=DENK0104068;token=SmartCard-HSM%20%28UserPIN%29%00%00%00%00%00%00%00%00%00;id=%BC%B4%8F%E9%B5%66%AE%61%89%1A%AB%BF%DE%6A%23%D4%FF%3A%B6%39;object=intermediate;type=private")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("certificate")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" $dir/certs/intermediate.crt")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# SHA-1 is deprecated, so use SHA-2 instead.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("default_md")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" sha512")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("name_opt")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" ca_default")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("cert_opt")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" ca_default")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("default_days")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" 375")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("preserve")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" no")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("policy")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" policy_loose")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[ policy_loose ]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Allow the intermediate CA to sign a more diverse range of certificates.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# See the POLICY FORMAT section of the `ca` man page.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("countryName")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" optional")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("stateOrProvinceName")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" optional")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("localityName")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" optional")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("organizationName")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" optional")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("organizationalUnitName")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" optional")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("commonName")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" supplied")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("emailAddress")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" optional")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[ server_cert ]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Extensions for server certificates (`man x509v3_config`).")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("basicConstraints")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" CA:FALSE")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nsCertType")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" server")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nsComment")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(' "OpenSSL Generated Server Certificate"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("subjectKeyIdentifier")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" hash")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("authorityKeyIdentifier")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" keyid,issuer:always")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("keyUsage")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" critical, digitalSignature, keyEncipherment")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("extendedKeyUsage")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" serverAuth")]),t._v("\n")])])]),s("p",[t._v("Then run openssl to sign the server's CSR.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ openssl ca -config sign_server_csrs.ini -engine pkcs11 -keyform engine -extensions server_cert -days "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("375")]),t._v(" -notext -md sha512 -create_serial -in server_cert.csr -out server_cert.crt\nengine "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pkcs11"')]),t._v(" set.\nUsing configuration from sign_server_csrs.ini\nEnter PKCS"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#11 token PIN for SmartCard-HSM (UserPIN):")]),t._v("\nCheck that the request matches the signature\nSignature ok\nCertificate Details:\n        Serial Number:\n            "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v(":7f:dc:90:b0:3a:1b:fb:d3:e2:74:8d:40:28:a8:12:f7:7e:c3:74\n        Validity\n            Not Before: Aug "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(":32:42 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v(" GMT\n            Not After "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" Aug "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(":32:42 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v(" GMT\n        Subject:\n            countryName               "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" US\n            stateOrProvinceName       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" My State\n            organizationName          "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" My Company\n            organizationalUnitName    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" media\n            commonName                "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" media\n        X509v3 extensions:\n            X509v3 Basic Constraints:\n                CA:FALSE\n            Netscape Cert Type:\n                SSL Server\n            Netscape Comment:\n                OpenSSL Generated Server Certificate\n            X509v3 Subject Key Identifier:\n                "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),t._v(":89:19:95:6C:93:8C:DD:6E:AA:61:D5:C0:E6:78:CC:F1:47:64:FC\n            X509v3 Authority Key Identifier:\n                keyid:1D:4F:E5:ED:11:42:9A:AC:25:E4:51:A3:42:67:97:39:A0:10:AE:82\n                DirName:/C"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("US/ST"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("My State/O"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("My Company/OU"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("My Company Certificate Authority/CN"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("My Company Root CA\n                serial:35:47:4D:05:12:CC:E1:A8:B6:BF:DD:3E:C8:29:7B:18:C0:A1:5C:68\n\n            X509v3 Key Usage: critical\n                Digital Signature, Key Encipherment\n            X509v3 Extended Key Usage:\n                TLS Web Server Authentication\nCertificate is to be certified "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("until")]),t._v(" Aug "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(":32:42 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v(" GMT "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("375")]),t._v(" days"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nSign the certificate? "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("y/n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":y\n\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" out of "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" certificate requests certified, commit? "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("y/n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("y\nWrite out database with "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" new entries\nData Base Updated\n")])])]),s("h2",{attrs:{id:"references"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[t._v("#")]),t._v(" References")]),t._v(" "),s("p",[t._v("I used the following resources to help in compiling this document.")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/OpenSC/OpenSC/wiki/SmartCardHSM#initialize-the-device",target:"_blank",rel:"noopener noreferrer"}},[t._v("How to initialize your Nitrokey HSM"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://jamielinux.com/docs/openssl-certificate-authority/create-the-root-pair.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("How to create a root and intermediate CA"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.phildev.net/ssl/creating_ca.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("How to ensure the serial numbers of your intermediate CA and server certs are up to spec"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://dev.to/benjaminblack/obtaining-an-elliptic-curve-dsa-certificate-with-lets-encrypt-51bc",target:"_blank",rel:"noopener noreferrer"}},[t._v("How to generate ECC private keys"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.infradead.org/openconnect/pkcs11.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("How to find the PCKS11 URI from your HSM"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("This document was originally "),s("a",{attrs:{href:"https://gist.github.com/lyntux/f02c6c3414ce48bc8ea8ab6dcdba1623",target:"_blank",rel:"noopener noreferrer"}},[t._v("written by lyntux"),s("OutboundLink")],1),t._v(".")])])}),[],!1,null,null,null);a.default=n.exports}}]);