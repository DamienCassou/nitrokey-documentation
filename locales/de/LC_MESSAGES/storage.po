# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Nitrokey
# This file is distributed under the same license as the Nitrokey
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
msgid ""
msgstr ""
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-11-30 17:40+0100\n"
"PO-Revision-Date: 2020-12-01 17:00+0000\n"
"Last-Translator: Weblate Admin <ben@dotplex.com>\n"
"Language-Team: German <https://translate.nitrokey.com/projects/"
"nitrokey-documentation/documentation-storage/de/>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 4.3.1\n"
"Generated-By: Babel 2.6.0\n"

#: ../storage/activate-update-mode-manually.md:1
#: ../storage/linux/activate-update-mode-manually.md:1
#: ../storage/mac/activate-update-mode-manually.md:1
#: ../storage/windows/activate-update-mode-manually.md:1
msgid "Activate Update Mode Manually"
msgstr ""

#: ../storage/activate-update-mode-manually.md:3
#: ../storage/linux/activate-update-mode-manually.md:3
#: ../storage/mac/activate-update-mode-manually.md:3
#: ../storage/windows/activate-update-mode-manually.md:3
msgid ""
"Note: The following steps are only necessary if you are using Windows 10 "
"Build 1809 (or higher) and Nitrokey Storage with firmware 0.52 or older. "
"In all other cases, or if you have access to another system, the regular "
"update as described here is sufficient and easier."
msgstr ""

#: ../storage/activate-update-mode-manually.md:5
#: ../storage/linux/activate-update-mode-manually.md:5
#: ../storage/mac/activate-update-mode-manually.md:5
#: ../storage/windows/activate-update-mode-manually.md:5
msgid "What is needed"
msgstr ""

#: ../storage/activate-update-mode-manually.md:7
#: ../storage/linux/activate-update-mode-manually.md:7
#: ../storage/mac/activate-update-mode-manually.md:7
#: ../storage/windows/activate-update-mode-manually.md:7
msgid ""
"To put the Nitrokey Storage manually into Update Mode (without using the "
"Nitrokey App), the following is required:"
msgstr ""

#: ../storage/activate-update-mode-manually.md:9
#: ../storage/linux/activate-update-mode-manually.md:9
#: ../storage/mac/activate-update-mode-manually.md:9
#: ../storage/windows/activate-update-mode-manually.md:9
msgid ""
"A USB stick (All data on the USB stick will be lost! Please make a backup"
" of the creation before!)"
msgstr ""

#: ../storage/activate-update-mode-manually.md:10
#: ../storage/linux/activate-update-mode-manually.md:10
#: ../storage/mac/activate-update-mode-manually.md:10
#: ../storage/windows/activate-update-mode-manually.md:10
msgid "The \"Balena Etcher\" software"
msgstr ""

#: ../storage/activate-update-mode-manually.md:11
#: ../storage/linux/activate-update-mode-manually.md:11
#: ../storage/mac/activate-update-mode-manually.md:11
#: ../storage/windows/activate-update-mode-manually.md:11
msgid ""
"The USB Image we created for this purpose. Please download only the file "
"ending with \".img.zip\"."
msgstr ""

#: ../storage/activate-update-mode-manually.md:13
#: ../storage/linux/activate-update-mode-manually.md:13
#: ../storage/mac/activate-update-mode-manually.md:13
#: ../storage/windows/activate-update-mode-manually.md:13
msgid "Install Balena Etcher"
msgstr ""

#: ../storage/activate-update-mode-manually.md:15
#: ../storage/linux/activate-update-mode-manually.md:15
#: ../storage/mac/activate-update-mode-manually.md:15
#: ../storage/windows/activate-update-mode-manually.md:15
msgid ""
"Balena Etcher helps us to install the USB image on the USB stick. Please "
"double click on the previously downloaded installation file and follow "
"the instructions."
msgstr ""

#: ../storage/activate-update-mode-manually.md:17
#: ../storage/linux/2fa-nextcloud.md:8
#: ../storage/linux/activate-update-mode-manually.md:17
#: ../storage/linux/change-user-and-admin-pin.md:9
#: ../storage/linux/login-to-windows-domain-computers-with-ms-active-directory.md:32
#: ../storage/linux/login-with-eidauthenticate-on-stand-alone-windows-computers.md:8
#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:41
#: ../storage/linux/openpgp-key-generation-using-gpa.md:12
#: ../storage/linux/putty.md:15
#: ../storage/linux/smime-email-encryption-with-thunderbird.md:18
#: ../storage/linux/smime-email-encryption.md:40
#: ../storage/linux/two-factor-authentication-with-otp.md:11
#: ../storage/mac/2fa-nextcloud.md:8
#: ../storage/mac/activate-update-mode-manually.md:17
#: ../storage/mac/change-user-and-admin-pin.md:9
#: ../storage/mac/firmware-update.md:7
#: ../storage/mac/login-to-windows-domain-computers-with-ms-active-directory.md:32
#: ../storage/mac/login-with-eidauthenticate-on-stand-alone-windows-computers.md:8
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:41
#: ../storage/mac/putty.md:15
#: ../storage/mac/smime-email-encryption-with-outlook.md:19
#: ../storage/mac/smime-email-encryption-with-thunderbird.md:18
#: ../storage/mac/smime-email-encryption.md:40
#: ../storage/mac/two-factor-authentication-with-otp.md:11
#: ../storage/windows/2fa-nextcloud.md:8
#: ../storage/windows/activate-update-mode-manually.md:17
#: ../storage/windows/change-user-and-admin-pin.md:9
#: ../storage/windows/firmware-update.md:7
#: ../storage/windows/login-to-windows-domain-computers-with-ms-active-directory.md:32
#: ../storage/windows/login-with-eidauthenticate-on-stand-alone-windows-computers.md:8
#: ../storage/windows/openpgp-email-encryption-with-outlook.md:13
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:41
#: ../storage/windows/openpgp-key-generation-using-gpa.md:12
#: ../storage/windows/putty.md:15
#: ../storage/windows/smime-email-encryption-with-outlook.md:19
#: ../storage/windows/smime-email-encryption-with-thunderbird.md:18
#: ../storage/windows/smime-email-encryption.md:40
#: ../storage/windows/two-factor-authentication-microsoft.md:7
#: ../storage/windows/two-factor-authentication-with-otp.md:11
#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:19
msgid "img1"
msgstr ""

#: ../storage/activate-update-mode-manually.md:19
#: ../storage/linux/2fa-nextcloud.md:13
#: ../storage/linux/activate-update-mode-manually.md:19
#: ../storage/linux/change-user-and-admin-pin.md:15
#: ../storage/linux/login-to-windows-domain-computers-with-ms-active-directory.md:36
#: ../storage/linux/login-with-eidauthenticate-on-stand-alone-windows-computers.md:12
#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:45
#: ../storage/linux/openpgp-key-generation-using-gpa.md:16
#: ../storage/linux/putty.md:19
#: ../storage/linux/smime-email-encryption-with-thunderbird.md:22
#: ../storage/linux/two-factor-authentication-with-otp.md:15
#: ../storage/mac/2fa-nextcloud.md:13
#: ../storage/mac/activate-update-mode-manually.md:19
#: ../storage/mac/change-user-and-admin-pin.md:15
#: ../storage/mac/firmware-update.md:32
#: ../storage/mac/login-to-windows-domain-computers-with-ms-active-directory.md:36
#: ../storage/mac/login-with-eidauthenticate-on-stand-alone-windows-computers.md:12
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:45
#: ../storage/mac/putty.md:19
#: ../storage/mac/smime-email-encryption-with-outlook.md:21
#: ../storage/mac/smime-email-encryption-with-thunderbird.md:22
#: ../storage/mac/two-factor-authentication-with-otp.md:15
#: ../storage/windows/2fa-nextcloud.md:13
#: ../storage/windows/activate-update-mode-manually.md:19
#: ../storage/windows/change-user-and-admin-pin.md:15
#: ../storage/windows/firmware-update.md:32
#: ../storage/windows/login-to-windows-domain-computers-with-ms-active-directory.md:36
#: ../storage/windows/login-with-eidauthenticate-on-stand-alone-windows-computers.md:12
#: ../storage/windows/openpgp-email-encryption-with-outlook.md:19
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:45
#: ../storage/windows/openpgp-key-generation-using-gpa.md:16
#: ../storage/windows/putty.md:19
#: ../storage/windows/smime-email-encryption-with-outlook.md:21
#: ../storage/windows/smime-email-encryption-with-thunderbird.md:22
#: ../storage/windows/two-factor-authentication-microsoft.md:9
#: ../storage/windows/two-factor-authentication-with-otp.md:15
#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:23
msgid "img2"
msgstr ""

#: ../storage/activate-update-mode-manually.md:21
#: ../storage/linux/activate-update-mode-manually.md:21
#: ../storage/mac/activate-update-mode-manually.md:21
#: ../storage/windows/activate-update-mode-manually.md:21
msgid "Installing the USB image with Balena Etcher"
msgstr ""

#: ../storage/activate-update-mode-manually.md:23
#: ../storage/linux/activate-update-mode-manually.md:23
#: ../storage/mac/activate-update-mode-manually.md:23
#: ../storage/windows/activate-update-mode-manually.md:23
msgid ""
"The program usually opens immediately after installation. If not, you "
"will find a shortcut on the desktop. Using the application, select the "
"previously downloaded image file, which ends with \".img.zip\". Now "
"insert the USB stick. It should be recognized automatically. Press "
"\"Flash!\" to proceed."
msgstr ""

#: ../storage/activate-update-mode-manually.md:25
#: ../storage/linux/2fa-nextcloud.md:17
#: ../storage/linux/activate-update-mode-manually.md:25
#: ../storage/linux/change-user-and-admin-pin.md:23
#: ../storage/linux/login-to-windows-domain-computers-with-ms-active-directory.md:40
#: ../storage/linux/login-with-eidauthenticate-on-stand-alone-windows-computers.md:17
#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:49
#: ../storage/linux/openpgp-key-generation-using-gpa.md:22
#: ../storage/linux/putty.md:23
#: ../storage/linux/smime-email-encryption-with-thunderbird.md:27
#: ../storage/linux/two-factor-authentication-with-otp.md:21
#: ../storage/mac/2fa-nextcloud.md:17
#: ../storage/mac/activate-update-mode-manually.md:25
#: ../storage/mac/change-user-and-admin-pin.md:23
#: ../storage/mac/login-to-windows-domain-computers-with-ms-active-directory.md:40
#: ../storage/mac/login-with-eidauthenticate-on-stand-alone-windows-computers.md:17
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:49
#: ../storage/mac/putty.md:23
#: ../storage/mac/smime-email-encryption-with-outlook.md:29
#: ../storage/mac/smime-email-encryption-with-thunderbird.md:27
#: ../storage/mac/two-factor-authentication-with-otp.md:21
#: ../storage/windows/2fa-nextcloud.md:17
#: ../storage/windows/activate-update-mode-manually.md:25
#: ../storage/windows/change-user-and-admin-pin.md:23
#: ../storage/windows/login-to-windows-domain-computers-with-ms-active-directory.md:40
#: ../storage/windows/login-with-eidauthenticate-on-stand-alone-windows-computers.md:17
#: ../storage/windows/openpgp-email-encryption-with-outlook.md:23
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:49
#: ../storage/windows/openpgp-key-generation-using-gpa.md:22
#: ../storage/windows/putty.md:23
#: ../storage/windows/smime-email-encryption-with-outlook.md:29
#: ../storage/windows/smime-email-encryption-with-thunderbird.md:27
#: ../storage/windows/two-factor-authentication-microsoft.md:13
#: ../storage/windows/two-factor-authentication-with-otp.md:21
#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:27
msgid "img3"
msgstr ""

#: ../storage/activate-update-mode-manually.md:27
#: ../storage/linux/activate-update-mode-manually.md:27
#: ../storage/mac/activate-update-mode-manually.md:27
#: ../storage/windows/activate-update-mode-manually.md:27
msgid "img4 You must allow the application to make changes."
msgstr ""

#: ../storage/activate-update-mode-manually.md:30
#: ../storage/linux/activate-update-mode-manually.md:30
#: ../storage/mac/activate-update-mode-manually.md:30
#: ../storage/windows/activate-update-mode-manually.md:30
msgid "img5 img6 img7 img8"
msgstr ""

#: ../storage/activate-update-mode-manually.md:35
#: ../storage/linux/activate-update-mode-manually.md:35
#: ../storage/mac/activate-update-mode-manually.md:35
#: ../storage/windows/activate-update-mode-manually.md:35
msgid ""
"After the image has been successfully transferred, Windows may ask if the"
" device should be formatted. <ins>It is important that you click "
"\"Cancel\", otherwise the USB stick will be overwritten by Windows.</ins>"
msgstr ""

#: ../storage/activate-update-mode-manually.md:37
#: ../storage/linux/2fa-nextcloud.md:37
#: ../storage/linux/activate-update-mode-manually.md:37
#: ../storage/linux/login-with-eidauthenticate-on-stand-alone-windows-computers.md:43
#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:100
#: ../storage/mac/2fa-nextcloud.md:37
#: ../storage/mac/activate-update-mode-manually.md:37
#: ../storage/mac/login-with-eidauthenticate-on-stand-alone-windows-computers.md:43
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:100
#: ../storage/windows/2fa-nextcloud.md:37
#: ../storage/windows/activate-update-mode-manually.md:37
#: ../storage/windows/login-with-eidauthenticate-on-stand-alone-windows-computers.md:43
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:100
#: ../storage/windows/two-factor-authentication-microsoft.md:33
#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:49
msgid "img9"
msgstr ""

#: ../storage/activate-update-mode-manually.md:39
#: ../storage/linux/activate-update-mode-manually.md:39
#: ../storage/mac/activate-update-mode-manually.md:39
#: ../storage/windows/activate-update-mode-manually.md:39
msgid "Booting from the USB stick"
msgstr ""

#: ../storage/activate-update-mode-manually.md:41
#: ../storage/linux/activate-update-mode-manually.md:41
#: ../storage/mac/activate-update-mode-manually.md:41
#: ../storage/windows/activate-update-mode-manually.md:41
msgid ""
"Now the system must be restarted. The USB stick must remain in the USB "
"port so that the system can be started on the USB stick. Some devices are"
" configured to start automatically from USB stick if it contains a "
"system. If Windows instead of the USB image is booting right after the "
"restart, you have to set your BIOS to boot from USB. On many systems this"
" can be done with the Escape key, the F10, F11 or F12 key. Often, when "
"starting the device there is also a hint which key to use the so-called "
"\"boot menu\"."
msgstr ""

#: ../storage/activate-update-mode-manually.md:43
#: ../storage/linux/activate-update-mode-manually.md:43
#: ../storage/mac/activate-update-mode-manually.md:43
#: ../storage/windows/activate-update-mode-manually.md:43
msgid ""
"After the system has started, please choose the language by typing 1 "
"(English) and hit Enter."
msgstr ""

#: ../storage/activate-update-mode-manually.md:45
#: ../storage/linux/activate-update-mode-manually.md:45
#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:104
#: ../storage/mac/activate-update-mode-manually.md:45
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:104
#: ../storage/windows/activate-update-mode-manually.md:45
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:104
#: ../storage/windows/two-factor-authentication-microsoft.md:37
#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:51
msgid "img10"
msgstr ""

#: ../storage/activate-update-mode-manually.md:47
#: ../storage/linux/activate-update-mode-manually.md:47
#: ../storage/mac/activate-update-mode-manually.md:47
#: ../storage/windows/activate-update-mode-manually.md:47
msgid "Please insert the Nitrokey Storage when asked to."
msgstr ""

#: ../storage/activate-update-mode-manually.md:49
#: ../storage/linux/activate-update-mode-manually.md:49
#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:114
#: ../storage/mac/activate-update-mode-manually.md:49
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:114
#: ../storage/windows/activate-update-mode-manually.md:49
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:114
#: ../storage/windows/two-factor-authentication-microsoft.md:39
#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:57
msgid "img11"
msgstr ""

#: ../storage/activate-update-mode-manually.md:51
#: ../storage/linux/activate-update-mode-manually.md:51
#: ../storage/mac/activate-update-mode-manually.md:51
#: ../storage/windows/activate-update-mode-manually.md:51
msgid ""
"The Firmware Update Mode will be started automatically if the standard "
"password is set. Otherwise you need to input your password and hit enter."
msgstr ""

#: ../storage/activate-update-mode-manually.md:53
#: ../storage/linux/activate-update-mode-manually.md:53
#: ../storage/mac/activate-update-mode-manually.md:53
#: ../storage/windows/activate-update-mode-manually.md:53
msgid "!img12"
msgstr ""

#: ../storage/activate-update-mode-manually.md:55
#: ../storage/linux/activate-update-mode-manually.md:55
#: ../storage/mac/activate-update-mode-manually.md:55
#: ../storage/windows/activate-update-mode-manually.md:55
msgid ""
"After the system has activated the firmware update on the Nitrokey "
"Storage, a restart is issued after 60 seconds. Please remove the USB "
"Stick. Afterwards you can use the Nitrokey Update Tool in Windows as "
"described here."
msgstr ""

#: ../storage/activate-update-mode-manually.md:57
#: ../storage/linux/activate-update-mode-manually.md:57
#: ../storage/mac/activate-update-mode-manually.md:57
#: ../storage/windows/activate-update-mode-manually.md:57
msgid "Restoring the USB Stick"
msgstr ""

#: ../storage/activate-update-mode-manually.md:59
#: ../storage/linux/activate-update-mode-manually.md:59
#: ../storage/mac/activate-update-mode-manually.md:59
#: ../storage/windows/activate-update-mode-manually.md:59
msgid ""
"Windows should automatically ask to format your USB Stick as soon as you "
"insert the USB Stick the first time again in Windows. Just accept the "
"request for being able to use the USB Stick as previously."
msgstr ""

#: ../storage/activate-update-mode-manually.md:61
#: ../storage/linux/activate-update-mode-manually.md:61
#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:125
#: ../storage/mac/activate-update-mode-manually.md:61
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:125
#: ../storage/windows/activate-update-mode-manually.md:61
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:125
#: ../storage/windows/two-factor-authentication-microsoft.md:45
msgid "img13"
msgstr ""

#: ../storage/index.md:2
msgid "editLink: false"
msgstr "editLink: falsch"

#: ../storage/index.md:5
msgid "Nitrokey Storage"
msgstr ""

#: ../storage/index.md:7
msgid "Choose your operating system:"
msgstr ""

#: ../storage/index.md:10
msgid "Windows"
msgstr ""

#: ../storage/index.md:11
msgid "Mac"
msgstr ""

#: ../storage/index.md:12
msgid "Linux"
msgstr ""

#: ../storage/linux/1.md:1
msgid "Eins"
msgstr ""

#: ../storage/linux/1.md:3
msgid "Bla"
msgstr ""

#: ../storage/linux/2.md:1 ../storage/windows/b.md:1
msgid "Zwei"
msgstr ""

#: ../storage/linux/2.md:3 ../storage/windows/b.md:3
msgid "blub"
msgstr ""

#: ../storage/linux/2fa-nextcloud.md:1 ../storage/mac/2fa-nextcloud.md:1
#: ../storage/windows/2fa-nextcloud.md:1
msgid "Two-factor Authentication for Nextcloud accounts"
msgstr ""

#: ../storage/linux/2fa-nextcloud.md:3 ../storage/mac/2fa-nextcloud.md:3
#: ../storage/windows/2fa-nextcloud.md:3
msgid ""
"These are the basic steps for registering the Nitrokey Pro or Nitrokey "
"Storage as a second factor of a Nextcloud account."
msgstr ""

#: ../storage/linux/2fa-nextcloud.md:5 ../storage/mac/2fa-nextcloud.md:5
#: ../storage/windows/2fa-nextcloud.md:5
msgid ""
"At first, log in to your Nextcloud account, click on the top right symbol"
" of your account and open the settings menu."
msgstr ""

#: ../storage/linux/2fa-nextcloud.md:10 ../storage/mac/2fa-nextcloud.md:10
#: ../storage/windows/2fa-nextcloud.md:10
msgid "Now choose \"Security\" on the left hand side."
msgstr ""

#: ../storage/linux/2fa-nextcloud.md:15 ../storage/mac/2fa-nextcloud.md:15
#: ../storage/windows/2fa-nextcloud.md:15
msgid ""
"Now you can tick the box reading \"Enable TOTP\". There is shown the TOTP"
" secret which we need to add to our Nitrokey via the Nitrokey App."
msgstr ""

#: ../storage/linux/2fa-nextcloud.md:19 ../storage/mac/2fa-nextcloud.md:19
#: ../storage/windows/2fa-nextcloud.md:19
msgid "Copy and save secret code into the Nitrokey App."
msgstr ""

#: ../storage/linux/2fa-nextcloud.md:21
#: ../storage/linux/change-user-and-admin-pin.md:29
#: ../storage/linux/login-to-windows-domain-computers-with-ms-active-directory.md:44
#: ../storage/linux/login-with-eidauthenticate-on-stand-alone-windows-computers.md:21
#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:53
#: ../storage/linux/openpgp-key-generation-using-gpa.md:26
#: ../storage/linux/putty.md:27
#: ../storage/linux/smime-email-encryption-with-thunderbird.md:33
#: ../storage/linux/two-factor-authentication-with-otp.md:25
#: ../storage/mac/2fa-nextcloud.md:21
#: ../storage/mac/change-user-and-admin-pin.md:29
#: ../storage/mac/login-to-windows-domain-computers-with-ms-active-directory.md:44
#: ../storage/mac/login-with-eidauthenticate-on-stand-alone-windows-computers.md:21
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:53
#: ../storage/mac/putty.md:27
#: ../storage/mac/smime-email-encryption-with-thunderbird.md:33
#: ../storage/mac/two-factor-authentication-with-otp.md:25
#: ../storage/windows/2fa-nextcloud.md:21
#: ../storage/windows/change-user-and-admin-pin.md:29
#: ../storage/windows/login-to-windows-domain-computers-with-ms-active-directory.md:44
#: ../storage/windows/login-with-eidauthenticate-on-stand-alone-windows-computers.md:21
#: ../storage/windows/openpgp-email-encryption-with-outlook.md:27
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:53
#: ../storage/windows/openpgp-key-generation-using-gpa.md:26
#: ../storage/windows/putty.md:27
#: ../storage/windows/smime-email-encryption-with-thunderbird.md:33
#: ../storage/windows/two-factor-authentication-microsoft.md:17
#: ../storage/windows/two-factor-authentication-with-otp.md:25
#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:29
msgid "img4"
msgstr ""

#: ../storage/linux/2fa-nextcloud.md:23
#: ../storage/linux/login-to-windows-domain-computers-with-ms-active-directory.md:48
#: ../storage/linux/login-with-eidauthenticate-on-stand-alone-windows-computers.md:25
#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:57
#: ../storage/linux/openpgp-key-generation-using-gpa.md:30
#: ../storage/linux/putty.md:31
#: ../storage/linux/two-factor-authentication-with-otp.md:29
#: ../storage/mac/2fa-nextcloud.md:23
#: ../storage/mac/login-to-windows-domain-computers-with-ms-active-directory.md:48
#: ../storage/mac/login-with-eidauthenticate-on-stand-alone-windows-computers.md:25
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:57
#: ../storage/mac/putty.md:31
#: ../storage/mac/two-factor-authentication-with-otp.md:29
#: ../storage/windows/2fa-nextcloud.md:23
#: ../storage/windows/login-to-windows-domain-computers-with-ms-active-directory.md:48
#: ../storage/windows/login-with-eidauthenticate-on-stand-alone-windows-computers.md:25
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:57
#: ../storage/windows/openpgp-key-generation-using-gpa.md:30
#: ../storage/windows/putty.md:31
#: ../storage/windows/two-factor-authentication-microsoft.md:21
#: ../storage/windows/two-factor-authentication-with-otp.md:29
#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:33
msgid "img5"
msgstr ""

#: ../storage/linux/2fa-nextcloud.md:25 ../storage/mac/2fa-nextcloud.md:25
#: ../storage/windows/2fa-nextcloud.md:25
msgid ""
"Now we request a one-time password for the Nextcloud to verify the "
"process by inserting the password on the website and pressing \"verify\"."
msgstr ""

#: ../storage/linux/2fa-nextcloud.md:27
#: ../storage/linux/login-to-windows-domain-computers-with-ms-active-directory.md:52
#: ../storage/linux/login-with-eidauthenticate-on-stand-alone-windows-computers.md:29
#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:76
#: ../storage/linux/openpgp-key-generation-using-gpa.md:36
#: ../storage/linux/putty.md:39
#: ../storage/linux/two-factor-authentication-with-otp.md:33
#: ../storage/mac/2fa-nextcloud.md:27
#: ../storage/mac/login-to-windows-domain-computers-with-ms-active-directory.md:52
#: ../storage/mac/login-with-eidauthenticate-on-stand-alone-windows-computers.md:29
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:76
#: ../storage/mac/putty.md:39
#: ../storage/mac/two-factor-authentication-with-otp.md:33
#: ../storage/windows/2fa-nextcloud.md:27
#: ../storage/windows/login-to-windows-domain-computers-with-ms-active-directory.md:52
#: ../storage/windows/login-with-eidauthenticate-on-stand-alone-windows-computers.md:29
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:76
#: ../storage/windows/openpgp-key-generation-using-gpa.md:36
#: ../storage/windows/putty.md:39
#: ../storage/windows/two-factor-authentication-microsoft.md:25
#: ../storage/windows/two-factor-authentication-with-otp.md:33
#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:37
msgid "img6"
msgstr ""

#: ../storage/linux/2fa-nextcloud.md:29
#: ../storage/linux/login-with-eidauthenticate-on-stand-alone-windows-computers.md:33
#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:80
#: ../storage/linux/openpgp-key-generation-using-gpa.md:46
#: ../storage/linux/putty.md:49
#: ../storage/linux/two-factor-authentication-with-otp.md:37
#: ../storage/mac/2fa-nextcloud.md:29
#: ../storage/mac/login-with-eidauthenticate-on-stand-alone-windows-computers.md:33
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:80
#: ../storage/mac/putty.md:49
#: ../storage/mac/two-factor-authentication-with-otp.md:37
#: ../storage/windows/2fa-nextcloud.md:29
#: ../storage/windows/login-with-eidauthenticate-on-stand-alone-windows-computers.md:33
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:80
#: ../storage/windows/openpgp-key-generation-using-gpa.md:46
#: ../storage/windows/putty.md:49
#: ../storage/windows/two-factor-authentication-microsoft.md:29
#: ../storage/windows/two-factor-authentication-with-otp.md:37
#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:39
msgid "img7"
msgstr ""

#: ../storage/linux/2fa-nextcloud.md:31 ../storage/mac/2fa-nextcloud.md:31
#: ../storage/windows/2fa-nextcloud.md:31
msgid ""
"From now on, when signing in you need an OTP additionally to your "
"password. Get one by the Nitrokey App like before and insert it in when "
"logging in."
msgstr ""

#: ../storage/linux/2fa-nextcloud.md:33
#: ../storage/linux/login-with-eidauthenticate-on-stand-alone-windows-computers.md:37
#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:96
#: ../storage/linux/two-factor-authentication-with-otp.md:43
#: ../storage/mac/2fa-nextcloud.md:33
#: ../storage/mac/login-with-eidauthenticate-on-stand-alone-windows-computers.md:37
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:96
#: ../storage/mac/two-factor-authentication-with-otp.md:43
#: ../storage/windows/2fa-nextcloud.md:33
#: ../storage/windows/login-with-eidauthenticate-on-stand-alone-windows-computers.md:37
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:96
#: ../storage/windows/two-factor-authentication-microsoft.md:31
#: ../storage/windows/two-factor-authentication-with-otp.md:43
#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:45
msgid "img8"
msgstr ""

#: ../storage/linux/2fa-nextcloud.md:35 ../storage/mac/2fa-nextcloud.md:35
#: ../storage/windows/2fa-nextcloud.md:35
msgid ""
"Nextcloud provides you with backup codes, in case you lost your Nitrokey."
" It is recommended to print out these codes and store them somewhere save"
" otherwise you might not be able to log in to your account anymore!"
msgstr ""

#: ../storage/linux/automatic-screen-lock.md:1
msgid "Automatic Screen Lock at Removal"
msgstr ""

#: ../storage/linux/automatic-screen-lock.md:3
msgid ""
"This guide will walk you through the configuration of your computer, to "
"automatically lock your session when you remove the Nitrokey."
msgstr ""

#: ../storage/linux/automatic-screen-lock.md:5
msgid ""
"The configuration requires the creation of two files under two different "
"directories."
msgstr ""

#: ../storage/linux/automatic-screen-lock.md:7
#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:15
msgid "Requirements"
msgstr ""

#: ../storage/linux/automatic-screen-lock.md:9
msgid ""
"Ubuntu 20.04 or Debian 10 (Buster), both with Gnome Display Manager "
"installed."
msgstr ""

#: ../storage/linux/automatic-screen-lock.md:10
msgid "Nitrokey Pro 2, Nitrokey Storage 2, or Nitrokey HSM 2"
msgstr ""

#: ../storage/linux/automatic-screen-lock.md:12
msgid "Configuration"
msgstr ""

#: ../storage/linux/automatic-screen-lock.md:14
msgid "Create the .rules file"
msgstr ""

#: ../storage/linux/automatic-screen-lock.md:16
msgid "With your favorite text editor create a file called 85-nitrokey.rules"
msgstr ""

#: ../storage/linux/automatic-screen-lock.md:21
msgid "Add the following line to the file"
msgstr ""

#: ../storage/linux/automatic-screen-lock.md:26
msgid "Save the file and quit the editor."
msgstr ""

#: ../storage/linux/automatic-screen-lock.md:28
msgid ""
"This file sets up a new hardware rule that executes the gnome-"
"screensaver-lock at removal of the Nitrokey device."
msgstr ""

#: ../storage/linux/automatic-screen-lock.md:30
msgid ""
"You should change the configuration according to the device you are using"
" as following:"
msgstr ""

#: ../storage/linux/automatic-screen-lock.md:32
msgid "Nitrokey Pro: ENV{PRODUCT}==\"20a0/4108/101\""
msgstr ""

#: ../storage/linux/automatic-screen-lock.md:33
msgid "Nitrokey HSM: ENV{PRODUCT}==\"20a0/4230/101\""
msgstr ""

#: ../storage/linux/automatic-screen-lock.md:34
msgid "Nitrokey Storage: ENV{PRODUCT}==\"20a0/4109/101\""
msgstr ""

#: ../storage/linux/automatic-screen-lock.md:36
msgid "Create the gnome-screensaver-lock script"
msgstr ""

#: ../storage/linux/automatic-screen-lock.md:38
msgid "With your favorite text editor create a file called gnome-screensaver-lock"
msgstr ""

#: ../storage/linux/automatic-screen-lock.md:42
msgid "Add the following text"
msgstr ""

#: ../storage/linux/automatic-screen-lock.md:50
msgid ""
"In the first step, this script looks for the user-name of the gnome "
"session, i.e. user."
msgstr ""

#: ../storage/linux/automatic-screen-lock.md:52
msgid ""
"When it is called at Nitrokey removal, the script queries user, switches "
"to its session, and locks the screen by prompting the screen-saver "
"screen."
msgstr ""

#: ../storage/linux/automatic-screen-lock.md:54
msgid "Execute the script"
msgstr ""

#: ../storage/linux/automatic-screen-lock.md:56
msgid ""
"Once all set up, execute the script once, and it will lock the screen. It"
" does not matter if the Nitrokey is plugged or not for this first "
"execution."
msgstr ""

#: ../storage/linux/automatic-screen-lock.md:58
#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:97
#: ../storage/linux/hard-disk-encryption.md:75
#: ../storage/linux/openpgp-email-encryption.md:25
#: ../storage/linux/smime-email-encryption-with-thunderbird.md:29
#: ../storage/linux/smime-email-encryption.md:45
#: ../storage/mac/openpgp-email-encryption.md:25
#: ../storage/mac/smime-email-encryption-with-outlook.md:25
#: ../storage/mac/smime-email-encryption-with-thunderbird.md:29
#: ../storage/mac/smime-email-encryption.md:45
#: ../storage/windows/openpgp-email-encryption-with-outlook.md:15
#: ../storage/windows/openpgp-email-encryption.md:25
#: ../storage/windows/smime-email-encryption-with-outlook.md:25
#: ../storage/windows/smime-email-encryption-with-thunderbird.md:29
#: ../storage/windows/smime-email-encryption.md:45
msgid "Usage"
msgstr ""

#: ../storage/linux/automatic-screen-lock.md:60
msgid ""
"By now you can log back to your session by entering your password, and "
"(re)plug you Nitrokey if you did not do it before."
msgstr ""

#: ../storage/linux/automatic-screen-lock.md:62
msgid ""
"The next time(s) you unplug your Nitrokey from the computer, it will "
"automatically lock the screen."
msgstr ""

#: ../storage/linux/change-user-and-admin-pin.md:1
#: ../storage/mac/change-user-and-admin-pin.md:1
#: ../storage/windows/change-user-and-admin-pin.md:1
msgid "Change User and Admin PIN"
msgstr ""

#: ../storage/linux/change-user-and-admin-pin.md:3
#: ../storage/mac/change-user-and-admin-pin.md:3
#: ../storage/windows/change-user-and-admin-pin.md:3
msgid "User PIN"
msgstr ""

#: ../storage/linux/change-user-and-admin-pin.md:5
#: ../storage/mac/change-user-and-admin-pin.md:5
#: ../storage/windows/change-user-and-admin-pin.md:5
msgid ""
"The user PIN is at least 6-digits long and is used to get access to the "
"contect of the Nitrokey. This is the PIN you will use a lot in every day "
"use e.g. for decrypting messages, for unlocking your encrypted storage "
"(NK Storage only) etc."
msgstr ""

#: ../storage/linux/change-user-and-admin-pin.md:7
#: ../storage/mac/change-user-and-admin-pin.md:7
#: ../storage/windows/change-user-and-admin-pin.md:7
msgid ""
"You can change the user PIN with the Nitrokey App if using a Nitrokey Pro"
" or Nitrokey Storage. In the Nitrokey App open 'Menu -> Configure -> "
"Change User PIN' to open the dialog to change the PIN."
msgstr ""

#: ../storage/linux/change-user-and-admin-pin.md:11
#: ../storage/mac/change-user-and-admin-pin.md:11
#: ../storage/windows/change-user-and-admin-pin.md:11
msgid "You can change the User PIN in the dialog window now."
msgstr ""

#: ../storage/linux/change-user-and-admin-pin.md:13
#: ../storage/mac/change-user-and-admin-pin.md:13
#: ../storage/windows/change-user-and-admin-pin.md:13
msgid ""
"The user PIN can have up to 20 digits and other characters (e.g. "
"alphabetic and special characters). But as the user PIN is blocked as "
"soon three wrong PIN attempts were done, it is sufficiently secure to "
"only have a 6 digits PIN. The default PIN is 123456."
msgstr ""

#: ../storage/linux/change-user-and-admin-pin.md:17
#: ../storage/mac/change-user-and-admin-pin.md:17
#: ../storage/windows/change-user-and-admin-pin.md:17
msgid "Admin PIN"
msgstr ""

#: ../storage/linux/change-user-and-admin-pin.md:19
#: ../storage/mac/change-user-and-admin-pin.md:19
#: ../storage/windows/change-user-and-admin-pin.md:19
msgid ""
"The admin PIN is at least 8-digits long and is used to change "
"contents/settings of the Nitrokey. That is to say after initializing the "
"Nitrokey you probably won't need this PIN too often (e.g. if you want to "
"add another password to the password safe of the Nitrokey Pro or Nitrokey"
" Storage)."
msgstr ""

#: ../storage/linux/change-user-and-admin-pin.md:21
#: ../storage/mac/change-user-and-admin-pin.md:21
#: ../storage/windows/change-user-and-admin-pin.md:21
msgid ""
"You can change the admin PIN with the Nitrokey App if using a Nitrokey "
"Pro or Nitrokey Storage. In the Nitrokey App open 'Menu -> Configure -> "
"Change Admin PIN' to open the dialog to change the PIN."
msgstr ""

#: ../storage/linux/change-user-and-admin-pin.md:25
#: ../storage/mac/change-user-and-admin-pin.md:25
#: ../storage/windows/change-user-and-admin-pin.md:25
msgid "You can change the admin PIN in the dialog window now."
msgstr ""

#: ../storage/linux/change-user-and-admin-pin.md:27
#: ../storage/mac/change-user-and-admin-pin.md:27
#: ../storage/windows/change-user-and-admin-pin.md:27
msgid ""
"The admin PIN can have up to 20 digits and other characters (e.g. "
"alphabetic and special characters). But as the admin PIN is blocked as "
"soon three wrong PIN attempts were done, it is sufficiently secure to "
"only have 8 digits PIN. The default PIN is 12345678."
msgstr ""

#: ../storage/linux/elliptic-curves-ecc-support.md:1
#: ../storage/mac/elliptic-curves-ecc-support.md:1
#: ../storage/windows/elliptic-curves-ecc-support.md:1
msgid "Elliptic Curves (ECC) Support"
msgstr ""

#: ../storage/linux/elliptic-curves-ecc-support.md:3
#: ../storage/mac/elliptic-curves-ecc-support.md:3
#: ../storage/windows/elliptic-curves-ecc-support.md:3
msgid "RSA-2048 Becomes Increasingly Insecure"
msgstr ""

#: ../storage/linux/elliptic-curves-ecc-support.md:5
#: ../storage/mac/elliptic-curves-ecc-support.md:5
#: ../storage/windows/elliptic-curves-ecc-support.md:5
msgid ""
"For security reasons, the German Federal Office for Information  Security"
" (Bundesamt für Sicherheit in der Informationstechnik, BSI) no  longer "
"recommends RSA keys with a length of 2048 bit to be used after 2022. This"
" means that longer keys will need to come into use in the  foreseeable "
"future. Assuming a usage period of five years, is is already necessary to"
" generate longer keys. However, longer RSA keys with 3072  bit or 4096 "
"bit are significantly slower. For this reason the new  Nitrokey Storage 2"
" and Pro 2 (resp. the integrated OpenPGP Card version  3.3) supports "
"encryption by means of elliptic-curve cryptography (ECC). This method is "
"considered to be just as secure with smaller ECC keys as longer RSA keys "
"and is also considerably faster."
msgstr ""

#: ../storage/linux/elliptic-curves-ecc-support.md:7
#: ../storage/mac/elliptic-curves-ecc-support.md:7
#: ../storage/windows/elliptic-curves-ecc-support.md:7
msgid "Basics of Elliptic-Curve Cryptography"
msgstr ""

#: ../storage/linux/elliptic-curves-ecc-support.md:9
#: ../storage/mac/elliptic-curves-ecc-support.md:9
#: ../storage/windows/elliptic-curves-ecc-support.md:9
msgid ""
"In contrast to RSA, there are many different forms (so-called curves) of "
"elliptic-curve cryptography. Notably, the NSA was involved in the "
"development of the NIST curves. Even if there is no evidence of  back "
"doors in the curves, using a certain curve can pose a question of  trust."
" Fortunately the new Nitrokey Storage 2 and Pro 2 support two kind of "
"curves, namely NIST and Brainpool. In what follows we will use  Brainpool"
" curves. This article provides a good entry point for gaining a general "
"understanding of elliptic-curve cryptography."
msgstr ""

#: ../storage/linux/elliptic-curves-ecc-support.md:11
#: ../storage/mac/elliptic-curves-ecc-support.md:11
#: ../storage/windows/elliptic-curves-ecc-support.md:11
msgid "System Requirements"
msgstr ""

#: ../storage/linux/elliptic-curves-ecc-support.md:13
#: ../storage/mac/elliptic-curves-ecc-support.md:13
#: ../storage/windows/elliptic-curves-ecc-support.md:13
msgid ""
"In order to create keys based on elliptic curves a Nitrokey Storage 2 / "
"Pro 2 and GnuPG version 2.1.17 or higher are required."
msgstr ""

#: ../storage/linux/elliptic-curves-ecc-support.md:15
#: ../storage/mac/elliptic-curves-ecc-support.md:15
#: ../storage/windows/elliptic-curves-ecc-support.md:15
msgid "You can read Nitrokey's OpenPGP Card version via gpg2 —card-status:"
msgstr ""

#: ../storage/linux/elliptic-curves-ecc-support.md:25
#: ../storage/mac/elliptic-curves-ecc-support.md:25
#: ../storage/windows/elliptic-curves-ecc-support.md:25
msgid ""
"The 'Version' field represents the version of the OpenPGP Card  "
"integrated in the Nitrokey — in this case it is 3.3 as needed for  "
"Elliptic-curve cryptography. OpenPGP Card version 2.2 doesn't support  "
"ECC."
msgstr ""

#: ../storage/linux/elliptic-curves-ecc-support.md:27
#: ../storage/mac/elliptic-curves-ecc-support.md:27
#: ../storage/windows/elliptic-curves-ecc-support.md:27
msgid ""
"You can learn about the installed version of GnuPG via gpg2  --version. "
"At least version 2.1.16 is required. The newest GnuPG  version for "
"Windows can be found here and the newest version for MacOS can be found "
"here. A suitable version of GnuPG is included in the GNU/Linux "
"distributions  Ubuntu (since 18.04), Debian (from Stretch onwards), Arch "
"Linux, Fedora  (from Release 26 onwards) and openSUSE Tumbleweed. At the "
"end of this  articles are instructions how to manually update GnuPG on "
"older Ubuntu  versions."
msgstr ""

#: ../storage/linux/elliptic-curves-ecc-support.md:29
#: ../storage/mac/elliptic-curves-ecc-support.md:29
#: ../storage/windows/elliptic-curves-ecc-support.md:29
msgid ""
"::: tip IMPORTANT GnuPG 2.0 is still being used, but support for it has "
"been discontinuied in 2017. All communication partners must use GnuPG 2.1"
" or newer for email encryption by means of ECC, otherwise incompatibility"
"  issues might arise. Therefore you should only use ECC if you are sure  "
"you will be able to circumvent this problem. :::"
msgstr ""

#: ../storage/linux/elliptic-curves-ecc-support.md:33
#: ../storage/mac/elliptic-curves-ecc-support.md:33
#: ../storage/windows/elliptic-curves-ecc-support.md:33
msgid "Key Generation on the Nitrokey Storage 2 / Pro 2"
msgstr ""

#: ../storage/linux/elliptic-curves-ecc-support.md:35
#: ../storage/mac/elliptic-curves-ecc-support.md:35
#: ../storage/windows/elliptic-curves-ecc-support.md:35
msgid ""
"Once these requirements are fulfilled, you can get started. (Warning: "
"existing keys will be overwritten in the process!) You now have two "
"options. The first option is to create the key  directly on the Nitrokey "
"Storage 2 / Pro 2. The benefit here is that the key will never be outside"
" the device and as such can never be read out. The second option is to "
"import a previously locally generated key. The  advantage in this case is"
" that you can securely store a backup of the  key, which can then be "
"restored in case the Nitrokey is lost. Only the  first option is "
"described below. In order to create a key with backup,  you can access "
"the following instructions and use this general information to transfer "
"the key to the Nitrokey."
msgstr ""

#: ../storage/linux/elliptic-curves-ecc-support.md:37
#: ../storage/mac/elliptic-curves-ecc-support.md:37
#: ../storage/windows/elliptic-curves-ecc-support.md:37
msgid ""
"Within GnuPG there is already a \"generate\" command, which can be used "
"to easily create keys on the device. However it is not as yet possible  "
"to select the type of key directly, so the key must first be prepared.  "
"We use the following commands for this:"
msgstr ""

#: ../storage/linux/elliptic-curves-ecc-support.md:45
#: ../storage/mac/elliptic-curves-ecc-support.md:45
#: ../storage/windows/elliptic-curves-ecc-support.md:45
msgid ""
"Alternatively, other curves could be selected, as described in the next "
"section."
msgstr ""

#: ../storage/linux/elliptic-curves-ecc-support.md:47
#: ../storage/mac/elliptic-curves-ecc-support.md:47
#: ../storage/windows/elliptic-curves-ecc-support.md:47
msgid ""
"Now we enter gpg2 --card-edit and see that brainpoolP256r1 is under \"key"
" attributes\" instead of rsa2048."
msgstr ""

#: ../storage/linux/elliptic-curves-ecc-support.md:72
#: ../storage/mac/elliptic-curves-ecc-support.md:72
#: ../storage/windows/elliptic-curves-ecc-support.md:72
msgid "Then we create the key."
msgstr ""

#: ../storage/linux/elliptic-curves-ecc-support.md:104
#: ../storage/mac/elliptic-curves-ecc-support.md:104
#: ../storage/windows/elliptic-curves-ecc-support.md:104
msgid ""
"The Nitrokey now incorporates elliptic-curve cryptography instead of RSA "
"keys and can be used as usual."
msgstr ""

#: ../storage/linux/elliptic-curves-ecc-support.md:106
#: ../storage/mac/elliptic-curves-ecc-support.md:106
#: ../storage/windows/elliptic-curves-ecc-support.md:106
msgid "Available Curves"
msgstr ""

#: ../storage/linux/elliptic-curves-ecc-support.md:108
#: ../storage/mac/elliptic-curves-ecc-support.md:108
#: ../storage/windows/elliptic-curves-ecc-support.md:108
msgid ""
"In the above procedure we chose the Brainpool curves. Alternatively, NIST"
" curves can be used. The configuration is carried out as follows:"
msgstr ""

#: ../storage/linux/elliptic-curves-ecc-support.md:117
#: ../storage/mac/elliptic-curves-ecc-support.md:117
#: ../storage/windows/elliptic-curves-ecc-support.md:117
msgid "Update of GnuPG on Ubuntu"
msgstr ""

#: ../storage/linux/elliptic-curves-ecc-support.md:119
#: ../storage/mac/elliptic-curves-ecc-support.md:119
#: ../storage/windows/elliptic-curves-ecc-support.md:119
msgid ""
"The following steps are needed only if you are running a  Ubuntu version "
"older than 18.04. You can install GnuPG 2.1.18 on such  system with the "
"commands below. This involves newer Debian packages,  which is the "
"easiest option. This approach has been tested successfully  on Ubuntu "
"17.10 and propbably works on 16.04 as well. However, the  occurence of "
"problems during usage can‘t be excluded."
msgstr ""

#: ../storage/linux/elliptic-curves-ecc-support.md:133
#: ../storage/mac/elliptic-curves-ecc-support.md:133
#: ../storage/windows/elliptic-curves-ecc-support.md:133
msgid ""
"In case you want to undo the installation, you have to execute the "
"following commands:"
msgstr ""

#: ../storage/linux/firmware-update.md:1 ../storage/mac/firmware-update.md:1
#: ../storage/windows/firmware-update.md:1
msgid "Firmware Update"
msgstr ""

#: ../storage/linux/firmware-update.md:3 ../storage/mac/firmware-update.md:3
#: ../storage/windows/firmware-update.md:3
msgid ""
"::: danger Warning You should backup all data from the device before "
"upgrading, as firmware upgrades may destroy all data on the device "
"(especially coming from firmware version <0.45)! :::"
msgstr ""

#: ../storage/linux/firmware-update.md:7
msgid ""
"Basically you need both, the Nitrokey App and the program \"dfu-"
"programmer\". The Nitrokey App can be found here, dfu-programmer should "
"be available through your package-manager, e.g. apt-get update && apt-get"
" install dfu-programmer on Debian-based systems."
msgstr ""

#: ../storage/linux/firmware-update.md:9
msgid ""
"Please enable Firmware Update mode as described above through the "
"Nitrokey App. Afterwards, open a terminal and type in the following three"
" commands:"
msgstr ""

#: ../storage/linux/firmware-update.md:16
msgid ""
"whereas \"firmware.hex\" is the file you have downloaded before as "
"described above. \"at32uc3a3256s\" is the name of the controller in the "
"Nitrokey that dfu-programmer should use."
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:1
msgid "Full-Disk Encryption With cryptsetup/LUKS"
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:3
msgid ""
"This guide shows how to configure LUKS-encrypted volumes, to authenticate"
" at boot with Nitrokey Pro or Nitrokey Storage."
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:5
msgid ""
"To provide some background, cryptsetup-initramfs now has support for "
"using OpenPGP smart cards like the Nitrokey Pro and Nitrokey Storage to "
"unlock LUKS-encrypted volumes. Once you finish the setup, you will just "
"need to insert your Nitrokey at boot and enter your User PIN, instead of "
"typing in your regular disk encryption passphrase."
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:7
msgid "These instructions have been tested on Ubuntu 20.04 and Debian 10."
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:9
msgid "::: warning"
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:11
msgid ""
"The following guide can potentially lock you out of your computer. You "
"should be aware of these risks, and we recommend you use the script below"
" on a secondary computer, or after a full backup as you might lose your "
"data."
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:13
#: ../storage/linux/hard-disk-encryption.md:20
#: ../storage/linux/hard-disk-encryption.md:40
#: ../storage/linux/openvpn-configuration-with-easyrsa.md:179
#: ../storage/linux/openvpn-configuration-with-easyrsa.md:207
#: ../storage/linux/openvpn-configuration-with-easyrsa.md:271
#: ../storage/linux/openvpn-configuration-with-easyrsa.md:504
#: ../storage/linux/openvpn-configuration-with-easyrsa.md:517
#: ../storage/linux/openvpn-configuration-with-easyrsa.md:623
msgid ":::"
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:17
msgid "An Ubuntu or Debian computer with at least one LUKS-encrypted volume."
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:19
msgid ""
"See the section below to determine which method is compatible with this "
"guide."
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:21
msgid "A Nitrokey Pro 2 or Nitrokey Storage 2 initialized with keys."
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:23
msgid "Known Issues"
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:25
msgid ""
"So far, the script works only with manually-partitioned volumes, that are"
" composed of an unencrypted /boot partition, and an encrypted root / "
"partition."
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:27
msgid ""
"Please do not select the automatic full-disk encryption provided by the "
"operating system you are using for this guide. You will face recurrent "
"errors when the partitioning is done automatically, using the "
"installation interface on Ubuntu and Debian."
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:29
msgid "Instructions"
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:31
msgid "Install dependencies"
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:39
msgid "Create smartcard-luks directory"
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:46
msgid "You might use sudo if required."
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:48
msgid "Download the smartcard-luks-script"
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:58
msgid "Export the public key"
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:60
msgid "To export your public key from GnuPG's keyring:"
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:68
msgid ""
"If you already have uploaded a public key to a keyserver (or have it "
"stored somewhere else), you should retrieve it in the way you are most "
"comfortable with, and proceed to step 5."
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:70
msgid "Execute the script with the pubkey.asc argument"
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:77
msgid ""
"Once, you run the script with the OpenPGP public key as argument, it "
"automatically sets up a new LUKS secret, encrypts it against that public "
"key, and sets up crypttab, LUKS, initramfs, and GRUB."
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:79
msgid "First you will be prompted for the User PIN"
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:83
msgid ""
"Once you unlock the Nitrokey, you will be prompted for your OLD "
"passphrase. It is the passphrase you entered to encrypt your volume at "
"intallation."
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:87
msgid ""
"Notice: This is a fall-back alternative in case you lose your Nitrokey, "
"or if it's unavailable. So far, it was not tested, and users must be "
"aware of the risk of getting locked out of their computer, if the fall-"
"back method does not work."
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:89
msgid ""
"Once you enter the passphrase, the script finishes the setup in about one"
" minute. Do not interrupt the script, or you might get locked out of your"
" computer after reboot."
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:93
msgid "Done!"
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:95
msgid ""
"By now you must reboot, and you should be able to use your Nitrokey to "
"unlock your encrypted drive."
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:99
msgid "After reboot you should be prompted for your User PIN"
msgstr ""

#: ../storage/linux/full-disk-encryption-with-cryptsetup-luks.md:103
msgid "Enter your User PIN to unlock the drive"
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:1
msgid "Hard Disk Encryption"
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:3
msgid "VeraCrypt (formerly TrueCrypt)"
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:5
msgid ""
"VeraCrypt is a free and Open Source disk encryption software for Windows,"
" macOS, and GNU/Linux. It is the successor of TrueCrypt and thus "
"recommended, although the following instructions should apply to "
"TrueCrypt as well."
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:7
msgid ""
"Follow these steps to use the program with Nitrokey Storage 2 or Nitrokey"
" Pro 2:"
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:9
msgid "Install the latest release of OpenSC, or download the PKCS#11 library."
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:10
msgid ""
"Choose the library in VeraCrypt under Settings>Preferences>Security Token"
" (location depends on system, e.g. /usr/lib/opensc)."
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:11
msgid "Generate a 64 Byte key file via Tools>Keyfile Generator."
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:12
msgid ""
"Now you should be able to import the generated key file via Tools>Manage "
"Security Token Keyfiles. You should choose the first Slot ([0] User PIN)."
" The keyfile is then stored on the Nitrokey as 'Private Data Object 1' "
"(PrivDO1)."
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:13
msgid "After this you should wipe the original keyfile on your Computer securely!"
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:14
msgid ""
"Now you can use VeraCrypt with the Nitrokey: Create a container, choose "
"the keyfile on the device as an alternative to a password."
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:16
msgid "::: warning Security Consideration"
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:18
msgid ""
"Please note that VeraCrypt doesn't make use of the full security which "
"Nitrokey (and smart cards in general) offer. Instead it stores a keyfile "
"on the Nitrokey which theoretically could be stolen by a computer virus "
"after the user enters the PIN."
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:22
msgid ""
"Note: Aloaha Crypt is based on TrueCrypt/VeraCrypt but without the "
"described security limitation."
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:24
msgid "Hard Disk Encryption on Linux with LUKS/dm-crypt"
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:26
msgid ""
"Here are excellent instructions how to use Nitrokey to encrypt your hard "
"disk under Linux with LUKS/dm-crypt. Other instructions."
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:28
msgid ""
"Purism has created a simple script to add the Nitrokey/LibremKey as a way"
" to unlock LUKS partitions (not tested by Nitrokey yet)."
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:30
msgid ""
"This project aims to ease the use of LUKS with the Nitrokey Pro or "
"Storage based on the Password Safe (not tested by Nitrokey yet). A "
"description on how to use it on Gentoo can be found here."
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:32
msgid "For Arch Linux, see initramfs-scencrypt."
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:34
msgid "Storage Encryption on Linux with EncFS"
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:36
msgid "::: tip Prerequisite"
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:38
msgid ""
"Please ensure that you installed the device driver, changed the default "
"PINs and generated or imported keys with GnuPG."
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:42
msgid ""
"EncFS is an easy to utlity for encrypted file systems and it is based on "
"FUSE. You may follow these steps to use it with very long passwords and "
"Nitrokey Pro 2:"
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:44
msgid "Initialization"
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:46
msgid "1. Create a key file with random data:"
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:51
msgid "2. Encrypt the key file and use the User-ID of your Nitrokey"
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:56
msgid "3. Remove the key file in clear text:"
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:60
msgid "4. Create mount point:"
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:64
msgid "5. Create the actual encryption folder"
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:70
msgid "6. Unmount the new file system:"
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:76
msgid "1. Mount encrypted file system and enter PIN of Nitrokey:"
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:80
msgid "2. After usage, unmount the file system:"
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:86
msgid "Storage Encryption on Linux with ECryptFS"
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:88
msgid ""
"eCryptfs is a file based transparent encryption file system for Linux "
"which can be used with Nitrokey through a PKCS#11 driver."
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:90
msgid "See these instructions:"
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:92
msgid "1. Import the certificate and key to the Nitrokey"
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:97
msgid "2. Create the file ~/.ecryptfsrc.pkcs11:"
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:101
msgid "3. Enter this content:"
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:110
msgid "4. Copy the serialized id for later usage:"
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:117
msgid "Alternatively, try ESOSI or follow these steps using OpenSC and OpenVPN."
msgstr ""

#: ../storage/linux/hard-disk-encryption.md:119
msgid ""
"Source of the guide: https://www.nitrokey.com/documentation/applications"
"#hard-disk-encryption"
msgstr ""

#: ../storage/linux/index.md:1
msgid "Nitrokey Storage, Linux"
msgstr ""

#: ../storage/linux/index.md:3
msgid ""
"To access the OpenPGP smart card of the Nitrokey, install the package "
"libccid. On Debian/Ubuntu based Distributions type in terminal: sudo apt-"
"get update && sudo apt-get install libccid"
msgstr ""

#: ../storage/linux/index.md:6
msgid ""
"If your distribution has a rather old version of libccid (<1.4.21) you "
"have to add the device information by yourself (for example if you are "
"using Ubuntu 14.04 or older). In this case please follow these "
"instructions."
msgstr ""

#: ../storage/linux/index.md:8
msgid "Download and start the Nitrokey App."
msgstr ""

#: ../storage/linux/index.md:9 ../storage/mac/index.md:5
#: ../storage/windows/index.md:14
msgid ""
"Open the About window from Nitrokey App's menu and check if you have the "
"latest firmware installed. If it's not the latest, please update."
msgstr ""

#: ../storage/linux/index.md:10 ../storage/mac/index.md:6
#: ../storage/windows/index.md:15
msgid ""
"Use the Nitrokey App to change the default User PIN (default: 123456) and"
" Admin PIN (default: 12345678) to your own choices."
msgstr ""

#: ../storage/linux/index.md:12 ../storage/mac/index.md:8
#: ../storage/windows/index.md:17
msgid ""
"Your Nitrokey is now ready to use. Checkout the various use cases and "
"supported applications."
msgstr ""

#: ../storage/linux/index.md:14 ../storage/windows/index.md:19
msgid ""
"::: tip Note For many use cases described, it is necessary to have either"
" OpenPGP or S/MIME keys installed on the device (see below). :::"
msgstr ""

#: ../storage/linux/index.md:18 ../storage/mac/index.md:15
#: ../storage/windows/index.md:23
msgid "Key Creation with OpenPGP or S/MIME"
msgstr ""

#: ../storage/linux/index.md:19 ../storage/mac/index.md:16
#: ../storage/windows/index.md:24
msgid ""
"There are two widely used standards for email encryption. While "
"OpenPGP/GnuPG is popular among individuals, S/MIME/x.509 is mostly used "
"by enterprises. If you are in doubt which one to choose, you should use "
"OpenPGP."
msgstr ""

#: ../storage/linux/index.md:21 ../storage/mac/index.md:18
#: ../storage/windows/index.md:26
msgid "instructions for using the OpenPGP standard with the Nitrokey"
msgstr ""

#: ../storage/linux/index.md:22 ../storage/mac/index.md:19
#: ../storage/windows/index.md:27
msgid "instructions for using S/MIME with the Nitrokey"
msgstr ""

#: ../storage/linux/login-to-windows-domain-computers-with-ms-active-directory.md:1
#: ../storage/mac/login-to-windows-domain-computers-with-ms-active-directory.md:1
#: ../storage/windows/login-to-windows-domain-computers-with-ms-active-directory.md:1
msgid "Login to Windows Domain Computers With MS Active Directory"
msgstr ""

#: ../storage/linux/login-to-windows-domain-computers-with-ms-active-directory.md:4
#: ../storage/mac/login-to-windows-domain-computers-with-ms-active-directory.md:4
#: ../storage/windows/login-to-windows-domain-computers-with-ms-active-directory.md:4
msgid "Download and install the latest OpenSC."
msgstr ""

#: ../storage/linux/login-to-windows-domain-computers-with-ms-active-directory.md:5
#: ../storage/mac/login-to-windows-domain-computers-with-ms-active-directory.md:5
#: ../storage/windows/login-to-windows-domain-computers-with-ms-active-directory.md:5
msgid ""
"Use a text editor to add the following settings to C:\\Program "
"Files\\OpenSC Project\\OpenSC\\opensc.conf."
msgstr ""

#: ../storage/linux/login-to-windows-domain-computers-with-ms-active-directory.md:27
#: ../storage/mac/login-to-windows-domain-computers-with-ms-active-directory.md:27
#: ../storage/windows/login-to-windows-domain-computers-with-ms-active-directory.md:27
msgid ""
"Open a command terminal and enter \"regedit\". Use regedit to import this"
" file."
msgstr ""

#: ../storage/linux/login-to-windows-domain-computers-with-ms-active-directory.md:28
#: ../storage/mac/login-to-windows-domain-computers-with-ms-active-directory.md:28
#: ../storage/windows/login-to-windows-domain-computers-with-ms-active-directory.md:28
msgid ""
"Now you can enroll Nitrokeys for your users managed in Microsoft Active "
"Directory. You may either use Microsoft PKI, gpgsm, or Smart Policy. The "
"following steps describe the usage of Smart Policy."
msgstr ""

#: ../storage/linux/login-to-windows-domain-computers-with-ms-active-directory.md:29
#: ../storage/mac/login-to-windows-domain-computers-with-ms-active-directory.md:29
#: ../storage/windows/login-to-windows-domain-computers-with-ms-active-directory.md:29
msgid "Download and install Smart Policy."
msgstr ""

#: ../storage/linux/login-to-windows-domain-computers-with-ms-active-directory.md:30
#: ../storage/mac/login-to-windows-domain-computers-with-ms-active-directory.md:30
#: ../storage/windows/login-to-windows-domain-computers-with-ms-active-directory.md:30
msgid "Select \"Read a smart card\""
msgstr ""

#: ../storage/linux/login-to-windows-domain-computers-with-ms-active-directory.md:34
#: ../storage/mac/login-to-windows-domain-computers-with-ms-active-directory.md:34
#: ../storage/windows/login-to-windows-domain-computers-with-ms-active-directory.md:34
msgid "Select the certificate, mapping, and user."
msgstr ""

#: ../storage/linux/login-to-windows-domain-computers-with-ms-active-directory.md:38
#: ../storage/mac/login-to-windows-domain-computers-with-ms-active-directory.md:38
#: ../storage/windows/login-to-windows-domain-computers-with-ms-active-directory.md:38
msgid "Verify the device status via CRL."
msgstr ""

#: ../storage/linux/login-to-windows-domain-computers-with-ms-active-directory.md:42
#: ../storage/mac/login-to-windows-domain-computers-with-ms-active-directory.md:42
#: ../storage/windows/login-to-windows-domain-computers-with-ms-active-directory.md:42
msgid "Choose a Group Policy Object (GPO)."
msgstr ""

#: ../storage/linux/login-to-windows-domain-computers-with-ms-active-directory.md:46
#: ../storage/mac/login-to-windows-domain-computers-with-ms-active-directory.md:46
#: ../storage/windows/login-to-windows-domain-computers-with-ms-active-directory.md:46
msgid "Confirm applying the mapping."
msgstr ""

#: ../storage/linux/login-to-windows-domain-computers-with-ms-active-directory.md:50
#: ../storage/linux/login-with-eidauthenticate-on-stand-alone-windows-computers.md:41
#: ../storage/mac/login-to-windows-domain-computers-with-ms-active-directory.md:50
#: ../storage/mac/login-with-eidauthenticate-on-stand-alone-windows-computers.md:41
#: ../storage/windows/login-to-windows-domain-computers-with-ms-active-directory.md:50
#: ../storage/windows/login-with-eidauthenticate-on-stand-alone-windows-computers.md:41
msgid ""
"From now on, when logging on to your Windows computer you need to connect"
" the Nitrokey and enter your PIN."
msgstr ""

#: ../storage/linux/login-with-eidauthenticate-on-stand-alone-windows-computers.md:1
#: ../storage/mac/login-with-eidauthenticate-on-stand-alone-windows-computers.md:1
#: ../storage/windows/login-with-eidauthenticate-on-stand-alone-windows-computers.md:1
msgid "Login With EIDAuthenticate on Stand Alone Windows Computers"
msgstr ""

#: ../storage/linux/login-with-eidauthenticate-on-stand-alone-windows-computers.md:3
#: ../storage/mac/login-with-eidauthenticate-on-stand-alone-windows-computers.md:3
#: ../storage/windows/login-with-eidauthenticate-on-stand-alone-windows-computers.md:3
msgid ""
"Download and install the latest version of OpenSC. Please install the "
"OpenPGP-CSP driver instead if using Nitrokey Storage 2 or Nitrokey Pro 2."
msgstr ""

#: ../storage/linux/login-with-eidauthenticate-on-stand-alone-windows-computers.md:4
#: ../storage/mac/login-with-eidauthenticate-on-stand-alone-windows-computers.md:4
#: ../storage/windows/login-with-eidauthenticate-on-stand-alone-windows-computers.md:4
msgid ""
"Download and install EIDAuthenticate. Note: The free community edition is"
" disabled. You may test the enterprise edition instead."
msgstr ""

#: ../storage/linux/login-with-eidauthenticate-on-stand-alone-windows-computers.md:5
#: ../storage/mac/login-with-eidauthenticate-on-stand-alone-windows-computers.md:5
#: ../storage/windows/login-with-eidauthenticate-on-stand-alone-windows-computers.md:5
msgid "Start EIDConfigurationWizard.exe"
msgstr ""

#: ../storage/linux/login-with-eidauthenticate-on-stand-alone-windows-computers.md:6
#: ../storage/mac/login-with-eidauthenticate-on-stand-alone-windows-computers.md:6
#: ../storage/windows/login-with-eidauthenticate-on-stand-alone-windows-computers.md:6
msgid "Select \"Associate a new certificate\""
msgstr ""

#: ../storage/linux/login-with-eidauthenticate-on-stand-alone-windows-computers.md:10
#: ../storage/mac/login-with-eidauthenticate-on-stand-alone-windows-computers.md:10
#: ../storage/windows/login-with-eidauthenticate-on-stand-alone-windows-computers.md:10
msgid ""
"Select or generate a Certificate Authority which should issue the user's "
"certificate on the Nitrokey."
msgstr ""

#: ../storage/linux/login-with-eidauthenticate-on-stand-alone-windows-computers.md:14
#: ../storage/mac/login-with-eidauthenticate-on-stand-alone-windows-computers.md:14
#: ../storage/windows/login-with-eidauthenticate-on-stand-alone-windows-computers.md:14
msgid ""
"Enter the user PIN which you defined previously in step 4. Wait a moment "
"until a new keypair and certificate are generated. In case your Nitrokey "
"is not detected you may want to execute \"certutil -scinfo\" for "
"troubleshooting."
msgstr ""

#: ../storage/linux/login-with-eidauthenticate-on-stand-alone-windows-computers.md:19
#: ../storage/mac/login-with-eidauthenticate-on-stand-alone-windows-computers.md:19
#: ../storage/windows/login-with-eidauthenticate-on-stand-alone-windows-computers.md:19
msgid "Select the newly generated certificate and press continue."
msgstr ""

#: ../storage/linux/login-with-eidauthenticate-on-stand-alone-windows-computers.md:23
#: ../storage/mac/login-with-eidauthenticate-on-stand-alone-windows-computers.md:23
#: ../storage/windows/login-with-eidauthenticate-on-stand-alone-windows-computers.md:23
msgid "All checks should succeed. Press continue."
msgstr ""

#: ../storage/linux/login-with-eidauthenticate-on-stand-alone-windows-computers.md:27
#: ../storage/mac/login-with-eidauthenticate-on-stand-alone-windows-computers.md:27
#: ../storage/windows/login-with-eidauthenticate-on-stand-alone-windows-computers.md:27
msgid "Enter the password of your user account."
msgstr ""

#: ../storage/linux/login-with-eidauthenticate-on-stand-alone-windows-computers.md:31
#: ../storage/mac/login-with-eidauthenticate-on-stand-alone-windows-computers.md:31
#: ../storage/windows/login-with-eidauthenticate-on-stand-alone-windows-computers.md:31
msgid "Enter the user PIN which you defined previously in step 4."
msgstr ""

#: ../storage/linux/login-with-eidauthenticate-on-stand-alone-windows-computers.md:35
#: ../storage/mac/login-with-eidauthenticate-on-stand-alone-windows-computers.md:35
#: ../storage/windows/login-with-eidauthenticate-on-stand-alone-windows-computers.md:35
msgid "The final screen may look like this."
msgstr ""

#: ../storage/linux/login-with-eidauthenticate-on-stand-alone-windows-computers.md:39
#: ../storage/mac/login-with-eidauthenticate-on-stand-alone-windows-computers.md:39
#: ../storage/windows/login-with-eidauthenticate-on-stand-alone-windows-computers.md:39
msgid ""
"You may perform further configurations such as activate the force smart "
"card policy or automatically lock the computer when removing the Nitrokey"
" (by using EIDConfigurationWizardElevated.exe)."
msgstr ""

#: ../storage/linux/openpgp-email-encryption.md:1
#: ../storage/mac/openpgp-email-encryption.md:1
#: ../storage/windows/openpgp-email-encryption.md:1
msgid "OpenPGP Email Encryption"
msgstr ""

#: ../storage/linux/openpgp-email-encryption.md:3
#: ../storage/linux/smime-email-encryption.md:5
#: ../storage/mac/openpgp-email-encryption.md:3
#: ../storage/mac/smime-email-encryption.md:5
#: ../storage/windows/openpgp-email-encryption.md:3
#: ../storage/windows/smime-email-encryption.md:5
msgid "There are two widely used standards for email encryption."
msgstr ""

#: ../storage/linux/openpgp-email-encryption.md:5
#: ../storage/linux/smime-email-encryption.md:7
#: ../storage/mac/openpgp-email-encryption.md:5
#: ../storage/mac/smime-email-encryption.md:7
#: ../storage/windows/openpgp-email-encryption.md:5
#: ../storage/windows/smime-email-encryption.md:7
msgid "OpenPGP/GnuPG is popular among individuals,"
msgstr ""

#: ../storage/linux/openpgp-email-encryption.md:6
#: ../storage/linux/smime-email-encryption.md:8
#: ../storage/mac/openpgp-email-encryption.md:6
#: ../storage/mac/smime-email-encryption.md:8
#: ../storage/windows/openpgp-email-encryption.md:6
#: ../storage/windows/smime-email-encryption.md:8
msgid "S/MIME/X.509 is mostly used by enterprises."
msgstr ""

#: ../storage/linux/openpgp-email-encryption.md:8
#: ../storage/mac/openpgp-email-encryption.md:8
#: ../storage/windows/openpgp-email-encryption.md:8
msgid ""
"If you are in doubt which one to choose, you should use OpenPGP. While "
"this page describes the usage of OpenPGP, S/MIME is described here."
msgstr ""

#: ../storage/linux/openpgp-email-encryption.md:10
#: ../storage/mac/openpgp-email-encryption.md:10
#: ../storage/windows/openpgp-email-encryption.md:10
msgid ""
"Please familiarize yourself with the general concept behind the OpenPGP "
"standard first, for example by reading this info graphic of the Free "
"Software Foundation."
msgstr ""

#: ../storage/linux/openpgp-email-encryption.md:12
#: ../storage/linux/openpgp-key-generation-on-device.md:9
#: ../storage/linux/openpgp-key-generation-using-gpa.md:8
#: ../storage/linux/openpgp-key-generation-with-backup.md:5
#: ../storage/mac/openpgp-email-encryption.md:12
#: ../storage/mac/openpgp-key-generation-on-device.md:9
#: ../storage/mac/openpgp-key-generation-with-backup.md:5
#: ../storage/windows/openpgp-email-encryption.md:12
#: ../storage/windows/openpgp-key-generation-on-device.md:9
#: ../storage/windows/openpgp-key-generation-using-gpa.md:8
#: ../storage/windows/openpgp-key-generation-with-backup.md:5
msgid "Key Generation"
msgstr ""

#: ../storage/linux/openpgp-email-encryption.md:14
#: ../storage/mac/openpgp-email-encryption.md:14
#: ../storage/windows/openpgp-email-encryption.md:14
msgid "If you do not have OpenPGP keys yet, you need to generate them first."
msgstr ""

#: ../storage/linux/openpgp-email-encryption.md:16
#: ../storage/mac/openpgp-email-encryption.md:16
#: ../storage/windows/openpgp-email-encryption.md:16
msgid ""
"Generate keys on Nitrokey - this is the best option if you are "
"unexperienced, but you won't have a backup of your keys and therefore "
"won't be able to mitigate the loss of the Nitrokey"
msgstr ""

#: ../storage/linux/openpgp-email-encryption.md:17
#: ../storage/mac/openpgp-email-encryption.md:17
#: ../storage/windows/openpgp-email-encryption.md:17
msgid ""
"Generate keys on Nitrokey with different algorithm or key size - this is "
"as secure as the previous option and thus you won't have a  backup as "
"well, but you can change the key attributes (that is the  algorithm and "
"key size)"
msgstr ""

#: ../storage/linux/openpgp-email-encryption.md:18
#: ../storage/mac/openpgp-email-encryption.md:18
#: ../storage/windows/openpgp-email-encryption.md:18
msgid ""
"Generate keys locally and copy them to Nitrokey - this is the most "
"flexible, expert option,  but only secure if your system is not "
"compromised, because you can  create a backup key outside your Nitrokey A"
" similar description in french can be found here."
msgstr ""

#: ../storage/linux/openpgp-email-encryption.md:21
#: ../storage/mac/openpgp-email-encryption.md:21
#: ../storage/windows/openpgp-email-encryption.md:21
msgid "Importing Existing Keys"
msgstr ""

#: ../storage/linux/openpgp-email-encryption.md:23
#: ../storage/mac/openpgp-email-encryption.md:23
#: ../storage/windows/openpgp-email-encryption.md:23
msgid ""
"If you already have OpenPGP keys you may want to use them with your  "
"Nitrokey, instead of generating new ones. Importing exsiting keys works  "
"basically the same as generating keys locally first and copy them to the "
"Nitrokey (see above). Therefore, please have a look at the corresponding "
"instructions. Note that you probably want to generate another subkey for"
"  authentication to your existing key. See at the same instructions for "
"subkey generation."
msgstr ""

#: ../storage/linux/openpgp-email-encryption.md:27
#: ../storage/linux/smime-email-encryption.md:47
#: ../storage/mac/openpgp-email-encryption.md:27
#: ../storage/mac/smime-email-encryption.md:47
#: ../storage/windows/openpgp-email-encryption.md:27
#: ../storage/windows/smime-email-encryption.md:47
msgid "You can find further information about the usage on these pages:"
msgstr ""

#: ../storage/linux/openpgp-email-encryption.md:29
#: ../storage/mac/openpgp-email-encryption.md:29
#: ../storage/windows/openpgp-email-encryption.md:29
msgid "for using OpenPGP encryption with Thunderbird"
msgstr ""

#: ../storage/linux/openpgp-email-encryption.md:30
#: ../storage/mac/openpgp-email-encryption.md:30
#: ../storage/windows/openpgp-email-encryption.md:30
msgid "for using OpenPGP encryption with Outlook"
msgstr ""

#: ../storage/linux/openpgp-email-encryption.md:31
#: ../storage/mac/openpgp-email-encryption.md:31
#: ../storage/windows/openpgp-email-encryption.md:31
msgid ""
"for using Claws Mail, an email client (and news reader) for Linux and "
"Windows"
msgstr ""

#: ../storage/linux/openpgp-email-encryption.md:32
#: ../storage/linux/smime-email-encryption.md:51
#: ../storage/mac/openpgp-email-encryption.md:32
#: ../storage/mac/smime-email-encryption.md:51
#: ../storage/windows/openpgp-email-encryption.md:32
#: ../storage/windows/smime-email-encryption.md:51
msgid ""
"for using Evolution, an email client for the Gnome Desktop on Linux "
"systems"
msgstr ""

#: ../storage/linux/openpgp-email-encryption.md:33
#: ../storage/mac/openpgp-email-encryption.md:33
#: ../storage/windows/openpgp-email-encryption.md:33
msgid "for using GPGTools on macOS."
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:1
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:1
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:1
msgid "OpenPGP Email Encryption With Thunderbird"
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:3
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:3
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:3
msgid "Thunderbird 78.3 and newer"
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:5
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:5
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:5
msgid ""
"At the moment Thunderbird's 78 support for the OpenPGP emails is not easy"
" to set up. See Thunderbird's documentation for details. Here is a "
"comprehensive German guide."
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:6
#: ../storage/linux/smime-email-encryption.md:53
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:6
#: ../storage/mac/smime-email-encryption.md:53
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:6
#: ../storage/windows/smime-email-encryption.md:53
msgid "Troubleshooting"
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:7
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:7
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:7
msgid ""
"Error message: The configured key ID '4BA0183FCBA844A7' cannot be found "
"on your keyring - make sure that:"
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:8
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:8
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:8
msgid "public key is imported to the Thunderbird's manager"
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:9
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:9
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:9
msgid ""
"the key ID does not contain any whitespace, and consists of 16 characters"
" from range 0-9 A-F"
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:10
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:10
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:10
msgid "you have GPA or Kleopatra software installed"
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:12
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:12
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:12
msgid "Please use Kleopatra or GPA software to handle the smart card."
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:15
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:15
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:15
msgid "Thunderbird 77 and older"
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:17
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:17
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:17
msgid "Installation"
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:19
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:19
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:19
msgid "Install the device driver as described here."
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:21
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:21
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:21
msgid "Install Thunderbird and the Add-on Enigmail."
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:23
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:23
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:23
msgid "Changing PINs"
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:25
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:25
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:25
msgid "There are two PINs for the Nitrokey:"
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:27
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:27
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:27
msgid "The User PIN required for daily work"
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:29
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:29
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:29
msgid ""
"The Admin PIN is required to change keys or other settings of the device."
" In addition, the Nitrokey can be unlocked (for example, after 3 times "
"incorrect input of the User PIN) by means of the Admin PIN."
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:31
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:31
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:31
msgid ""
"After receiving the Nitrokey, you should immediately change the User PIN "
"= \"123456\" and Admin PIN = \"12345678\"."
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:33
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:33
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:33
msgid "Procedure"
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:35
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:35
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:35
msgid "Insert the Nitrokey into a USB port on your computer."
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:37
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:37
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:37
msgid "Start Thunderbird."
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:39
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:39
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:39
msgid ""
"In Thunderbird, select as shown in the following picture. \"OpenPGP\" → "
"\"Manage smart card\""
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:43
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:43
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:43
msgid "In the \"SmartCard Details\" window, select \"SmartCard → Change PIN\""
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:47
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:47
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:47
msgid ""
"Select \"Change PIN\". This is your User PIN you need for daily work. "
"Enter the current PIN ( \"123456\" for delivery) and twice your new PIN. "
"For this PIN you can use the characters: a-z A-Z 0-9 / .;;:- !? () [] {}%"
" +. The PIN should be at least 6 characters long. Click \"OK\"."
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:51
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:51
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:51
msgid "Repeat the procedure for the Admin PIN. \"SmartCard → Change PIN\""
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:55
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:55
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:55
msgid ""
"Select Change Admin PIN. This is your Admin PIN that you only rarely "
"need. Enter the current PIN ( \"12345678\" for delivery) and the new PIN "
"twice. For this PIN, you can use the characters: a-z A-Z 0-9 / .;;:- !? "
"() [] {}% +. The PIN should be at least 8 characters long. Click \"OK\"."
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:59
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:59
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:59
msgid ""
"You have now changed the PINs and should continue to generate your "
"personal keys."
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:62
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:62
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:62
msgid "Generation of Keys"
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:64
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:64
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:64
msgid ""
"To encrypt data and e-mails, a key pair consisting of a public key and a "
"private key, must first be generated. The so-called public key is used to"
" encrypt the data or e-mails. You can distribute this to all those with "
"whom you want to communicate securely (for example, publish it publicly "
"on your site). The so-called private key is used to decrypt the data or "
"messages. This key should NEVER be made known! Usually, you also do not "
"have direct access to it (see below), since this is stored securely on "
"the Nitrokey. Use the Nitrokey to create both keys using the following "
"procedure:"
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:66
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:66
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:66
msgid "Insert the Nitrokey into a USB port on your computer. StartThunderbird"
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:69
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:69
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:69
msgid ""
"In Thunderbird, select as shown in the following picture „OpenPGP“ → "
"„Manage Smart Card“"
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:72
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:72
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:72
msgid ""
"In the \"SmartCard details\" window, select \"SmartCard\" → \"Generate "
"key\""
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:74
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:74
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:74
msgid ""
"In the following window, select your e-mail address for which you want to"
" generate keys. Verify that the e-mail address specified in \"User ID\" "
"is correct. You can also specify whether a private key backup copy should"
" be stored on your computer."
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:78
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:78
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:78
msgid ""
"If you do not create a backup copy, you have no chance to get your "
"encrypted data if the Nitrokey is lost or damaged!"
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:82
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:82
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:82
msgid ""
"It is recommended to store this safety device. Select \"Save key copy of "
"the key outside the Smard Card\". Then enter your personal password for "
"the backup copy under \"Passphrase\". This password should not be less "
"than 8 characters, and should contain both uppercase and lowercase "
"letters and numbers. You can also use a long sentence, but avoid known "
"prose or lyric. Also, no name or known term should be used."
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:84
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:84
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:84
msgid ""
"Allowed characters: a-z A-Z 0-9 /.,;:-!?( )[ ]{}%+ (keine Umlaute "
"ä,ü,ö,Ä,Ü,Ö oder ß)"
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:86
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:86
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:86
msgid ""
"Poor Password: qwertz123, IchliebeSusi3, Password, If you can dream it, "
"you can do it."
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:88
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:88
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:88
#, python-format
msgid ""
"Strong Password: g(Ak?2Pn7Yn oder Ki.stg2bLqzp%d or A dog with greeen "
"Earz and fife legs (spelling errors increase security)"
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:90
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:90
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:90
msgid ""
"You do not need this password for daily work. It is only necessary for "
"the restoration of the secret key, e.g. if you have lost the Nitrokey. "
"Therefore, keep the password in a safe place."
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:92
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:92
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:92
msgid ""
"You can also specify whether and when the key should be automatically "
"invalid. This means, from this point onwards, no more e-mails can be "
"encrypted with this key and you have to create a new key pair."
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:94
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:94
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:94
msgid "Finally, click on \"Generate key pair\"."
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:98
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:98
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:98
msgid "You are now asked if the key should be generated. Confirm with \"Yes\"."
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:102
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:102
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:102
msgid ""
"In order for the program to write your keys to the stick, you must enter "
"the admin PIN and the user PIN (changed above)."
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:106
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:106
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:106
msgid ""
"The key generation can take a few minutes. Do not terminate the program "
"prematurely!"
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:108
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:108
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:108
msgid ""
"When the key generation is complete, you receive the following message. A"
" certificate is now created that allows you to invalidate your key in an "
"emergency. This certificate is automatically saved with your private key."
" This should be printed out or backed up on at least one other external "
"medium so that you can revoke the validity of the keys if your keys and "
"backups are lost. Click \"Yes\""
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:111
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:111
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:111
msgid ""
"You can now select the directory in which the backup copy is stored. This"
" copy is encrypted with your password entered above. This means that no "
"one can read or use the keys without your password. Do not give your "
"password to anyone. This file with the name of your e-mail address and "
"the suffix \".asc\" should be backed up on another medium. After "
"selecting the directory, click \"Save\"."
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:116
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:116
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:116
msgid "Here you must again specify your user PIN or passphrase. Then click \"OK\""
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:119
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:119
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:119
#: ../storage/windows/two-factor-authentication-microsoft.md:43
msgid "img12"
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:122
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:122
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:122
msgid ""
"You will now see the message that the certificate was created and saved. "
"Click \"OK\""
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:128
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:128
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:128
msgid ""
"Key generation is now complete. You can now exit the program (File - "
"Close)."
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:130
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:130
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:130
#: ../storage/windows/two-factor-authentication-microsoft.md:49
msgid "img14"
msgstr ""

#: ../storage/linux/openpgp-email-encryption-with-thunderbird.md:132
#: ../storage/mac/openpgp-email-encryption-with-thunderbird.md:132
#: ../storage/windows/openpgp-email-encryption-with-thunderbird.md:132
msgid ""
"Your Nitrokey is personalized and ready to use. Have fun with the secure "
"email encryption!"
msgstr ""

#: ../storage/linux/openpgp-key-generation-on-device.md:1
#: ../storage/mac/openpgp-key-generation-on-device.md:1
#: ../storage/windows/openpgp-key-generation-on-device.md:1
msgid "OpenPGP Key Generation On-Device"
msgstr ""

#: ../storage/linux/openpgp-key-generation-on-device.md:3
#: ../storage/mac/openpgp-key-generation-on-device.md:3
#: ../storage/windows/openpgp-key-generation-on-device.md:3
msgid ""
"The following instructions explain the generation of OpenPGP keys "
"directly on the Nitrokey. This is done by using the command line "
"interface of GnuPG. Thus, you need to have GnuPG installed on your "
"system. The newest GnuPG version for Windows can be found here and the "
"newest version for MacOS can be found here. Users of Linux systems please"
" install GnuPG with help of the package manager."
msgstr ""

#: ../storage/linux/openpgp-key-generation-on-device.md:5
#: ../storage/mac/openpgp-key-generation-on-device.md:5
#: ../storage/windows/openpgp-key-generation-on-device.md:5
msgid ""
"::: tip Note These instructions are based on GnuPG version 2.2.6 or "
"higher. Some Linux Distributions have an older version installed. In this"
" case please choose a different method as listed here or install a newer "
"version if possible. :::"
msgstr ""

#: ../storage/linux/openpgp-key-generation-on-device.md:11
#: ../storage/mac/openpgp-key-generation-on-device.md:11
#: ../storage/windows/openpgp-key-generation-on-device.md:11
msgid ""
"The following descriptions explain the basic key generation on-device via"
" GnuPG's command line interface. The default behaviour is to generate RSA"
" keys of 2048 bit size. If you want to change the key algorithm and "
"length, have a look at the next section first."
msgstr ""

#: ../storage/linux/openpgp-key-generation-on-device.md:13
#: ../storage/mac/openpgp-key-generation-on-device.md:13
#: ../storage/windows/openpgp-key-generation-on-device.md:13
msgid "Open a command line and type gpg2 --card-edit."
msgstr ""

#: ../storage/linux/openpgp-key-generation-on-device.md:15
#: ../storage/mac/openpgp-key-generation-on-device.md:15
#: ../storage/windows/openpgp-key-generation-on-device.md:15
msgid ""
"To open the Windows command line please push the Windows-key and R-key. "
"Now type 'cmd.exe' in the text field and hit enter. To open a Terminal on"
" macOS or GNU/Linux please use the application search (e.g. spotlight on "
"macOS)."
msgstr ""

#: ../storage/linux/openpgp-key-generation-on-device.md:43
#: ../storage/mac/openpgp-key-generation-on-device.md:43
#: ../storage/windows/openpgp-key-generation-on-device.md:43
msgid ""
"Now you are in the interactive interface of GnuPG. Activate the admin "
"commands with admin and use generate afterwards to start the generation "
"of keys."
msgstr ""

#: ../storage/linux/openpgp-key-generation-on-device.md:85
#: ../storage/mac/openpgp-key-generation-on-device.md:85
#: ../storage/windows/openpgp-key-generation-on-device.md:85
msgid ""
"Please do not create the suggested off-card backup. This \"backup\" does "
"only save the encryption key, but not the signature and authentication "
"keys. In case of a loss of the device, you will not be able to restore "
"the whole key set. So on the one hand it is no full backup (use these "
"instructions instead, if you need one) and on the other hand you risk "
"that someone else can get in possession of your encryption key. The "
"advantage of generating keys on-device is to make sure that keys are "
"stored securely. Therefore, we recommend to skip this half-backup."
msgstr ""

#: ../storage/linux/openpgp-key-generation-on-device.md:87
#: ../storage/mac/openpgp-key-generation-on-device.md:87
#: ../storage/windows/openpgp-key-generation-on-device.md:87
msgid ""
"Now you have a complete key set on your device which can be used for the "
"various applications listed on our site. Type quit and hit enter to exit."
msgstr ""

#: ../storage/linux/openpgp-key-generation-on-device.md:89
#: ../storage/mac/openpgp-key-generation-on-device.md:89
#: ../storage/windows/openpgp-key-generation-on-device.md:89
msgid "Change Key Attributes"
msgstr ""

#: ../storage/linux/openpgp-key-generation-on-device.md:91
#: ../storage/mac/openpgp-key-generation-on-device.md:91
#: ../storage/windows/openpgp-key-generation-on-device.md:91
msgid ""
"This section is about changing the key attributes. If you want to use the"
" default values, you can proceed with the next section."
msgstr ""

#: ../storage/linux/openpgp-key-generation-on-device.md:93
#: ../storage/mac/openpgp-key-generation-on-device.md:93
#: ../storage/windows/openpgp-key-generation-on-device.md:93
msgid "Open a command line and type gpg2 --card-edit --expert."
msgstr ""

#: ../storage/linux/openpgp-key-generation-on-device.md:119
#: ../storage/mac/openpgp-key-generation-on-device.md:119
#: ../storage/windows/openpgp-key-generation-on-device.md:119
msgid ""
"Now you are in the interactive interface of GnuPG. As you can see in the "
"\"Key attributes\" field above, the default value rsa2048 is set. To "
"change them, activate the admin commands with admin and use key-attr "
"afterwards to change the attributes of the keys."
msgstr ""

#: ../storage/linux/openpgp-key-generation-on-device.md:149
#: ../storage/mac/openpgp-key-generation-on-device.md:149
#: ../storage/windows/openpgp-key-generation-on-device.md:149
msgid ""
"You can choose the attribute for each key (that is, signature, encryption"
" and authentication key). Most people will use the same attributes for "
"every key. Type list to see the results (have look at the \"Key "
"attributes\" field, which now reads rsa4096)."
msgstr ""

#: ../storage/linux/openpgp-key-generation-on-device.md:175
#: ../storage/mac/openpgp-key-generation-on-device.md:175
#: ../storage/windows/openpgp-key-generation-on-device.md:175
msgid ""
"Type quit and hit enter to exit or proceed directly with the previous "
"section to actually generate the keys with the key attributes you just "
"set."
msgstr ""

#: ../storage/linux/openpgp-key-generation-on-device.md:177
#: ../storage/mac/openpgp-key-generation-on-device.md:177
#: ../storage/windows/openpgp-key-generation-on-device.md:177
msgid ""
"The following table illustrates which algorithm can be used on which "
"device."
msgstr ""

#: ../storage/linux/openpgp-key-generation-on-device.md:180
#: ../storage/linux/openpgp-key-generation-with-backup.md:75
#: ../storage/mac/openpgp-key-generation-on-device.md:180
#: ../storage/mac/openpgp-key-generation-with-backup.md:75
#: ../storage/windows/openpgp-key-generation-on-device.md:180
#: ../storage/windows/openpgp-key-generation-with-backup.md:75
msgid ""
"|                 | Start           | Pro + Storage  | Pro 2 + Storage 2 "
"| | --------------: |:---------------:| "
"--------------:|------------------:| | rsa1024         |       ✓         "
"|        ✓       |                   | | rsa2048         |       ✓"
"         |        ✓       |         ✓         | | rsa3072         |"
"                 |        ✓       |         ✓         | | rsa4096"
"         |                 |        ✓       |         ✓         | | "
"curve25519 (ECC)|       ✓         |                |                   | "
"| NIST (ECC)      |       ✓         |                |         ✓         "
"| | Brainpool (ECC) |                 |                |         ✓"
"         | | secp256k1       |       ✓         |                |"
"                   |"
msgstr ""

#: ../storage/linux/openpgp-key-generation-on-device.md:191
#: ../storage/linux/openpgp-key-generation-using-gpa.md:32
#: ../storage/linux/openpgp-key-generation-with-backup.md:320
#: ../storage/mac/openpgp-key-generation-on-device.md:191
#: ../storage/mac/openpgp-key-generation-with-backup.md:320
#: ../storage/windows/openpgp-key-generation-on-device.md:191
#: ../storage/windows/openpgp-key-generation-using-gpa.md:32
#: ../storage/windows/openpgp-key-generation-with-backup.md:320
msgid "Exporting Public Key and Keyserver Usage"
msgstr ""

#: ../storage/linux/openpgp-key-generation-on-device.md:193
#: ../storage/linux/openpgp-key-generation-using-gpa.md:34
#: ../storage/linux/openpgp-key-generation-with-backup.md:322
#: ../storage/mac/openpgp-key-generation-on-device.md:193
#: ../storage/mac/openpgp-key-generation-with-backup.md:322
#: ../storage/windows/openpgp-key-generation-on-device.md:193
#: ../storage/windows/openpgp-key-generation-using-gpa.md:34
#: ../storage/windows/openpgp-key-generation-with-backup.md:322
msgid ""
"Although you can start to use your Nitrokey right away after generating "
"the keys on your system, you need to import your public key on every "
"system, you want to use the Nitrokey on. So to be prepared you have two "
"options: You either save the public key anywhere you like and use it on "
"another system or you save the public key on a webpage/keyserver."
msgstr ""

#: ../storage/linux/openpgp-key-generation-on-device.md:195
#: ../storage/linux/openpgp-key-generation-with-backup.md:324
#: ../storage/mac/openpgp-key-generation-on-device.md:195
#: ../storage/mac/openpgp-key-generation-with-backup.md:324
#: ../storage/windows/openpgp-key-generation-on-device.md:195
#: ../storage/windows/openpgp-key-generation-with-backup.md:324
msgid "Generating a Public Key File"
msgstr ""

#: ../storage/linux/openpgp-key-generation-on-device.md:197
#: ../storage/mac/openpgp-key-generation-on-device.md:197
#: ../storage/windows/openpgp-key-generation-on-device.md:197
msgid ""
"To get a simple file of your public key, you can just use gpg2 --armor "
"--export keyID > pubkey.asc. Use either the fingerprint as \"keyID\" "
"(look at gpg -K to get it) or just use your email address as an "
"identifier."
msgstr ""

#: ../storage/linux/openpgp-key-generation-on-device.md:199
#: ../storage/mac/openpgp-key-generation-on-device.md:199
#: ../storage/windows/openpgp-key-generation-on-device.md:199
msgid ""
"You can carry this file with you or send it to anyone who you like. This "
"file is not secret at all. If you want to use the Nitrokey on another "
"system, you first import this public key via gpg2 --import pubkey.asc and"
" then types gpg2 --card-status so that the system knows where to look for"
" this key. That's all."
msgstr ""

#: ../storage/linux/openpgp-key-generation-on-device.md:201
#: ../storage/linux/openpgp-key-generation-with-backup.md:330
#: ../storage/mac/openpgp-key-generation-on-device.md:201
#: ../storage/mac/openpgp-key-generation-with-backup.md:330
#: ../storage/windows/openpgp-key-generation-on-device.md:201
#: ../storage/windows/openpgp-key-generation-with-backup.md:330
msgid "Uploading the Public Key"
msgstr ""

#: ../storage/linux/openpgp-key-generation-on-device.md:203
#: ../storage/linux/openpgp-key-generation-with-backup.md:332
#: ../storage/mac/openpgp-key-generation-on-device.md:203
#: ../storage/mac/openpgp-key-generation-with-backup.md:332
#: ../storage/windows/openpgp-key-generation-on-device.md:203
#: ../storage/windows/openpgp-key-generation-with-backup.md:332
msgid ""
"If you do not want to carry a public keyfile with you, you can upload it "
"to keyserver. You can do this by typing gpg --keyserver "
"search.keyserver.net --send-key keyID. If you are using another machine "
"you can just import it by using gpg --keyserver search.keyserver.net "
"--recv-key keyID."
msgstr ""

#: ../storage/linux/openpgp-key-generation-on-device.md:205
#: ../storage/linux/openpgp-key-generation-with-backup.md:334
#: ../storage/mac/openpgp-key-generation-on-device.md:205
#: ../storage/mac/openpgp-key-generation-with-backup.md:334
#: ../storage/windows/openpgp-key-generation-on-device.md:205
#: ../storage/windows/openpgp-key-generation-with-backup.md:334
msgid ""
"Another possibility is to change the URL setting on your card. Start gpg "
"--card-edit again and first set the URL where the key is situated (e.g. "
"on the keyserver or on your webpage etc.) via the url command. From now "
"on you can import the key on another system by just using the fetch "
"command within the gpg --card-edit environment."
msgstr ""

#: ../storage/linux/openpgp-key-generation-using-gpa.md:1
#: ../storage/windows/openpgp-key-generation-using-gpa.md:1
msgid "OpenPGP Key Generation Using GPA"
msgstr ""

#: ../storage/linux/openpgp-key-generation-using-gpa.md:3
#: ../storage/windows/openpgp-key-generation-using-gpa.md:3
msgid ""
"The following instructions explain the generation of OpenPGP keys "
"directly on the Nitrokey with help of the GNU Privacy Assistant (GPA). "
"You won't be able to create a backup of these keys. Thus, if you lose the"
" Nitrokey or it breaks you can not decrypt mails or use these keys "
"anymore. Please see here for a comparison of the different methods to "
"generate OpenPGP keys."
msgstr ""

#: ../storage/linux/openpgp-key-generation-using-gpa.md:5
#: ../storage/windows/openpgp-key-generation-using-gpa.md:5
msgid ""
"You need to have GnuPG and GPA installed on your system. The newest "
"version for Windows can be found here (make sure to check \"GPA\" during "
"the installation!). Users of Linux systems please install GnuPG and GPA "
"with help of the package manager (e.g. using sudo apt install gnupg gpa "
"on Ubuntu)."
msgstr ""

#: ../storage/linux/openpgp-key-generation-using-gpa.md:10
#: ../storage/windows/openpgp-key-generation-using-gpa.md:10
msgid ""
"At first, open the GNU Privacy Assistant (GPA). You may are asked to "
"generate a key, you can skip this step for now by clicking \"Do it "
"later\". In the main window, please click on \"Card\" or \"Card "
"Manager\"."
msgstr ""

#: ../storage/linux/openpgp-key-generation-using-gpa.md:14
#: ../storage/windows/openpgp-key-generation-using-gpa.md:14
msgid ""
"Another windows opens. Please go to \"Card\" -> \"Generate key\" to start"
" the key generation process."
msgstr ""

#: ../storage/linux/openpgp-key-generation-using-gpa.md:18
#: ../storage/windows/openpgp-key-generation-using-gpa.md:18
msgid ""
"Now you can put in your name and the email address you want to use for "
"the key that will be generated next. You may choose an expiration date "
"for your key, but you don't have to."
msgstr ""

#: ../storage/linux/openpgp-key-generation-using-gpa.md:20
#: ../storage/windows/openpgp-key-generation-using-gpa.md:20
msgid ""
"Please do not use the backup checkbox. This \"backup\" does only save the"
" encryption key. In case of a loss of the device, you will not be able to"
" restore the whole key set. So on the one hand it is no full backup (use "
"these instructions instead, if you need one) and on the other hand you "
"risk that someone else can get in possession of your encryption key. The "
"advantage of generating keys on-device is to make sure that keys are "
"stored securely. Therefore, we recommend to skip this half-backup."
msgstr ""

#: ../storage/linux/openpgp-key-generation-using-gpa.md:24
#: ../storage/windows/openpgp-key-generation-using-gpa.md:24
msgid ""
"You will be asked for the admin PIN (default: 12345678) and the user PIN "
"(default: 123456). When the key generation is finished, you can see the "
"fingerprints of the keys on the bottom of the window. You may fill up the"
" fields shown above, which are saved on your Nitrokey as well."
msgstr ""

#: ../storage/linux/openpgp-key-generation-using-gpa.md:28
#: ../storage/windows/openpgp-key-generation-using-gpa.md:28
msgid ""
"Now you can close the window and go back to the main window. Your key "
"will be visible in the key manager after refreshing. Every application "
"which makes use of GnuPG will work with your Nitrokey as well, because "
"GnuPG is fully aware of the fact, that the keys are stored on your "
"Nitrokey."
msgstr ""

#: ../storage/linux/openpgp-key-generation-using-gpa.md:38
#: ../storage/windows/openpgp-key-generation-using-gpa.md:38
msgid ""
"Right-click on your key entry in the key manager and click \"Export "
"Keys...\" to export the public key to a file and/or \"Send Keys...\" to "
"upload the key to a keyserver."
msgstr ""

#: ../storage/linux/openpgp-key-generation-using-gpa.md:40
#: ../storage/windows/openpgp-key-generation-using-gpa.md:40
msgid ""
"You can carry the keyfile with you or send it to anyone who you like. "
"This file is not secret at all. If you want to use the Nitrokey on "
"another system, you first import this public key via clicking on \"Keys\""
" -> \"Importing Keys...\" and choosing the file."
msgstr ""

#: ../storage/linux/openpgp-key-generation-using-gpa.md:42
#: ../storage/windows/openpgp-key-generation-using-gpa.md:42
msgid ""
"If you do not want to carry a public keyfile with you, you can upload it "
"to keyserver. If you are using another machine you can just import it by "
"using \"Server\" -> \"Retrieve Keys...\" and entering your name or key "
"id."
msgstr ""

#: ../storage/linux/openpgp-key-generation-using-gpa.md:44
#: ../storage/windows/openpgp-key-generation-using-gpa.md:44
msgid ""
"Another possibility is to change the URL setting on your card. Open the "
"card manager again and fill in the URL where the key is situated (e.g. on"
" the keyserver or on your webpage etc.). From now on you can import the "
"key on another system by right-clicking on the URL and click on \"Fetch "
"Key\"."
msgstr ""

#: ../storage/linux/openpgp-key-generation-with-backup.md:1
#: ../storage/mac/openpgp-key-generation-with-backup.md:1
#: ../storage/windows/openpgp-key-generation-with-backup.md:1
msgid "OpenPGP Key Generation With Backup"
msgstr ""

#: ../storage/linux/openpgp-key-generation-with-backup.md:3
#: ../storage/mac/openpgp-key-generation-with-backup.md:3
#: ../storage/windows/openpgp-key-generation-with-backup.md:3
msgid ""
"The following instructions explain the generation of OpenPGP keys and how"
" to copy them to the Nitrokey. This method has the advantage of providing"
" a backup of the keys in case of losing or breaking the Nitrokey. The "
"instructions are based on the command line interface of GnuPG. Thus, you "
"need to have GnuPG installed on your system. The newest GnuPG version for"
" Windows can be found here and the newest version for MacOS can be found "
"here. Users of Linux systems please install GnuPG with help of the "
"package manager."
msgstr ""

#: ../storage/linux/openpgp-key-generation-with-backup.md:7
#: ../storage/mac/openpgp-key-generation-with-backup.md:7
#: ../storage/windows/openpgp-key-generation-with-backup.md:7
msgid ""
"At first, you need to generate a key locally. You can decide, which key "
"attributes to use and - most importantly - you can export the key and "
"keep it somewhere save in case you need to restore the key."
msgstr ""

#: ../storage/linux/openpgp-key-generation-with-backup.md:9
#: ../storage/mac/openpgp-key-generation-with-backup.md:9
#: ../storage/windows/openpgp-key-generation-with-backup.md:9
msgid "Main Key and Encryption Subkey"
msgstr ""

#: ../storage/linux/openpgp-key-generation-with-backup.md:11
#: ../storage/mac/openpgp-key-generation-with-backup.md:11
#: ../storage/windows/openpgp-key-generation-with-backup.md:11
msgid ""
"We can use the command gpg --full-generate-key --expert to start a guided"
" key generation with all possible options. You can choose the key type "
"(usually RSA (1) or ECC (9)), the length of the key and other attributes."
" The following output is just a simple example, you may choose other "
"values."
msgstr ""

#: ../storage/linux/openpgp-key-generation-with-backup.md:73
#: ../storage/mac/openpgp-key-generation-with-backup.md:73
#: ../storage/windows/openpgp-key-generation-with-backup.md:73
msgid ""
"The following table illustrates which algorithm can be used on which "
"device, in case you want to use different key attributes."
msgstr ""

#: ../storage/linux/openpgp-key-generation-with-backup.md:86
#: ../storage/mac/openpgp-key-generation-with-backup.md:86
#: ../storage/windows/openpgp-key-generation-with-backup.md:86
msgid "Subkey for Authentication"
msgstr ""

#: ../storage/linux/openpgp-key-generation-with-backup.md:88
#: ../storage/mac/openpgp-key-generation-with-backup.md:88
#: ../storage/windows/openpgp-key-generation-with-backup.md:88
msgid ""
"You now have a main key with the capability to sign and certify (marked "
"as [SC]) and a subkey for encryption (marked as [E]). It is necessary to "
"have another subkey for use cases in which authentication is needed. This"
" subkey is generated in the next step. Type in gpg --edit-key --expert "
"keyID to start the process, whereas \"keyID\" is either the id of the key"
" or the email address used during key generation."
msgstr ""

#: ../storage/linux/openpgp-key-generation-with-backup.md:108
#: ../storage/mac/openpgp-key-generation-with-backup.md:108
#: ../storage/windows/openpgp-key-generation-with-backup.md:108
msgid ""
"Now you are in the interactive mode of GnuPG and you can add a key by "
"simply typing addkey. You need to choose the key you want to use. It is "
"crucial to choose \"set your own capabilities\", because we want to have "
"the \"authenticate\" capability which is not available otherwise. We "
"toggle sign and encrypt by typing s and e and we activate authenticate by"
" typing a."
msgstr ""

#: ../storage/linux/openpgp-key-generation-with-backup.md:166
#: ../storage/mac/openpgp-key-generation-with-backup.md:166
#: ../storage/windows/openpgp-key-generation-with-backup.md:166
msgid ""
"We quit with q. Afterwards we need to answer the same questions as "
"before. Finally, we have a ready-to-go key set which we can import to our"
" device."
msgstr ""

#: ../storage/linux/openpgp-key-generation-with-backup.md:200
#: ../storage/mac/openpgp-key-generation-with-backup.md:200
#: ../storage/windows/openpgp-key-generation-with-backup.md:200
msgid ""
"Now is good time to backup your key. Please keep this backup very secure."
" It is best practice to never have this key on a regular computer which "
"has connection to the internet, so that the key never gets compromised. "
"You can create a backup with something like:"
msgstr ""

#: ../storage/linux/openpgp-key-generation-with-backup.md:206
#: ../storage/mac/openpgp-key-generation-with-backup.md:206
#: ../storage/windows/openpgp-key-generation-with-backup.md:206
msgid "Key Import"
msgstr ""

#: ../storage/linux/openpgp-key-generation-with-backup.md:208
#: ../storage/mac/openpgp-key-generation-with-backup.md:208
#: ../storage/windows/openpgp-key-generation-with-backup.md:208
msgid ""
"You have a main key and two subkeys which can be imported to your "
"Nitrokey. Before proceeding please make sure that you really have a "
"backup of the key, if you need one. The keytocard command used in the "
"next steps will delete your key from your disk!"
msgstr ""

#: ../storage/linux/openpgp-key-generation-with-backup.md:210
#: ../storage/mac/openpgp-key-generation-with-backup.md:210
#: ../storage/windows/openpgp-key-generation-with-backup.md:210
msgid ""
"We start the process by accessing the interactive interface of GnuPG "
"again with gpg --edit-key --expert keyID, whereas keyID is either the id "
"of the key or the email address used during key generation."
msgstr ""

#: ../storage/linux/openpgp-key-generation-with-backup.md:246
#: ../storage/mac/openpgp-key-generation-with-backup.md:246
#: ../storage/windows/openpgp-key-generation-with-backup.md:246
msgid ""
"We just imported the main key to the card. Now we proceed with the two "
"subkeys. We type key 1 to select the encryption subkey and type in "
"keytocard again and select the slot to use."
msgstr ""

#: ../storage/linux/openpgp-key-generation-with-backup.md:275
#: ../storage/mac/openpgp-key-generation-with-backup.md:275
#: ../storage/windows/openpgp-key-generation-with-backup.md:275
msgid ""
"Now we deselect the first key with key 1 and select the second subkey "
"with key 2 and move it as well with keytocard. Afterwards we quit and "
"save the changes."
msgstr ""

#: ../storage/linux/openpgp-key-generation-with-backup.md:318
#: ../storage/mac/openpgp-key-generation-with-backup.md:318
#: ../storage/windows/openpgp-key-generation-with-backup.md:318
msgid ""
"Your keys are now moved to the Nitrokey and thus secured in hardware. "
"Congratulations!"
msgstr ""

#: ../storage/linux/openpgp-key-generation-with-backup.md:326
#: ../storage/mac/openpgp-key-generation-with-backup.md:326
#: ../storage/windows/openpgp-key-generation-with-backup.md:326
msgid ""
"To get a simple file of your public key, you can just use gpg --armor "
"--export keyID > pubkey.asc. Use either the fingerprint as \"keyID\" "
"(look at gpg -K to get it) or just use your email address as an "
"identifier."
msgstr ""

#: ../storage/linux/openpgp-key-generation-with-backup.md:328
#: ../storage/mac/openpgp-key-generation-with-backup.md:328
#: ../storage/windows/openpgp-key-generation-with-backup.md:328
msgid ""
"You can carry this file with you or send it to anyone who you like. This "
"file is not secret at all. If you want to use the Nitrokey on another "
"system, you first import this public key via gpg --import pubkey.asc and "
"then types gpg --card-status so that the system knows where to look for "
"this key. That's all."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:1
msgid "OpenVPN Configuration with Easy-RSA"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:3
msgid ""
"Notice: This guide is work-in-progress, and will be updated accordinlgy. "
"Please take this status into consideration."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:5
msgid ""
"This guide shows how to configure OpenVPN clients to login using a "
"Nitrokey Pro 2 or a Nitrokey Storage 2. For software key management we "
"will be using Easy-RSA, a utility that has been evolving alongside "
"OpenVPN."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:7
msgid ""
"To sign the certificates, we will use a Nitrokey HSM 2 set up as "
"Certificate Authority, however this guide does not cover the set up of "
"the CA itself (it is clear and well documented here)."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:9
msgid ""
"We will use Easy-RSA, because it seems to provide some flexibility, and "
"allows key management via external PKIs. We will use it on the server to "
"issue the signing request, and repeat the same process on the client. The"
" Certificate Signing Requests will be signed by the CA on the Nitorkey "
"HSM, and re-transmitted to the server and the client."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:11
msgid "We can decompose the instructions of the guide as following:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:36
#: ../storage/linux/smime-email-encryption-with-thunderbird.md:3
#: ../storage/linux/smime-email-encryption.md:3
#: ../storage/mac/smime-email-encryption-with-outlook.md:5
#: ../storage/mac/smime-email-encryption-with-thunderbird.md:3
#: ../storage/mac/smime-email-encryption.md:3
#: ../storage/windows/openpgp-email-encryption-with-outlook.md:7
#: ../storage/windows/smime-email-encryption-with-outlook.md:5
#: ../storage/windows/smime-email-encryption-with-thunderbird.md:3
#: ../storage/windows/smime-email-encryption.md:3
#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:5
msgid "Prerequisites"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:38
msgid ""
"In the following documentation we will require 3 different machines as "
"following:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:40
msgid "OpenVPN server (v. 2.5) on Debian 10 (EC2 virtual machine - AWS)"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:41
msgid "OpenVPN client (v. 2.4.9) on Fedora 30 (local machine)"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:42
msgid ""
"The Certificate Authority will be accessible from a standalone machine "
"with Fedora 30 (local machine)"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:44
msgid ""
"To interact with the devices we will require OpenSC 0.20 installed on the"
" client and CA machine (the local machines). You can follow the "
"instructions to set it up in this link (*Unix)."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:46
msgid "To download the dependencies on Fedora machines we can this instruction:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:52
msgid "For Debian Linux, more recent OpenSC packages are available here."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:54
msgid "We will use the following Nitrokeys for physical key management:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:56
msgid "An authentication key using the Nitrokey Pro 2 (pdf)"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:58
msgid "A Certificate Authority (CA) using the Nitrokey HSM 2 (pdf)"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:60
msgid ""
"As a reminder, to build a Certificate Authority on Nitrokey HSM 2, you "
"may follow the instructions available in the documentation."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:62
msgid ""
"Alternatively you may set up your own CA on a on a separate machine, or "
"use the OpenVPN tutorial which also relies on Easy-RSA. The last 2 "
"options rely on software solutions for key management."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:66
msgid "Server side"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:68
msgid "1. Install OpenVPN"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:70
msgid "First we need to enable IP Forwarding by editing /etc/sysctl.conf file"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:74
msgid "Uncomment or edit accordingly the following line"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:78
msgid "Close after saving it, and enter this command"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:84
msgid "Change to root and download the GPG key that signed the package"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:90
msgid "Add the URL of the adequate OpenVPN packages to the sources.list file"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:99
msgid "Next we download OpenVPN"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:82
msgid ""
"Once IP forwarding is done, we will need to download the latest release "
"of OpenvPN for our Debian 10 server, according to these instructions:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:97
msgid ""
"We downloaded OpenVPN 2.5 as \"password prompt\" requires at least "
"OpenVPN version 2.4.8 to login."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:104
msgid ""
"If you want to check the version, it possible by calling --version and "
"print the following:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:114
msgid "2. Install Easy-RSA"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:116
msgid ""
"To build the PKI, we will download the latest version of Easy-RSA on the "
"server and client machines. To get the latest release, go to the Releases"
" page on the official EasyRSA GitHub project, copy the download link for "
"the file ending in .tgz, and then paste it into the following command:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:118
msgid "1. Download the latest release"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:124
msgid "2. Extract the tarball"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:131
msgid "3. Create a PKI for OpenVPN server"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:133
msgid ""
"Before you can create your OpenVPN server’s private key and certificate, "
"you need to create a local Public Key Infrastructure directory on your "
"OpenVPN server. You will use this directory to manage the server and "
"clients’ certificate requests, instead of making them directly on your CA"
" server."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:135
msgid ""
"To build a PKI directory on your OpenVPN server, you’ll need to populate "
"a file called vars with some default values."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:137
msgid "1. Create a vars file"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:145
msgid "2. Once the file is opened, paste in the following two lines"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:152
msgid ""
"These are the only two lines that you need in this vars file on your "
"OpenVPN server since it will not be used as a Certificate Authority. They"
" will ensure that your private keys and certificate requests are "
"configured to use Elliptic Curve Cryptography (ECC) to generate keys, and"
" secure signatures for your clients and OpenVPN server."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:154
msgid ""
"In regards to the choice of the cryptographic algorithms, I follow the "
"model in this tutorial, and you can customize these according to your "
"specific needs."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:156
msgid "3. Initialize the PKI"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:158
msgid ""
"Once you have populated the vars file you can proceed with creating the "
"PKI directory. To do so, run the easyrsa script with the init-pki option:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:163
msgid ""
"After you’ve initialized your PKI on the OpenVPN server, you are ready to"
" move on to the next step, which is creating an OpenVPN server "
"certificate request and private key."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:165
msgid "4. Create server.req and server.key"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:167
msgid ""
"Now that your OpenVPN server has all the prerequisites installed, the "
"next step is to generate a key pair composed of a private key (to keep "
"secret), and a Certificate Signing Request (.csr) on your OpenVPN server."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:169
msgid ""
"In general terms, on systems where we generate a key and request, these "
"files are left unencrypted by using the nopass argument, since servers "
"usually need to start up without any password input. This generates an "
"unencrypted key, so mind protect its access and file permissions "
"carefully."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:171
msgid "::: tip Configuration notes from OpenVPN:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:173
msgid ""
"The server, and each client, must have their own cert and key file. The "
"server and all clients will use the same CA file."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:174
msgid "Server certificate should have the following:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:176
msgid "keyUsage:  digitalSignature, keyEncipherment"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:177
msgid "extendedKeyUsage: serverAuth"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:181
msgid "1. Create the signing request for the server"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:183
msgid ""
"Navigate to the ~/easyrsa directory on your OpenVPN Server as your non-"
"root user, and enter the following commands:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:189
msgid ""
"This will create a private key for the server and a certificate request "
"file called server.req."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:191
msgid ""
"Once you have a signed certificate, you’ll transfer it back to the "
"OpenVPN server."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:193
msgid "2. Copy the key to the OpenVPN server directory"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:199
msgid ""
"After completing these steps, you have successfully created a private key"
" for your OpenVPN server. You have also generated a Certificate Signing "
"Request for the OpenVPN server."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:201
msgid "::: tip File extensions for certificate signing requests"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:203
msgid ""
"The file extension that is adopted by the CA and HSM tutorial indicates "
"the creation of a .csr file, however Easy-RSA creates certificate signing"
" requests with a .req extension."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:205
msgid ""
"We will use interchangeably both extensions, while making sure that we "
"transfer the right files to the Certificate Authority, and generate a "
"final certificate with a .crt extension."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:209
msgid ""
"In the next section of this guide, we will sign a .req file with our CA "
"on deployed on the HSM 2 device. For this purpose, I will use a dedicated"
" machine to sign the requests."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:211
msgid "5. Sign and retrieve server.crt"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:212
msgid ""
"The following instructions require the transfer of the server.req (or "
"server.csr) file to the CA system."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:214
msgid ""
"The transfer itself is not security sensitive, though it is wise to "
"verify if the received file matches the sender's copy, if the transport "
"is untrusted."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:216
msgid ""
"In order to go through these steps, I will extensively rely on these "
"instructions, to sign the certificate signing requests, once we generated"
" them with Easy-RSA."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:218
msgid "1. Sign the server.req file"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:220
msgid ""
"On the local machine dedicated to access the HSM, we will use the tools "
"provided by Opensc 0.20 in order to sign the .req file, and send it back "
"to the OpenVPN server. We assume we have transferred the file from the "
"server machine to the CA machine."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:222
msgid ""
"First we start by plugging the HSM Nitrokey, and enter this instruction "
"for listing the keys available."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:224
msgid "Query the list of available devices"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:230
msgid ""
"​\t(Required step) If this is the first time you sign a certificate with "
"the CA, you might want to retrieve the URI of the CA's private key from "
"the HSM, and include it in the config file."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:232
msgid "The key's URI should be in this format:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:238
msgid "Create openvpn/ directory under certificate-authority/"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:244
msgid "Sign the server.req"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:250
msgid "2. Retrieve the server.crt file to the server machine"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:252
msgid "Transfer the signed certificates to the server"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:254
msgid ""
"From the CA machine, copy the files server.crt and chain.crt to the "
"OpenVPN server. In this example we will use the scp command as following:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:260
msgid "Place the certificates on the server's directory"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:265
msgid "::: warning CA Certificate and chain.crt"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:267
msgid ""
"In the above, the CA returns the signed sever certificate, and includes "
"the CA certificate CA.crt which is the chain.crt file. This can be done "
"over an insecure channel, though the client is encouraged to confirm if "
"the received chain.crt is valid, if the transport is untrusted."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:269
msgid ""
"It is possible to rename the file chain.crt file to CA.crt on the target "
"machine, however we will use chain.crt in the next instructions."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:273
msgid "6. Configure the OpenVPN server"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:275
msgid ""
"A connection that uses TLS requires multiple certificates and keys for "
"authentication. Now that we issued and signed those, we can place them in"
" the right directories. The breakdown of the certificates and keys that "
"must be located at the root directory are the following:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:284
msgid ""
"On your OpenVPN server, now you can create the configuration file "
"server.conf with your favorite text editor. The file can be configured "
"according to your needs, while we make sure to change the server "
"certificate and key sections according the names you chose for the your "
"the files we signed:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:293
msgid "Here is the configuration file we can use for testing these instructions:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:322
msgid "To test if the configuration functions properly, we can use this command:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:328
msgid "7. Start the OpenVPN service on the server"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:330
msgid ""
"Enable the OpenVPN service by adding it to systemctl, and start it using "
"these commands:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:337
msgid "To Double check if the OpenVPN service is active use this command:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:343
msgid "The OpenVPN should be running at this point."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:347
msgid "Client side configuration"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:358
msgid "1. Install OpenVPN and Easy-RSA"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:359
msgid "1. Install the software"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:361
msgid ""
"We can use directly dnf install to install OpenVPN 2.4.9 and Easy-RSA "
"3.0.7"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:367
msgid "2. Then we create as non-root a directory for Easy RSA called Easy-RSA"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:372
msgid "3. And link it to the Easy RSA package we just installed"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:378
msgid "2. Create a PKI for the OpenVPN client"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:380
msgid ""
"In the same manner we created a PKI on the OpenVPN server, we will create"
" a PKI using Easy-RSA on the client side."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:382
msgid "3. Create a client.req and client.key"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:384
msgid ""
"In the same manner we issued the key pair on the sever, we generate a key"
" pair for the client which will be composed of the client.req file and "
"the client.key file. The latter must be kept secret on the client "
"machine."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:386
msgid "4. Sign client.req and issue the client.crt file"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:388
msgid ""
"To transfer the client.req file to the CA machine, we will use the same "
"method as we did for the server.req file."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:390
msgid ""
"Once transferred, on the CA machine we sign the certificate signing "
"request file with this command"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:396
msgid "5. Import client.crt on the Nitrokey from the CA machine"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:397
msgid ""
"/// Some documentation says that we can use the ./pkitool script "
"available with Easy-RSA, to directly initialize a key pair on the "
"Nitrokey, however the pkitool utility seems to be deprecated ///"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:399
msgid ""
"After creating the client.crt file, we plug the Nitrokey Pro 2 device in "
"the CA machine, and import the .crt to the Pro 2 device using this "
"command:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:405
msgid ""
"You can see if the key is effectively stored on the Nitrokey using this "
"command:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:411
msgid "Or alternatively"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:416
msgid "Fore more commands you can refer to the OpenSC wiki."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:418
msgid "6. Retrieve the chain.crt file from the CA machine"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:420
msgid ""
"While we keep the client.crtstored on the nitrokey Pro 2 device, we must "
"retrieve the chain.crt file on the client machine, and store it in the "
"adequate directory. We may use scp as in the method explained in the "
"server section of this guide."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:422
msgid "7. Configure the client to interact with the Nitrokey"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:424
msgid ""
"Now back on the client machine, we will plug the Nitrokey Pro and use it "
"to establish the VPN connection with the server.  In general terms, a "
"connection that uses TLS requires multiple certificates and keys for "
"authentication:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:432
msgid ""
"For this guide we can the following client.conf file, and add the "
"required options to it accordingly:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:453
msgid "1. Determine the correct object"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:455
msgid ""
"Each PKCS#11 provider can support multiple devices. In order to view the "
"available object list you can use the following command:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:472
msgid ""
"Each certificate/private key pair have unique Serialized id string. The "
"serialized id string of the requested certificate should be specified, in"
" the configuration file. We can do this by adding the pkcs11-id option "
"using single quote marks."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:478
msgid "2. Add retrieved Serialized ID to the configuration file"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:480
msgid ""
"Using your favorite text editor, open the server.conf file, and add the "
"following lines, while taking care to insert your own Serialized id:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:487
msgid ""
"For additional settings related to OpenVPN authentication, you may also "
"add few lines to handle key maganagement, although it is optional."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:489
msgid "::: details Click to view the code"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:506
msgid "Optional step"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:508
msgid ""
"If you need to test the configuration, with and without the token on the "
"Nitrokey, you may add lines to the same client.conf and comment/uncomment"
" the relevant lines according to your needs: ::: details Click to view "
"the code"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:519
msgid "3. Configure the OpenVPN client"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:521
msgid "The final configuration file client.conf should look like this one:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:563
msgid "4. Known issues"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:565
msgid ""
"There are some known issues related to OpenVPN login with OpenSC. Please "
"consult these issues here."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:567
msgid "8. Start the OpenVPN client"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:569
msgid "1 Start the OpenVPN service on the client"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:571
msgid "Enable the OpenVPN service, and start it using these commands:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:578
msgid "To double check if the OpenVPN service is active use this command:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:584
msgid "2 Enter your User PIN"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:586
msgid "When executing OpenVPN client, Nitrokey's PIN needs to be entered:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:595
msgid ""
"Unfortunately OpenVPN doesn't seem to be able to establish a handshake "
"and stops at an error as reported here, here and here"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:597
msgid "::: warning error output"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:599
msgid ""
"$ sudo openvpn --client --config client.conf Fri Sep 11 17:42:01 2020 "
"OpenVPN 2.4.9 x86_64-redhat-linux-gnu [SSL (OpenSSL)] [LZO] [LZ4] [EPOLL]"
" [PKCS11] [MH/PKTINFO] [AEAD] built on Apr 24 2020 Fri Sep 11 17:42:01 "
"2020 library versions: OpenSSL 1.1.1g FIPS  21 Apr 2020, LZO 2.08 Fri Sep"
" 11 17:42:01 2020 PKCS#11: Adding PKCS#11 provider '/usr/lib64/pkcs11"
"/opensc-pkcs11.so' Enter User PIN (OpenPGP card) token Password: ****** "
"Fri Sep 11 17:42:12 2020 TCP/UDP: Preserving recently used remote "
"address: [AF_INET]18.157.180.240:1194 Fri Sep 11 17:42:12 2020 Socket "
"Buffers: R=[212992->212992] S=[212992->212992] Fri Sep 11 17:42:12 2020 "
"UDP link local: (not bound) Fri Sep 11 17:42:12 2020 UDP link remote: "
"[AF_INET]18.157.180.240:1194 Fri Sep 11 17:42:12 2020 NOTE: UID/GID "
"downgrade will be delayed because of --client, --pull, or --up-delay Fri "
"Sep 11 17:42:12 2020 TLS: Initial packet from "
"[AF_INET]18.157.180.240:1194, sid=d79690cf 9e38ce89 Fri Sep 11 17:42:12 "
"2020 VERIFY OK: depth=1, CN=server_CA Fri Sep 11 17:42:12 2020 VERIFY KU "
"OK Fri Sep 11 17:42:12 2020 Validating certificate extended key usage Fri"
" Sep 11 17:42:12 2020 ++ Certificate has EKU (str) TLS Web Server "
"Authentication, expects TLS Web Server Authentication Fri Sep 11 17:42:12"
" 2020 VERIFY EKU OK Fri Sep 11 17:42:12 2020 VERIFY OK: depth=0, "
"CN=server Fri Sep 11 17:42:12 2020 OpenSSL: error:141F0006:SSL "
"routines:tls_construct_cert_verify:EVP lib Fri Sep 11 17:42:12 2020 "
"TLS_ERROR: BIO read tls_read_plaintext error Fri Sep 11 17:42:12 2020 TLS"
" Error: TLS object -> incoming plaintext read error Fri Sep 11 17:42:12 "
"2020 TLS Error: TLS handshake failed Fri Sep 11 17:42:12 2020 "
"SIGUSR1[soft,tls-error] received, process restarting Fri Sep 11 17:42:12 "
"2020 Restart pause, 5 second(s)"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:625
msgid ""
"In some reported cases it does not prompt for a PIN on the terminal. One "
"workaround would be to use to use this command to login with the PIN:"
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:630
msgid ""
"Alternatively, you could recompile OpenVPN client with systemd support "
"disabled, and it will prompt you for the PIN as expected."
msgstr ""

#: ../storage/linux/openvpn-configuration-with-easyrsa.md:632
msgid ""
"Another option, would be to login to your OpenVPN instance with the "
"Viscosity client which provides a better user experience especially for "
"entering the PIN."
msgstr ""

#: ../storage/linux/putty.md:1 ../storage/mac/putty.md:1
#: ../storage/windows/putty.md:1
msgid "PuTTY"
msgstr ""

#: ../storage/linux/putty.md:3 ../storage/mac/putty.md:3
#: ../storage/windows/putty.md:3
msgid ""
"This mini-howto assumes that the Nitrokey has been initialized and "
"contains cryptographic keys."
msgstr ""

#: ../storage/linux/putty.md:5 ../storage/mac/putty.md:5
#: ../storage/windows/putty.md:5
msgid "Required on the client side:"
msgstr ""

#: ../storage/linux/putty.md:7 ../storage/mac/putty.md:7
#: ../storage/windows/putty.md:7
msgid "PuTTY or a variant of it"
msgstr ""

#: ../storage/linux/putty.md:8 ../storage/mac/putty.md:8
#: ../storage/windows/putty.md:8
msgid "GPG4Win or pageant.exe with Smartcard support from Dr. Peter Koch"
msgstr ""

#: ../storage/linux/putty.md:9 ../storage/mac/putty.md:9
#: ../storage/windows/putty.md:9
msgid "Optional: OpenPGP Minidriver"
msgstr ""

#: ../storage/linux/putty.md:11 ../storage/mac/putty.md:11
#: ../storage/windows/putty.md:11
msgid "1) Pageant"
msgstr ""

#: ../storage/linux/putty.md:13 ../storage/mac/putty.md:13
#: ../storage/windows/putty.md:13
msgid ""
"start pageant.exe. That this is running is shown in the notification area"
" of the taskbar."
msgstr ""

#: ../storage/linux/putty.md:17 ../storage/mac/putty.md:17
#: ../storage/windows/putty.md:17
msgid "A double click opens the view of the current keys."
msgstr ""

#: ../storage/linux/putty.md:21 ../storage/mac/putty.md:21
#: ../storage/windows/putty.md:21
msgid "After inserting the key it looks like this."
msgstr ""

#: ../storage/linux/putty.md:25 ../storage/mac/putty.md:25
#: ../storage/windows/putty.md:25
msgid ""
"If nothing is displayed here, pageant may have to be restarted or another"
" application is already using the stick. A possibly running pgp-agent "
"must be terminated! Now we only need the public key we want to store in "
"the ssh configuration of the server. Therefore we press CTRL while "
"inserting the stick..."
msgstr ""

#: ../storage/linux/putty.md:29 ../storage/mac/putty.md:29
#: ../storage/windows/putty.md:29
msgid "and then view the Pageant-PublicKeys.txt."
msgstr ""

#: ../storage/linux/putty.md:33 ../storage/mac/putty.md:33
#: ../storage/windows/putty.md:33
msgid ""
"I searched for the ssh-rsa entry of the auth key and added the line on "
"the server to the authorized_keys."
msgstr ""

#: ../storage/linux/putty.md:35 ../storage/mac/putty.md:35
#: ../storage/windows/putty.md:35
msgid "2) PuTTY"
msgstr ""

#: ../storage/linux/putty.md:37 ../storage/mac/putty.md:37
#: ../storage/windows/putty.md:37
msgid "There is surprisingly little to say about PuTTY itself."
msgstr ""

#: ../storage/linux/putty.md:41 ../storage/mac/putty.md:41
#: ../storage/windows/putty.md:41
msgid ""
"\"Attempt authentication using Pageant\" must be set, which is the "
"default anyway."
msgstr ""

#: ../storage/linux/putty.md:43 ../storage/mac/putty.md:43
#: ../storage/windows/putty.md:43
msgid ""
"That's it, as soon as you connect to the server while pageant is running "
"and you have the keys, you will be asked for the password of the Crypto-"
"Stick and can log in."
msgstr ""

#: ../storage/linux/putty.md:45 ../storage/mac/putty.md:45
#: ../storage/windows/putty.md:45
msgid "3) openpgp-minidriver (optional)"
msgstr ""

#: ../storage/linux/putty.md:47 ../storage/mac/putty.md:47
#: ../storage/windows/putty.md:47
msgid ""
"If you are annoyed that Windows reports every time you plug in the stick "
"that no driver could be found for \"Smartcard\", you can get rid of it. "
"You just have to install the x86 or x64 version of the above mentioned "
"driver and the smartcard looks like this:"
msgstr ""

#: ../storage/linux/smime-email-encryption.md:1
#: ../storage/mac/smime-email-encryption.md:1
#: ../storage/windows/smime-email-encryption.md:1
msgid "S/MIME Email Encryption"
msgstr ""

#: ../storage/linux/smime-email-encryption.md:10
#: ../storage/mac/smime-email-encryption.md:10
#: ../storage/windows/smime-email-encryption.md:10
msgid ""
"If you are in doubt which one to choose, you should use OpenPGP, see "
"here. This page describes the usage of S/MIME email encryption."
msgstr ""

#: ../storage/linux/smime-email-encryption.md:12
#: ../storage/mac/smime-email-encryption.md:12
#: ../storage/windows/smime-email-encryption.md:12
msgid ""
"You need to purchase a S/MIME certificate or may already got one by your "
"company. Furthermore, you need to install OpenSC on your System. While "
"GNU/Linux users usually can install OpenSC over the package manager (e.g."
" sudo apt install opensc on Ubuntu), macOS and Windows users can download"
" the installation files from the OpenSC page."
msgstr ""

#: ../storage/linux/smime-email-encryption.md:14
#: ../storage/mac/smime-email-encryption.md:14
#: ../storage/windows/smime-email-encryption.md:14
msgid ""
"Note: Windows users with 64-bit system (standard) need to install both, "
"the 32-bit and the 64-bit version of OpenSC!"
msgstr ""

#: ../storage/linux/smime-email-encryption.md:16
#: ../storage/mac/smime-email-encryption.md:16
#: ../storage/windows/smime-email-encryption.md:16
msgid "Import Existing Key and Certificate"
msgstr ""

#: ../storage/linux/smime-email-encryption.md:18
#: ../storage/mac/smime-email-encryption.md:18
#: ../storage/windows/smime-email-encryption.md:18
msgid ""
"The following instructions are based on the wiki of OpenSC. We will "
"assume, that you already got a key-certificate pair as a .p12  file. "
"Please have a look at the wiki page, if you got a separate key and "
"certificate file."
msgstr ""

#: ../storage/linux/smime-email-encryption.md:20
#: ../storage/mac/smime-email-encryption.md:20
#: ../storage/windows/smime-email-encryption.md:20
msgid ""
"To open the Windows command line please push the Windows-key and  R-key. "
"Now type 'cmd.exe' in the text field and hit enter. To open a  Terminal "
"on macOS or GNU/Linux please use the application search (e.g.  spotlight "
"on macOS)."
msgstr ""

#: ../storage/linux/smime-email-encryption.md:22
#: ../storage/mac/smime-email-encryption.md:22
#: ../storage/windows/smime-email-encryption.md:22
msgid ""
"To make these commands as simple as possible, the .p12 file needs to  be "
"in your home folder. On Windows this is usually  "
"'C:\\Users\\yourusername' and on macOS and GNU/Linux system it will be  "
"'/home/yourusername'. If you do not store the .p12 file there, you have  "
"to adapt the path in the commands below. Please plug in the Nitrokey  "
"before submitting the commands."
msgstr ""

#: ../storage/linux/smime-email-encryption.md:24
#: ../storage/mac/smime-email-encryption.md:24
#: ../storage/windows/smime-email-encryption.md:24
msgid ""
"Assuming that your key-certificate file reads 'myprivate.p12' the "
"commands for Windows looks like this:"
msgstr ""

#: ../storage/linux/smime-email-encryption.md:31
#: ../storage/mac/smime-email-encryption.md:31
#: ../storage/windows/smime-email-encryption.md:31
msgid "and on macOS and GNU/Linux it will be"
msgstr ""

#: ../storage/linux/smime-email-encryption.md:38
#: ../storage/mac/smime-email-encryption.md:38
#: ../storage/windows/smime-email-encryption.md:38
msgid ""
"The two commands copy the key-certificate pair to the slot 2 (needed  for"
" decrypting emails) and slot 3 (needed for signing). The output looks on "
"both systems something like this:"
msgstr ""

#: ../storage/linux/smime-email-encryption.md:42
#: ../storage/mac/smime-email-encryption.md:42
#: ../storage/windows/smime-email-encryption.md:42
msgid ""
"Please note that there will be error messages that can be safely ignored "
"(see output example above). You now have the key-certificate pair loaded "
"on the Nitrokey."
msgstr ""

#: ../storage/linux/smime-email-encryption.md:49
#: ../storage/mac/smime-email-encryption.md:49
#: ../storage/windows/smime-email-encryption.md:49
msgid "for using S/MIME encryption on Thunderbird"
msgstr ""

#: ../storage/linux/smime-email-encryption.md:50
#: ../storage/mac/smime-email-encryption.md:50
#: ../storage/windows/smime-email-encryption.md:50
msgid "for using S/MIME encryption on Outlook"
msgstr ""

#: ../storage/linux/smime-email-encryption.md:55
#: ../storage/mac/smime-email-encryption.md:55
#: ../storage/windows/smime-email-encryption.md:55
msgid ""
"On Windows: Did you install both, the 32-bit and the 64-bit version of "
"OpenSC?"
msgstr ""

#: ../storage/linux/smime-email-encryption.md:56
#: ../storage/mac/smime-email-encryption.md:56
#: ../storage/windows/smime-email-encryption.md:56
msgid ""
"Nitrokey Storage 2: You need to install OpenSC in version 0.18 or higher."
" You can find the files on the OpenSC website for Windows and macOS user "
"or here for Debian/Ubuntu users."
msgstr ""

#: ../storage/linux/smime-email-encryption-with-thunderbird.md:1
#: ../storage/mac/smime-email-encryption-with-thunderbird.md:1
#: ../storage/windows/smime-email-encryption-with-thunderbird.md:1
msgid "S/MIME Email Encryption with Thunderbird"
msgstr ""

#: ../storage/linux/smime-email-encryption-with-thunderbird.md:5
#: ../storage/mac/smime-email-encryption-with-thunderbird.md:5
#: ../storage/windows/smime-email-encryption-with-thunderbird.md:5
msgid ""
"If you do not have a S/MIME key-certificate pair installed on your "
"Nitrokey yet or if you did not installed OpenSC, please look at this page"
" first."
msgstr ""

#: ../storage/linux/smime-email-encryption-with-thunderbird.md:7
#: ../storage/mac/smime-email-encryption-with-thunderbird.md:7
#: ../storage/windows/smime-email-encryption-with-thunderbird.md:7
msgid ""
"You need to have OpenSC installed on your System. Please have a look at "
"the wiki page of the OpenSC project. While GNU/Linux users usually can "
"install OpenSC over the package manager (e.g. sudo apt update && sudo apt"
" install opensc on Ubuntu), macOS and Windows users can download the "
"installation files from the wiki page."
msgstr ""

#: ../storage/linux/smime-email-encryption-with-thunderbird.md:10
#: ../storage/mac/smime-email-encryption-with-outlook.md:11
#: ../storage/mac/smime-email-encryption-with-thunderbird.md:10
#: ../storage/windows/smime-email-encryption-with-outlook.md:11
#: ../storage/windows/smime-email-encryption-with-thunderbird.md:10
msgid ""
"::: tip Note Windows users with 64-bit system (standard) need to install "
"both, the 32-bit and the 64-bit version of OpenSC! :::"
msgstr ""

#: ../storage/linux/smime-email-encryption-with-thunderbird.md:14
#: ../storage/mac/smime-email-encryption-with-thunderbird.md:14
#: ../storage/windows/smime-email-encryption-with-thunderbird.md:14
msgid "Settings in Thunderbird"
msgstr ""

#: ../storage/linux/smime-email-encryption-with-thunderbird.md:16
#: ../storage/mac/smime-email-encryption-with-thunderbird.md:16
#: ../storage/windows/smime-email-encryption-with-thunderbird.md:16
msgid ""
"Before you can use the Nitrokey in Thunderbird you have to activate "
"S/MIME encryption in the account settings. You can achieve this by "
"clicking on the menu and go to 'Preferences' -> 'Account Settings' and "
"clicking on 'Security' in the account settings window."
msgstr ""

#: ../storage/linux/smime-email-encryption-with-thunderbird.md:20
#: ../storage/mac/smime-email-encryption-with-thunderbird.md:20
#: ../storage/windows/smime-email-encryption-with-thunderbird.md:20
msgid ""
"Click on \"Security Devices\" to import the right PCKS11 module. Click on"
" \"Load\" on the right-hand side. Now give the Module a name (like "
"\"OpenSC Module\") and click on \"Browse\" to choose the location of the "
"Module (see below)."
msgstr ""

#: ../storage/linux/smime-email-encryption-with-thunderbird.md:24
#: ../storage/mac/smime-email-encryption-with-thunderbird.md:24
#: ../storage/windows/smime-email-encryption-with-thunderbird.md:24
msgid ""
"On Windows the right file lays under \"C:\\Windows\\System32\\opensc-"
"pkcs11.dll\". On macOS and GNU/Linux the file should be in \"/lib/pkcs11"
"/opensc-pkcs11.so\" or \"/usr/lib/pkcs11/opensc-pkcs11.so\" or alike. "
"Press \"OK\" twice and you are back in security section of the account "
"settings. Now you can actually choose a certificate on the upper part of "
"the window. You should get asked for a PIN to unlock your Nitrokey. "
"Please type in your User PIN."
msgstr ""

#: ../storage/linux/smime-email-encryption-with-thunderbird.md:31
#: ../storage/mac/smime-email-encryption-with-thunderbird.md:31
#: ../storage/windows/smime-email-encryption-with-thunderbird.md:31
msgid ""
"When composing an email you can now choose to encrypt and sign the "
"message."
msgstr ""

#: ../storage/linux/two-factor-authentication-for-erp-software-odoo.md:1
#: ../storage/mac/two-factor-authentication-for-erp-software-odoo.md:1
#: ../storage/windows/two-factor-authentication-for-erp-software-odoo.md:1
msgid "Two-factor Authentication for ERP Software Odoo"
msgstr ""

#: ../storage/linux/two-factor-authentication-for-erp-software-odoo.md:3
#: ../storage/mac/two-factor-authentication-for-erp-software-odoo.md:3
#: ../storage/windows/two-factor-authentication-for-erp-software-odoo.md:3
msgid ""
"Odoo is a powerful ERP (Enterprise Resource Planning) software for "
"companies of all sizes. Odoo is available as open source and contains "
"modules for CRM, website, e-commerce, accounting, financial accounting, "
"production, warehouse management, project management, document "
"management, among others."
msgstr ""

#: ../storage/linux/two-factor-authentication-for-erp-software-odoo.md:5
#: ../storage/mac/two-factor-authentication-for-erp-software-odoo.md:5
#: ../storage/windows/two-factor-authentication-for-erp-software-odoo.md:5
msgid ""
"The secure access to such a central software is especially important and "
"can be realized with the Nitrokey. In this case the Nitrokey will be "
"checked during user login in addition to the user password. Phishing "
"attacks are thus foiled and your critical company data is protected."
msgstr ""

#: ../storage/linux/two-factor-authentication-for-erp-software-odoo.md:7
#: ../storage/mac/two-factor-authentication-for-erp-software-odoo.md:7
#: ../storage/windows/two-factor-authentication-for-erp-software-odoo.md:7
msgid ""
"Video: Zwei-Faktor-Authentifizierung mit dem Nitrokey Pro und Nitrokey "
"Storage in Odoo"
msgstr ""

#: ../storage/linux/two-factor-authentication-for-google.md:1
#: ../storage/mac/two-factor-authentication-for-google.md:1
#: ../storage/windows/two-factor-authentication-for-google.md:1
msgid "Two-factor Authentication for Google"
msgstr ""

#: ../storage/linux/two-factor-authentication-for-google.md:3
#: ../storage/mac/two-factor-authentication-for-google.md:3
#: ../storage/windows/two-factor-authentication-for-google.md:3
msgid ""
"These are the basic steps for registering the Nitrokey Pro or Nitrokey "
"Storage as a second factor of a Google account:"
msgstr ""

#: ../storage/linux/two-factor-authentication-for-google.md:5
#: ../storage/mac/two-factor-authentication-for-google.md:5
#: ../storage/windows/two-factor-authentication-for-google.md:5
msgid "Go to https://myaccount.google.com/security#signin"
msgstr ""

#: ../storage/linux/two-factor-authentication-for-google.md:6
#: ../storage/mac/two-factor-authentication-for-google.md:6
#: ../storage/windows/two-factor-authentication-for-google.md:6
msgid "Click “2-Step Verification” on the right side"
msgstr ""

#: ../storage/linux/two-factor-authentication-for-google.md:8
#: ../storage/mac/two-factor-authentication-for-google.md:8
#: ../storage/windows/two-factor-authentication-for-google.md:8
msgid ""
"You need to define a first 2-Step Verfication (e.g. your phone number) "
"method to have access to the alternative second step option (the first "
"2-Step Verification can't be the security key)"
msgstr ""

#: ../storage/linux/two-factor-authentication-for-google.md:10
#: ../storage/mac/two-factor-authentication-for-google.md:10
#: ../storage/windows/two-factor-authentication-for-google.md:10
msgid ""
"Choose \"Authenticator App\" as second step (though you won’t actually "
"need the app)"
msgstr ""

#: ../storage/linux/two-factor-authentication-for-google.md:12
#: ../storage/mac/two-factor-authentication-for-google.md:12
#: ../storage/windows/two-factor-authentication-for-google.md:12
msgid ""
"Choose Android -> press on “Can't scan it” below the qrcode to see the "
"secret key"
msgstr ""

#: ../storage/linux/two-factor-authentication-for-google.md:14
#: ../storage/mac/two-factor-authentication-for-google.md:14
#: ../storage/windows/two-factor-authentication-for-google.md:14
msgid ""
"Copy the key (you can ignore the whitespaces, they do not get copied "
"anyway!) and paste the key into the corresponding field in the Nitrokey "
"App"
msgstr ""

#: ../storage/linux/two-factor-authentication-for-google.md:16
#: ../storage/mac/two-factor-authentication-for-google.md:16
#: ../storage/windows/two-factor-authentication-for-google.md:16
msgid ""
"Click “Next” and follow the instructions (but you use the Nitrokey App "
"instead of the Google Authenticator app to generate the keys)"
msgstr ""

#: ../storage/linux/two-factor-authentication-for-google.md:18
#: ../storage/mac/two-factor-authentication-for-google.md:18
#: ../storage/windows/two-factor-authentication-for-google.md:18
msgid ""
"It is possible to use the same secret key for the Google Autenticator app"
" and the Nitrokey App as well. Just make sure to follow the above "
"procedure and use the qrcode for the Authenticator app afterwards before "
"clicking \"Next\". Now you can use either the Google Authenticator app or"
" the Nitrokey App."
msgstr ""

#: ../storage/linux/two-factor-authentication-with-otp.md:1
#: ../storage/mac/two-factor-authentication-with-otp.md:1
#: ../storage/windows/two-factor-authentication-with-otp.md:1
msgid "Two-factor Authentication with One-Time Passwords (OTP)"
msgstr ""

#: ../storage/linux/two-factor-authentication-with-otp.md:3
#: ../storage/mac/two-factor-authentication-with-otp.md:3
#: ../storage/windows/two-factor-authentication-with-otp.md:3
msgid ""
"The use of One-time Passwords (OTP) is called very differently on the "
"various services supporting it. Sometimes it is referred to as Multi-"
"factor Authentication (MFA), sometimes it is Two-factor Authentication "
"(2FA) or just \"authentication via authenticator app\" like Google "
"Authenticator. Most of these services are compatible for usage with the "
"Nitrokey Pro and Nitrokey Storage. The following instructions show how to"
" enable OTP on our support forum. The procedure is quite similar on most "
"services. For a list of websites supporting OTP have a look at "
"dongleauth.info."
msgstr ""

#: ../storage/linux/two-factor-authentication-with-otp.md:5
#: ../storage/mac/two-factor-authentication-with-otp.md:5
#: ../storage/windows/two-factor-authentication-with-otp.md:5
msgid ""
"You need to have the Nitrokey App installed to use the OTP feature of the"
" Nitrokey Pro and Nitrokey Storage."
msgstr ""

#: ../storage/linux/two-factor-authentication-with-otp.md:7
#: ../storage/mac/two-factor-authentication-with-otp.md:7
#: ../storage/windows/two-factor-authentication-with-otp.md:7
msgid "Configure a Website/Application to Use OTP"
msgstr ""

#: ../storage/linux/two-factor-authentication-with-otp.md:9
#: ../storage/mac/two-factor-authentication-with-otp.md:9
#: ../storage/windows/two-factor-authentication-with-otp.md:9
msgid ""
"Login to the website which supports OTP (in this example, the support "
"forum). Usually you find the option to enable two-factor-authentication "
"under your profile or in the settings."
msgstr ""

#: ../storage/linux/two-factor-authentication-with-otp.md:13
#: ../storage/mac/two-factor-authentication-with-otp.md:13
#: ../storage/windows/two-factor-authentication-with-otp.md:13
msgid ""
"Most of the time, you will get a QR-Code as seen below. There should be "
"an option, to show the secret key directly."
msgstr ""

#: ../storage/linux/two-factor-authentication-with-otp.md:17
#: ../storage/mac/two-factor-authentication-with-otp.md:17
#: ../storage/windows/two-factor-authentication-with-otp.md:17
msgid "We need to copy the secret code."
msgstr ""

#: ../storage/linux/two-factor-authentication-with-otp.md:19
#: ../storage/mac/two-factor-authentication-with-otp.md:19
#: ../storage/windows/two-factor-authentication-with-otp.md:19
msgid ""
"This is what the Nitrokey is actually protecting. You may create a backup"
" of it now (in case the Nitrokey get lost or breaks) by writing it down "
"on a sheet of paper and storing it securely. But be aware that anybody "
"who is in possession of this secret code, can create one-time passwords "
"for your account! Please note that you won't be able to backup this code,"
" once it is stored in the Nitrokey!"
msgstr ""

#: ../storage/linux/two-factor-authentication-with-otp.md:23
#: ../storage/mac/two-factor-authentication-with-otp.md:23
#: ../storage/windows/two-factor-authentication-with-otp.md:23
msgid "Now start the Nitrokey App and open the \"OTP Slot Configuration\"."
msgstr ""

#: ../storage/linux/two-factor-authentication-with-otp.md:27
#: ../storage/mac/two-factor-authentication-with-otp.md:27
#: ../storage/windows/two-factor-authentication-with-otp.md:27
msgid ""
"Paste in the secret key in the corresponding field and choose an "
"appropiate slot name. Click on \"Save\" and type in your admin PIN if "
"requested."
msgstr ""

#: ../storage/linux/two-factor-authentication-with-otp.md:31
#: ../storage/mac/two-factor-authentication-with-otp.md:31
#: ../storage/windows/two-factor-authentication-with-otp.md:31
msgid ""
"After saving the slot you can go to \"Menu\" -> \"Passwords\" -> "
"YourSlotName to get your very first one-time password."
msgstr ""

#: ../storage/linux/two-factor-authentication-with-otp.md:35
#: ../storage/mac/two-factor-authentication-with-otp.md:35
#: ../storage/windows/two-factor-authentication-with-otp.md:35
msgid ""
"The one-time password is copied to your clipboard automatically. You just"
" need to paste it to the field on the website to confirm the correct "
"setup and thus to activate the two-factor authentication."
msgstr ""

#: ../storage/linux/two-factor-authentication-with-otp.md:39
#: ../storage/mac/two-factor-authentication-with-otp.md:39
#: ../storage/windows/two-factor-authentication-with-otp.md:39
msgid "Securely Login to Website/Application"
msgstr ""

#: ../storage/linux/two-factor-authentication-with-otp.md:41
#: ../storage/mac/two-factor-authentication-with-otp.md:41
#: ../storage/windows/two-factor-authentication-with-otp.md:41
msgid ""
"From now on you will get asked for a one-time password additionally to "
"your other credentials if you try to login the the website. You just need"
" to open the Nitrokey App and go to \"Menu\" -> \"Passwords\" -> "
"YourSlotName again to get the one-time password."
msgstr ""

#: ../storage/mac/firmware-update.md:9 ../storage/windows/firmware-update.md:9
msgid "Required Software"
msgstr ""

#: ../storage/mac/firmware-update.md:11
#: ../storage/windows/firmware-update.md:11
msgid ""
"Download the Nitrokey App and the Nitrokey Update Tool. The Nitrokey "
"Update Tool is currently available for macOS and Windows only. For "
"Updating on GNU/Linux please see below. Download the Latest Firmware"
msgstr ""

#: ../storage/mac/firmware-update.md:14
#: ../storage/windows/firmware-update.md:14
msgid "Download the latest firmware"
msgstr ""

#: ../storage/mac/firmware-update.md:16
#: ../storage/windows/firmware-update.md:16
msgid "Download the latest firmware.hex file from here. Older releases are here."
msgstr ""

#: ../storage/mac/firmware-update.md:18
#: ../storage/windows/firmware-update.md:18
msgid "Enable Firmware Update"
msgstr ""

#: ../storage/mac/firmware-update.md:20
#: ../storage/windows/firmware-update.md:20
msgid ""
"If you are using Microsoft Windows Build 1809 and Nitrokey Storage "
"Firmware 0.52 or lower, you need to use another system or if this is not "
"feasible use these instructions to enable the Firmware Update mode."
msgstr ""

#: ../storage/mac/firmware-update.md:22
#: ../storage/windows/firmware-update.md:22
msgid ""
"Set Nitrokey Storage into upgrade mode using the Nitrokey App. This may "
"looks different on your system (see picture below). Generally right click"
" on the icon of the Nitrokey App and go to \"Configure\" -> \"Enable "
"Firmware Update\". The default firmware password is '12345678'."
msgstr ""

#: ../storage/mac/firmware-update.md:24
#: ../storage/windows/firmware-update.md:24
msgid ""
"::: tip Note The Nitrokey is not detected by App anymore once update mode"
" got activated. You have to proceed with the instructions described below"
" to make it work again. :::"
msgstr ""

#: ../storage/mac/firmware-update.md:28
#: ../storage/windows/firmware-update.md:28
msgid "Update the Firmware with the Update Tool"
msgstr ""

#: ../storage/mac/firmware-update.md:30
#: ../storage/windows/firmware-update.md:30
msgid ""
"Now start the previously download Nitrokey Update Tool. After clicking "
"left on \"Select firmware file\" you can choose the previously downloaded"
" .hex file. Please left click on \"Update firmware\" to start the update "
"process. Your device should get detected by the Nitrokey App again as "
"soon as the update is finished."
msgstr ""

#: ../storage/mac/index.md:1
msgid "Nitrokey Storage, Mac"
msgstr ""

#: ../storage/mac/index.md:3
msgid ""
"Important: Once you plug in the Nitrokey, your computer will start the "
"Keyboard Setup Assistant. Don't run through this assistant but exit it "
"right away."
msgstr ""

#: ../storage/mac/index.md:4
msgid ""
"Download and start the Nitrokey App. Perhaps you want to store it on the "
"unencrypted partition of your Nitrokey Storage"
msgstr ""

#: ../storage/mac/index.md:10
msgid "::: tip  Note"
msgstr ""

#: ../storage/mac/index.md:11
msgid ""
"For some Versions of MacOS it is necessary to install custom ccid driver "
"(for information see here), but in general MacOS should have the driver "
"onboard."
msgstr ""

#: ../storage/mac/index.md:12
msgid ""
"For many use cases described, it is necessary to have either OpenPGP or "
"S/MIME keys installed on the device (see below). :::"
msgstr ""

#: ../storage/mac/smime-email-encryption-with-outlook.md:1
#: ../storage/windows/smime-email-encryption-with-outlook.md:1
msgid "S/MIME Email Encryption with Outlook"
msgstr ""

#: ../storage/mac/smime-email-encryption-with-outlook.md:7
#: ../storage/windows/smime-email-encryption-with-outlook.md:7
msgid ""
"If you do not have a S/MIME key-certificate pair installed on your "
"Nitrokey yet, please look at this page first."
msgstr ""

#: ../storage/mac/smime-email-encryption-with-outlook.md:9
#: ../storage/windows/smime-email-encryption-with-outlook.md:9
msgid ""
"You need to have OpenSC installed on your System. Please have a look at "
"the wiki page of the OpenSC project."
msgstr ""

#: ../storage/mac/smime-email-encryption-with-outlook.md:15
#: ../storage/windows/smime-email-encryption-with-outlook.md:15
msgid "Settings in Outlook"
msgstr ""

#: ../storage/mac/smime-email-encryption-with-outlook.md:17
#: ../storage/windows/smime-email-encryption-with-outlook.md:17
msgid ""
"Before you can use the Nitrokey in Outlook you have to activate  S/MIME "
"encryption. You can achieve this by clicking on to 'Start' ->  'Options' "
"and clicking on 'Trust Center' in the options window. In  section 'Email "
"Security' you can choose your S/MIME identity. Your  certificate should "
"already be recognized by Outlook."
msgstr ""

#: ../storage/mac/smime-email-encryption-with-outlook.md:27
#: ../storage/windows/smime-email-encryption-with-outlook.md:27
msgid ""
"When composing a mail you can now choose to encrypt and sign the message "
"in the 'Options' ribbon of the compose window."
msgstr ""

#: ../storage/mac/smime-email-encryption-with-outlook.md:31
#: ../storage/windows/smime-email-encryption-with-outlook.md:31
msgid ""
"::: tip Note Outlook will only encrypt message to mail addresses which "
"are saved in  your address book. So make sure, that the persons you want "
"to write an  encrypted mail to have an entry in Outlook's contacts. You "
"can ask the  person to write you a signed mail, so that you can import "
"the  certificate information. :::"
msgstr ""

#: ../storage/mac/smime-email-encryption-with-outlook.md:33
#: ../storage/windows/smime-email-encryption-with-outlook.md:33
msgid ""
"Depending on your certificate or the certificate of your partners you may"
" have to import a so-called root certificate. This is the  certificate of"
" the party which issued the certificate you or your  partner uses. You "
"should usually got informed if this is necessary."
msgstr ""

#: ../storage/windows/index.md:1
msgid "Nitrokey Storage, Windows"
msgstr ""

#: ../storage/windows/index.md:3
msgid ""
"Connect your Nitrokey to your computer and confirm all dialogs so that "
"the USB smart card device driver gets installed almost automatically."
msgstr ""

#: ../storage/windows/index.md:5
msgid ""
"::: tip Note Windows Vista, 7, 8 and 10 may fail to install an additional"
" device driver for the smart card. Its safe to ignore this warning. :::"
msgstr ""

#: ../storage/windows/index.md:8
msgid ""
"Download and start the Nitrokey App. Perhaps you want to store it on the "
"unencrypted partition of your Nitrokey Storage. There won't open a "
"window, but an icon appears in the system tray (see screenshot below). "
"Please right-click on this icon to use all the options of the App."
msgstr ""

#: ../storage/windows/openpgp-email-encryption-with-outlook.md:1
msgid "OpenPGP Email Encryption with Outlook"
msgstr ""

#: ../storage/windows/openpgp-email-encryption-with-outlook.md:3
msgid ""
"::: tip Note Unfortunately, there is no solution to use OpenPGP in "
"Outlook for macOS yet. :::"
msgstr ""

#: ../storage/windows/openpgp-email-encryption-with-outlook.md:9
msgid ""
"If you do not have PGP-Keys on your Nitrokey yet, please look at this "
"page first."
msgstr ""

#: ../storage/windows/openpgp-email-encryption-with-outlook.md:11
msgid ""
"You need to have GnuPG installed on your System. The newest GnuPG version"
" for Windows can be found here. You need to make sure to have \"GpgOL\" "
"checked during installation process (see below)."
msgstr ""

#: ../storage/windows/openpgp-email-encryption-with-outlook.md:17
msgid ""
"After installing GPG4Win along with GpgOL, you will see a new icon "
"labeled \"Secure\" in the composing window. To encrypt and sign a mail "
"you just click on the sign like seen below."
msgstr ""

#: ../storage/windows/openpgp-email-encryption-with-outlook.md:21
msgid ""
"GnuPG will start signing and encrypting the mail as soon as you click on "
"'send'. You are requested to choose the identity you want to sign with "
"and encrypt for."
msgstr ""

#: ../storage/windows/openpgp-email-encryption-with-outlook.md:25
msgid ""
"Furthermore, you are asked for typing in the User PIN of the Nitrokey for"
" signing the mail."
msgstr ""

#: ../storage/windows/openpgp-email-encryption-with-outlook.md:29
msgid ""
"You will be asked automatically for your User PIN if you want to read an "
"encrypted mail."
msgstr ""

#: ../storage/windows/replacing-nitrokey-storage-pcb.md:1
msgid "Replacing Nitrokey Storage PCB"
msgstr ""

#: ../storage/windows/replacing-nitrokey-storage-pcb.md:3
msgid ""
"You can replace your Nitrokey Storage hardware (PCB) within a few minutes"
" by following these steps:"
msgstr ""

#: ../storage/windows/replacing-nitrokey-storage-pcb.md:5
msgid ""
"Backup all your data from the Nitrokey. Understand that the RSA keys will"
" be replaced and all data be destroyed!"
msgstr ""

#: ../storage/windows/replacing-nitrokey-storage-pcb.md:6
msgid "Remove the lid from the USB socket of the Nitrokey."
msgstr ""

#: ../storage/windows/replacing-nitrokey-storage-pcb.md:7
msgid "Use a knife to open the casing until you have the PCB removed completely."
msgstr ""

#: ../storage/windows/replacing-nitrokey-storage-pcb.md:8
msgid ""
"Remove the smart card and the MicroSD card from the PCB and push them in "
"the new replacement PCB."
msgstr ""

#: ../storage/windows/replacing-nitrokey-storage-pcb.md:9
msgid ""
"Place the PCB in the new bottom casing, the one with the CE and FC "
"engravings."
msgstr ""

#: ../storage/windows/replacing-nitrokey-storage-pcb.md:10
msgid ""
"Add the other casing (with the Nitrokey label) on top of the bottom "
"casing. Press both casings carefully together until it clicks and the gap"
" is completely closed."
msgstr ""

#: ../storage/windows/replacing-nitrokey-storage-pcb.md:11
msgid ""
"Connect the Nitrokey to your computer. Start the Nitrokey App and select "
"“Destroy Encrypted Data” from \"Configuration\" sub-menu. Note that this "
"will destroy all existing RSA keys and encrypted data."
msgstr ""

#: ../storage/windows/replacing-nitrokey-storage-pcb.md:13
msgid ""
"Your Nitrokey is now ready to use. In case of any problems, please send "
"us an email."
msgstr ""

#: ../storage/windows/two-factor-authentication-microsoft.md:1
msgid "Two-factor Authentication for Microsoft Account"
msgstr ""

#: ../storage/windows/two-factor-authentication-microsoft.md:3
msgid ""
"These are the basic steps for registering the Nitrokey Pro or Nitrokey "
"Storage as a second factor of a Microsoft account."
msgstr ""

#: ../storage/windows/two-factor-authentication-microsoft.md:5
msgid ""
"Visit https://account.live.com/proofs/Manage/additional and log in to "
"your Microsoft account if prompted."
msgstr ""

#: ../storage/windows/two-factor-authentication-microsoft.md:11
msgid "Click on \"Set up two-step verification\"."
msgstr ""

#: ../storage/windows/two-factor-authentication-microsoft.md:15
msgid "Click on \"Next\"."
msgstr ""

#: ../storage/windows/two-factor-authentication-microsoft.md:19
msgid "Now it is important to click on \"set up a different Authenticator app\"."
msgstr ""

#: ../storage/windows/two-factor-authentication-microsoft.md:23
msgid "Click on \"I can't scan the bar code\"."
msgstr ""

#: ../storage/windows/two-factor-authentication-microsoft.md:27
msgid "Insert and save secret code into the Nitrokey App."
msgstr ""

#: ../storage/windows/two-factor-authentication-microsoft.md:35
msgid "Enter code generated by Nitrokey App to confirm."
msgstr ""

#: ../storage/windows/two-factor-authentication-microsoft.md:41
msgid "Click \"Next\" and then \"Finish\"."
msgstr ""

#: ../storage/windows/two-factor-authentication-microsoft.md:47
msgid ""
"From now on, when signing in you need an OTP additionally to your "
"password."
msgstr ""

#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:1
msgid "Windows Logon and S/MIME Email Encryption with Active Directory"
msgstr ""

#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:3
msgid ""
"Please note that this driver is still in development/testing. Please tell"
" us your experiences! See our contact page."
msgstr ""

#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:7
msgid ""
"This guide assumes that an Active Directory server with role 'Active "
"Directory Certificate Services' is installed and running on a server. "
"These instructions are based on Nitrokey Storage 2 and Nitrokey Pro 2 "
"only."
msgstr ""

#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:9
msgid "Installing OpenPGP-CSP"
msgstr ""

#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:11
msgid ""
"This step is needed for clients to use the OpenPGP-CSP driver. Download "
"and install the latest version of the installer file 'SetupOpenPGPCsp' "
"for your system architecture, for 'SetupOpenPGPCsp_x64.msi' for 64-bit "
"systems."
msgstr ""

#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:13
msgid ""
"You may want to install the driver on the server as well for being able "
"to enforce the use of this driver in the template (see below)."
msgstr ""

#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:15
msgid "Creating Certificate Template on Server Side"
msgstr ""

#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:17
msgid ""
"On Active Directory Server open certsrv.msc to manage your certificate "
"templates. Right click on 'Certificate Templates' and choose 'Manage'"
msgstr ""

#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:21
msgid ""
"Now right click on 'Smartcard Logon' template and click 'Duplicate', to "
"create a new template on basis of this standard template. Rename template"
" to 'OpenPGP Card Logon and Email' or alike."
msgstr ""

#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:25
msgid ""
"Under 'Request Handling', you can choose the OpenPGP-CSP as the one and "
"only Cryptography Service Provider (click the Button labeled 'CSPs...'). "
"For this to work, you need to install the driver on the server as well "
"and you have to insert a Nitrokey beforehand. This is optional. You can "
"let the user choose, which CSP to use."
msgstr ""

#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:31
msgid ""
"For enabling S/MIME email encryption go to 'Subject name'. Tick the "
"checkbox 'E-Mail name' (note: You must save the mail addresses of your "
"users in the corresponding Active Directory field!)."
msgstr ""

#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:35
msgid ""
"Then go to 'Extensions', there you edit the applications guideline and "
"add 'Secure Email'."
msgstr ""

#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:41
msgid "Request Certificate on Client (Domain Member)"
msgstr ""

#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:43
msgid ""
"To request a certificate for a domain member, you have to open "
"certmgr.msc. Right click on folder 'Personal->Certificates' and click "
"'All Tasks->Request New Certificate and choose the template you created "
"on the AD."
msgstr ""

#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:47
msgid ""
"If you did not enforce the usage of OpenPGP-CSP you have to choose it "
"here now."
msgstr ""

#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:53
msgid "Next you choose the Authentication slot for the certificate."
msgstr ""

#: ../storage/windows/windows-logon-and-smime-email-encryption-with-active-directory.md:55
msgid ""
"You are now ready to logon on the computer with the Nitrokey instead of "
"your password and you can use S/MIME email encryption/signing with the "
"Nitrokey. The driver has to be installed on every computer you want to "
"use the certificate on."
msgstr ""
