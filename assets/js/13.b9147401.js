(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{524:function(e,n,t){"use strict";t.r(n);var r=t(33),a=Object(r.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"elliptic-curves-ecc-support"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elliptic-curves-ecc-support"}},[e._v("#")]),e._v(" Elliptic Curves (ECC) Support")]),e._v(" "),t("p",[t("strong",[e._v("RSA-2048 Becomes Increasingly Insecure")])]),e._v(" "),t("p",[e._v("For security reasons, the German Federal Office for Information  Security (Bundesamt für Sicherheit in der Informationstechnik, BSI) no  longer recommends RSA keys with a length of 2048 bit "),t("a",{attrs:{href:"https://www.bsi.bund.de/SharedDocs/Downloads/EN/BSI/Publications/TechGuidelines/TG02102/BSI-TR-02102-1.pdf;jsessionid=064DAA7AD3195C1C87B1C71B2760DB4E.1_cid360?__blob=publicationFile&v=7",target:"_blank",rel:"noopener noreferrer"}},[e._v("to be used after 2022"),t("OutboundLink")],1),e._v(". This means that longer keys will need to come into use in the  foreseeable future. Assuming a usage period of five years, is is already necessary to generate longer keys. However, longer RSA keys with 3072  bit or 4096 bit are significantly slower. For this reason the new  Nitrokey Storage 2 and Pro 2 (resp. the integrated OpenPGP Card version  3.3) supports encryption by means of "),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Elliptic-curve_cryptography",target:"_blank",rel:"noopener noreferrer"}},[e._v("elliptic-curve cryptography (ECC)"),t("OutboundLink")],1),e._v(". This method is considered to be just as secure with smaller ECC keys as longer RSA keys and is also considerably faster.")]),e._v(" "),t("p",[t("strong",[e._v("Basics of Elliptic-Curve Cryptography")])]),e._v(" "),t("p",[e._v("In contrast to RSA, there are many different forms (so-called curves) of elliptic-curve cryptography. Notably, the "),t("a",{attrs:{href:"https://www.schneier.com/essays/archives/2007/11/did_nsa_put_a_secret.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("NSA was involved"),t("OutboundLink")],1),e._v(" in the development of the NIST curves. Even if there is no evidence of  back doors in the curves, using a certain curve can pose a question of  trust. Fortunately the new Nitrokey Storage 2 and Pro 2 support two kind of curves, namely NIST and Brainpool. In what follows we will use  Brainpool curves. "),t("a",{attrs:{href:"https://arstechnica.com/information-technology/2013/10/a-relatively-easy-to-understand-primer-on-elliptic-curve-cryptography/",target:"_blank",rel:"noopener noreferrer"}},[e._v("This article"),t("OutboundLink")],1),e._v(" provides a good entry point for gaining a general understanding of elliptic-curve cryptography.")]),e._v(" "),t("p",[t("strong",[e._v("System")]),e._v(" "),t("strong",[e._v("Requirements")])]),e._v(" "),t("p",[e._v("In order to create keys based on elliptic curves a Nitrokey Storage 2 / Pro 2 and GnuPG version 2.1.17 or higher are required.")]),e._v(" "),t("p",[e._v("You can read Nitrokey's OpenPGP Card version via ‘gpg2 —card-status’:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("> gpg2 --card-status\nReader ...........: 20A0:...\nApplication ID ...: D276...\nVersion ..........: 3.3\n...\n")])])]),t("p",[e._v("The 'Version' field represents the version of the OpenPGP Card  integrated in the Nitrokey — in this case it is 3.3 as needed for  Elliptic-curve cryptography. OpenPGP Card version 2.2 doesn't support  ECC.")]),e._v(" "),t("p",[e._v("You can learn about the installed version of GnuPG via ‘gpg2  --version’. At least version 2.1.16 is required. The newest GnuPG  version for Windows can be found "),t("a",{attrs:{href:"https://www.gpg4win.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v(" and the newest version for MacOS can be found "),t("a",{attrs:{href:"https://gpgtools.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v(". A suitable version of GnuPG is included in the GNU/Linux distributions  Ubuntu (since 18.04), Debian (from Stretch onwards), Arch Linux, Fedora  (from Release 26 onwards) and openSUSE Tumbleweed. At the end of this  articles are instructions how to manually update GnuPG on older Ubuntu  versions.")]),e._v(" "),t("p",[e._v("Important: GnuPG 2.0 is still being used, but support for it has been discontinuied in 2017. All communication partners must use GnuPG 2.1 or newer for email encryption by means of ECC, otherwise incompatibility  issues might arise. Therefore you should only use ECC if you are sure  you will be able to circumvent this problem.")]),e._v(" "),t("p",[t("strong",[e._v("Key Generation on the Nitrokey Storage 2 / Pro 2")])]),e._v(" "),t("p",[e._v("Once these requirements are fulfilled, you can get started. (Warning: existing keys will be overwritten in the process!) You now have two options. The first option is to create the key  directly on the Nitrokey Storage 2 / Pro 2. The benefit here is that the key will never be outside the device and as such can never be read out. The second option is to import a previously locally generated key. The  advantage in this case is that you can securely store a backup of the  key, which can then be restored in case the Nitrokey is lost. Only the  first option is described below. In order to create a key with backup,  you can access "),t("a",{attrs:{href:"https://www.gniibe.org/memo/software/gpg/keygen-25519.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("the following instructions"),t("OutboundLink")],1),e._v(" and use this "),t("a",{attrs:{href:"https://wiki.fsfe.org/TechDocs/CardHowtos/CardWithSubkeysUsingBackups",target:"_blank",rel:"noopener noreferrer"}},[e._v("general information"),t("OutboundLink")],1),e._v(" to transfer the key to the Nitrokey.")]),e._v(" "),t("p",[e._v("Within GnuPG there is already a ‘generate’ command, which can be used to easily create keys on the device. However it is not as yet possible  to select the type of key directly, so the key must first be prepared.  We use the following commands for this:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('> gpg-connect-agent "SCD SETATTR KEY-ATTR --force 1 19 brainpoolP256r1" /bye\n> gpg-connect-agent "SCD SETATTR KEY-ATTR --force 2 18 brainpoolP256r1" /bye\n> gpg-connect-agent "SCD SETATTR KEY-ATTR --force 3 19 brainpoolP256r1" /bye\n')])])]),t("p",[e._v("Alternatively, other curves could be selected, as described in the next section.")]),e._v(" "),t("p",[e._v("Now we enter ‘gpg2 --card-edit’ and see that brainpoolP256r1 is under ‘key attributes’ instead of rsa2048.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("> gpg2 --card-edit\nReader ...........: 20A0:4109:0000000000000:0\nApplication ID ...: D276000124010303000500005F100000\nVersion ..........: 3.3\nManufacturer .....: ZeitControl\nSerial number ....: 00005F10\nName of cardholder: [not set]\nLanguage prefs ...: [not set]\nSex ..............: unspecified\nURL of public key : [not set]\nLogin data .......: [not set]\nSignature PIN ....: forced\nKey attributes ...: brainpoolP256r1 brainpoolP256r1 brainpoolP256r1\nMax. PIN lengths .: 64 64 64\nPIN retry counter : 3 0 3\nSignature counter : 0\nSignature key ....: [none]\nEncryption key....: [none]\nAuthentication key: [none]\nGeneral key info..: [none]\n")])])]),t("p",[e._v("Then we create the key.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("gpg/card> admin\nAdmin commands are allowed\n \ngpg/card> generate\nMake off-card backup of encryption key? (Y/n) n\nPlease note that the factory settings of the PINs are\nPIN = '123456' Admin PIN = '12345678'\nYou should change them using the command --change-pin\nPlease specify how long the key should be valid.\n0 = key does not expire\n<n> = key expires in n days\n<n>w = key expires in n weeks\n<n>m = key expires in n months\n<n>y = key expires in n years\nKey is valid for? (0)\nKey does not expire at all\nIs this correct? (y/N) y\nGnuPG needs to construct a user ID to identify your key.\nReal name: Jane Doe\nEmail address: jane.doe@example.org\nComment:\nYou selected this USER-ID:\n\"Jane Doe <jane.doe@example.org>\"\nChange (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? O\ngpg: key 7F8C68E1B084E169 marked as ultimately trusted\ngpg: revocation certificate stored as '/home/jane/.gnupg/openpgp-revocs.d/F8C00BC1636A7D7604A31A877F8C68E1B084E169.rev'\npublic and secret key created and signed.\n")])])]),t("p",[e._v("The Nitrokey now incorporates elliptic-curve cryptography instead of RSA keys and can be used as usual.")]),e._v(" "),t("p",[t("strong",[e._v("Available Curves")])]),e._v(" "),t("p",[e._v("In the above procedure we chose the Brainpool curves. Alternatively, NIST curves can be used. The configuration is carried out as follows:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('> gpg-connect-agent "SCD SETATTR KEY-ATTR --force 1 19 nistp256" /bye\n> gpg-connect-agent "SCD SETATTR KEY-ATTR --force 2 18 nistp256" /bye\n> gpg-connect-agent "SCD SETATTR KEY-ATTR --force 3 19 nistp256" /bye\n')])])]),t("p",[t("strong",[e._v("Update of GnuPG on Ubuntu")])]),e._v(" "),t("p",[e._v("The following steps are needed only if you are running a  Ubuntu version older than 18.04! You can install GnuPG 2.1.18 on such  system with the commands below. This involves newer Debian packages,  which is the easiest option. This approach has been tested successfully  on Ubuntu 17.10 and propbably works on 16.04 as well. However, the  occurence of problems during usage can‘t be excluded.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ mkdir gnupg_tmp\n$ cd gnupg_tmp\n$ wget http://ftp.debian.org/debian/pool/main/g/gnupg2/gnupg_2.1.18-8~deb9u1_amd64.deb\n$ wget http://ftp.debian.org/debian/pool/main/g/gnupg2/dirmngr_2.1.18-8~deb9u1_amd64.deb\n$ wget http://ftp.debian.org/debian/pool/main/g/gnupg2/gnupg-agent_2.1.18-8~deb9u1_amd64.deb\n$ wget http://ftp.debian.org/debian/pool/main/g/gnupg2/scdaemon_2.1.18-8~deb9u1_amd64.deb\n$ sudo dpkg -i *\n$ cd ..\n$ rm -rf gnupg_tmp\n")])])]),t("p",[e._v("In case you want to undo the installation, you have to execute the following commands:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo dpkg --remove --force-depends gnupg dirmngr gnupg-agent scdaemon\n  # (removes manually installed packages)\n$ sudo apt-get install gnupg dirmngr gnupg-agent scdaemon\n  # (installs the appropriate packages from regular package repositories)\n")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);